// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = ["DateTools"];
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			var tmp = this.r;
			var tmp1 = len < 0 ? s : HxOverrides.substr(s,0,pos + len);
			this.r.m = tmp.exec(tmp1);
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
var thx_bigint_Decimals = function() { };
thx_bigint_Decimals.__name__ = ["thx","bigint","Decimals"];
thx_bigint_Decimals.fromInt = function(value) {
	return new thx_bigint_DecimalImpl(thx_bigint_Bigs.fromInt(value),0);
};
thx_bigint_Decimals.fromFloat = function(value) {
	if(!isFinite(value)) {
		throw new js__$Boot_HaxeError("Value is not a finite Float: " + value);
	}
	return thx_bigint_Decimals.parse("" + value);
};
thx_bigint_Decimals.parse = function(value) {
	value = value.toLowerCase();
	var pose = value.indexOf("e");
	if(pose > 0) {
		var isNeg = false;
		var f = value.substring(0,pose);
		var e = value.substring(pose + 1);
		if(e.substring(0,1) == "-") {
			isNeg = true;
			e = e.substring(1);
		}
		var p = thx_bigint_Bigs.parseBase(e,10);
		var m = thx_bigint_Small.ten.pow(p);
		if(isNeg) {
			return thx_bigint_Decimals.parse(f).divideWithScale(thx__$Decimal_Decimal_$Impl_$.fromBigInt(m),Std.parseInt(e));
		} else {
			return thx_bigint_Decimals.parse(f).multiply(thx__$Decimal_Decimal_$Impl_$.fromBigInt(m));
		}
	}
	var pdec = value.indexOf(".");
	if(pdec < 0) {
		return new thx_bigint_DecimalImpl(thx_bigint_Bigs.parseBase(value,10),0);
	}
	var i = value.substring(0,pdec) + value.substring(pdec + 1);
	return new thx_bigint_DecimalImpl(thx_bigint_Bigs.parseBase(i,10),value.length - pdec - 1);
};
Math.__name__ = ["Math"];
var thx_IAssertBehavior = function() { };
thx_IAssertBehavior.__name__ = ["thx","IAssertBehavior"];
thx_IAssertBehavior.prototype = {
	success: null
	,fail: null
	,warn: null
	,__class__: thx_IAssertBehavior
};
var thx_DefaultAssertBehavior = function() {
};
thx_DefaultAssertBehavior.__name__ = ["thx","DefaultAssertBehavior"];
thx_DefaultAssertBehavior.__interfaces__ = [thx_IAssertBehavior];
thx_DefaultAssertBehavior.prototype = {
	success: function(pos) {
	}
	,warn: function(message,pos) {
		haxe_Log.trace(message,pos);
	}
	,fail: function(message,pos) {
		throw new thx_error_AssertError(message,pos);
	}
	,__class__: thx_DefaultAssertBehavior
};
var thx_Assert = function() { };
thx_Assert.__name__ = ["thx","Assert"];
thx_Assert.contains = function(possibilities,value,msg,pos) {
	if(thx_Arrays.contains(possibilities,value)) {
		thx_Assert.pass(msg,pos);
	} else {
		thx_Assert.fail(msg == null ? "value " + Std.string(value) + " not found in the expected possibilities " + Std.string(possibilities) : msg,pos);
	}
};
thx_Assert.equals = function(expected,value,msg,pos) {
	if(msg == null) {
		msg = "expected " + Std.string(expected) + " but it is " + Std.string(value);
	}
	thx_Assert.isTrue(expected == value,msg,pos);
};
thx_Assert.excludes = function(match,values,msg,pos) {
	if(!thx_Arrays.contains(values,match)) {
		thx_Assert.pass(msg,pos);
	} else {
		thx_Assert.fail(msg == null ? "values " + Std.string(values) + " do contain " + Std.string(match) : msg,pos);
	}
};
thx_Assert.fail = function(msg,pos) {
	if(msg == null) {
		msg = "failure expected";
	}
	thx_Assert.isTrue(false,msg,pos);
};
thx_Assert.isContainedIn = function(match,values,msg,pos) {
	if(thx_Arrays.contains(values,match)) {
		thx_Assert.pass(msg,pos);
	} else {
		thx_Assert.fail(msg == null ? "values " + Std.string(values) + " do not contain " + Std.string(match) : msg,pos);
	}
};
thx_Assert.isFalse = function(value,msg,pos) {
	if(null == msg) {
		msg = "expected false";
	}
	thx_Assert.isTrue(value == false,msg,pos);
};
thx_Assert["is"] = function(value,type,msg,pos) {
	if(msg == null) {
		msg = "expected type " + (js_Boot.__instanceof(type,ValueType) ? thx_Types.toString(type) : js_Boot.__instanceof(type,Class) ? Type.getClassName(type) : js_Boot.__instanceof(type,Enum) ? Type.getEnumName(type) : thx_Types.toString(Type["typeof"](type))) + " but it is " + thx_Types.toString(Type["typeof"](value));
	}
	thx_Assert.isTrue(js_Boot.__instanceof(value,type),msg,pos);
};
thx_Assert.isNull = function(value,msg,pos) {
	if(msg == null) {
		msg = "expected null but it is " + Std.string(value);
	}
	thx_Assert.isTrue(value == null,msg,pos);
};
thx_Assert.isTrue = function(cond,msg,pos) {
	if(cond) {
		thx_Assert.behavior.success(pos);
	} else {
		thx_Assert.behavior.fail(msg,pos);
	}
};
thx_Assert.matches = function(pattern,value,msg,pos) {
	if(msg == null) {
		msg = "the value " + Std.string(value) + " does not match the provided pattern";
	}
	thx_Assert.isTrue(pattern.match(value),msg,pos);
};
thx_Assert.nearEquals = function(expected,value,approx,msg,pos) {
	if(msg == null) {
		msg = "expected " + expected + " but it is " + value;
	}
	thx_Assert.isTrue(thx_Floats.nearEquals(expected,value,approx),msg,pos);
	return;
};
thx_Assert.notEquals = function(expected,value,msg,pos) {
	if(msg == null) {
		msg = "expected " + Std.string(expected) + " and test value " + Std.string(value) + " should be different";
	}
	thx_Assert.isFalse(expected == value,msg,pos);
};
thx_Assert.notNull = function(value,msg,pos) {
	if(null == msg) {
		msg = "expected not null";
	}
	thx_Assert.isTrue(value != null,msg,pos);
};
thx_Assert.pass = function(msg,pos) {
	if(msg == null) {
		msg = "pass expected";
	}
	thx_Assert.isTrue(true,msg,pos);
};
thx_Assert.raises = function(method,type,msgNotThrown,msgWrongType,pos) {
	try {
		method();
		if(null == msgNotThrown) {
			var name = null == type ? "Dynamic" : js_Boot.__instanceof(type,ValueType) ? thx_Types.toString(type) : js_Boot.__instanceof(type,Class) ? Type.getClassName(type) : js_Boot.__instanceof(type,Enum) ? Type.getEnumName(type) : thx_Types.toString(Type["typeof"](type));
			msgNotThrown = "exception of type " + name + " not raised";
		}
		thx_Assert.fail(msgNotThrown,pos);
	} catch( ex ) {
		haxe_CallStack.lastException = ex;
		if (ex instanceof js__$Boot_HaxeError) ex = ex.val;
		if(null == type) {
			thx_Assert.pass(null,pos);
		} else {
			if(null == msgWrongType) {
				var name1 = js_Boot.__instanceof(type,ValueType) ? thx_Types.toString(type) : js_Boot.__instanceof(type,Class) ? Type.getClassName(type) : js_Boot.__instanceof(type,Enum) ? Type.getEnumName(type) : thx_Types.toString(Type["typeof"](type));
				msgWrongType = "expected throw of type " + name1 + " but it is " + Std.string(ex);
			}
			thx_Assert.isTrue(js_Boot.__instanceof(ex,type),msgWrongType,pos);
		}
	}
};
thx_Assert.same = function(expected,value,recursive,msg,pos) {
	if(recursive == null) {
		recursive = true;
	}
	var status = { recursive : recursive, path : "", error : null};
	if(thx_Assert.sameAs(expected,value,status)) {
		thx_Assert.pass(msg,pos);
	} else {
		thx_Assert.fail(msg == null ? status.error : msg,pos);
	}
};
thx_Assert.stringContains = function(match,value,msg,pos) {
	if(value != null && value.indexOf(match) >= 0) {
		thx_Assert.pass(msg,pos);
	} else {
		thx_Assert.fail(msg == null ? "value " + thx_Strings.quote(value) + " does not contain " + thx_Strings.quote(match) : msg,pos);
	}
};
thx_Assert.stringSequence = function(sequence,value,msg,pos) {
	if(null == value) {
		thx_Assert.fail(msg == null ? "null argument value" : msg,pos);
		return;
	}
	var p = 0;
	var _g = 0;
	while(_g < sequence.length) {
		var s = sequence[_g];
		++_g;
		var p2 = value.indexOf(s,p);
		if(p2 < 0) {
			if(msg == null) {
				msg = "expected " + thx_Strings.quote(s) + " after ";
				if(p > 0) {
					msg += " " + thx_Strings.quote(thx_Strings.ellipsis(value,30));
				} else {
					msg += " begin";
				}
			}
			thx_Assert.fail(msg,pos);
			return;
		}
		p = p2 + s.length;
	}
	thx_Assert.pass(msg,pos);
};
thx_Assert.warn = function(msg,pos) {
	thx_Assert.behavior.warn(msg,pos);
};
thx_Assert.sameAs = function(expected,value,status) {
	var withPath = function(msg) {
		return msg + (thx_Strings.isEmpty(status.path) ? "" : " at " + status.path);
	};
	if(!thx_Types.sameType(expected,value)) {
		var texpected = thx_Types.toString(Type["typeof"](expected));
		var tvalue = thx_Types.toString(Type["typeof"](value));
		status.error = withPath("expected type " + texpected + " but it is " + tvalue);
		return false;
	}
	var _g = Type["typeof"](expected);
	switch(_g[1]) {
	case 0:case 1:case 3:
		if(expected != value) {
			status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
			return false;
		}
		return true;
	case 2:
		if(!thx_Floats.nearEquals(expected,value)) {
			status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
			return false;
		}
		return true;
	case 4:
		if(status.recursive || status.path == "") {
			var tfields = Reflect.fields(value);
			var fields = Reflect.fields(expected);
			var path = status.path;
			var _g1 = 0;
			while(_g1 < fields.length) {
				var field = fields[_g1];
				++_g1;
				HxOverrides.remove(tfields,field);
				status.path = path == "" ? field : "" + path + "." + field;
				if(!Object.prototype.hasOwnProperty.call(value,field)) {
					status.error = withPath("expected field " + status.path + " does not exist in " + Std.string(value));
					return false;
				}
				var e = Reflect.field(expected,field);
				if(Reflect.isFunction(e)) {
					continue;
				}
				var v = Reflect.field(value,field);
				if(!thx_Assert.sameAs(e,v,status)) {
					return false;
				}
			}
			if(tfields.length > 0) {
				var tmp = "the tested object has extra field(s) (" + tfields.join(", ") + ") not included in the expected ones";
				status.error = withPath(tmp);
				return false;
			}
		}
		if(thx_Iterators.isIterator(expected)) {
			if(!thx_Iterators.isIterator(value)) {
				status.error = withPath("expected an Iterable");
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues = thx_Iterators.toArray(expected);
				var vvalues = thx_Iterators.toArray(value);
				if(evalues.length != vvalues.length) {
					status.error = withPath("expected " + evalues.length + " values in Iterator but they are " + vvalues.length);
					return false;
				}
				var path1 = status.path;
				var _g11 = 0;
				var _g2 = evalues.length;
				while(_g11 < _g2) {
					var i = _g11++;
					status.path = path1 == "" ? "iterator[" + i + "]" : path1 + ("[" + i + "]");
					if(!thx_Assert.sameAs(evalues[i],vvalues[i],status)) {
						status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
						return false;
					}
				}
			}
			return true;
		}
		if(thx_Iterables.isIterable(expected)) {
			if(!thx_Iterables.isIterable(value)) {
				status.error = withPath("expected an Iterator");
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues1 = thx_Iterators.toArray($iterator(expected)());
				var vvalues1 = thx_Iterators.toArray($iterator(value)());
				if(evalues1.length != vvalues1.length) {
					status.error = withPath("expected " + evalues1.length + " values in Iterable but they are " + vvalues1.length);
					return false;
				}
				var path2 = status.path;
				var _g12 = 0;
				var _g3 = evalues1.length;
				while(_g12 < _g3) {
					var i1 = _g12++;
					status.path = path2 == "" ? "iterable[" + i1 + "]" : path2 + ("[" + i1 + "]");
					if(!thx_Assert.sameAs(evalues1[i1],vvalues1[i1],status)) {
						return false;
					}
				}
			}
			return true;
		}
		return true;
	case 5:
		if(!Reflect.compareMethods(expected,value)) {
			status.error = withPath("expected same function reference");
			return false;
		}
		return true;
	case 6:
		var c = _g[2];
		if(typeof(expected) == "string") {
			if(expected == value) {
				return true;
			} else {
				var tmp1 = "expected " + thx_Strings.quote(expected) + " but it is " + thx_Strings.quote(value);
				status.error = withPath(tmp1);
				return false;
			}
		}
		if((expected instanceof Array) && expected.__enum__ == null) {
			if(status.recursive || status.path == "") {
				if(expected.length != value.length) {
					status.error = withPath("expected " + Std.string(expected.length) + " elements but they are " + Std.string(value.length));
					return false;
				}
				var path3 = status.path;
				var _g13 = 0;
				var _g4 = expected.length;
				while(_g13 < _g4) {
					var i2 = _g13++;
					status.path = path3 == "" ? "array[" + i2 + "]" : path3 + ("[" + i2 + "]");
					if(!thx_Assert.sameAs(expected[i2],value[i2],status)) {
						status.error = withPath("expected " + Std.string(expected[i2]) + " but it is " + Std.string(value[i2]));
						return false;
					}
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(expected,Date)) {
			if(expected.getTime() != value.getTime()) {
				status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
				return false;
			}
			return true;
		}
		if(js_Boot.__instanceof(expected,haxe_io_Bytes)) {
			if(status.recursive || status.path == "") {
				var ebytes = expected;
				var vbytes = value;
				if(ebytes.length != vbytes.length) {
					return false;
				}
				var _g14 = 0;
				var _g5 = ebytes.length;
				while(_g14 < _g5) {
					var i3 = _g14++;
					if(ebytes.b[i3] != vbytes.b[i3]) {
						status.error = withPath("expected byte " + ebytes.b[i3] + " but it is " + vbytes.b[i3]);
						return false;
					}
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(expected,haxe_IMap)) {
			if(status.recursive || status.path == "") {
				var map = js_Boot.__cast(expected , haxe_IMap);
				var vmap = js_Boot.__cast(value , haxe_IMap);
				var _g6 = [];
				var k = map.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					_g6.push(k1);
				}
				var keys = _g6;
				var _g15 = [];
				var k2 = vmap.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					_g15.push(k3);
				}
				var vkeys = _g15;
				if(keys.length != vkeys.length) {
					status.error = withPath("expected " + keys.length + " keys but they are " + vkeys.length);
					return false;
				}
				var path4 = status.path;
				var _g21 = 0;
				while(_g21 < keys.length) {
					var key = keys[_g21];
					++_g21;
					status.path = path4 == "" ? "hash[" + Std.string(key) + "]" : path4 + ("[" + Std.string(key) + "]");
					if(!thx_Assert.sameAs(map.get(key),vmap.get(key),status)) {
						status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
						return false;
					}
				}
			}
			return true;
		}
		if(thx_Iterators.isIterator(expected)) {
			if(status.recursive || status.path == "") {
				var evalues2 = thx_Iterators.toArray(expected);
				var vvalues2 = thx_Iterators.toArray(value);
				if(evalues2.length != vvalues2.length) {
					status.error = withPath("expected " + evalues2.length + " values in Iterator but they are " + vvalues2.length);
					return false;
				}
				var path5 = status.path;
				var _g16 = 0;
				var _g7 = evalues2.length;
				while(_g16 < _g7) {
					var i4 = _g16++;
					status.path = path5 == "" ? "iterator[" + i4 + "]" : path5 + ("" + path5 + "[" + i4 + "]");
					if(!thx_Assert.sameAs(evalues2[i4],vvalues2[i4],status)) {
						status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
						return false;
					}
				}
			}
			return true;
		}
		if(thx_Iterables.isIterable(expected)) {
			if(status.recursive || status.path == "") {
				var evalues3 = thx_Iterators.toArray($iterator(expected)());
				var vvalues3 = thx_Iterators.toArray($iterator(value)());
				if(evalues3.length != vvalues3.length) {
					status.error = withPath("expected " + evalues3.length + " values in Iterable but they are " + vvalues3.length);
					return false;
				}
				var path6 = status.path;
				var _g17 = 0;
				var _g8 = evalues3.length;
				while(_g17 < _g8) {
					var i5 = _g17++;
					status.path = path6 == "" ? "iterable[" + i5 + "]" : path6 + ("[" + i5 + "]");
					if(!thx_Assert.sameAs(evalues3[i5],vvalues3[i5],status)) {
						return false;
					}
				}
			}
			return true;
		}
		if(status.recursive || status.path == "") {
			var o = expected;
			var fields1 = Type.getInstanceFields(o == null ? null : js_Boot.getClass(o));
			var path7 = status.path;
			var _g9 = 0;
			while(_g9 < fields1.length) {
				var field1 = fields1[_g9];
				++_g9;
				status.path = path7 == "" ? field1 : "" + path7 + "." + field1;
				var e1 = Reflect.field(expected,field1);
				if(Reflect.isFunction(e1)) {
					continue;
				}
				var v1 = Reflect.field(value,field1);
				if(!thx_Assert.sameAs(e1,v1,status)) {
					return false;
				}
			}
		}
		return true;
	case 7:
		var e2 = _g[2];
		var eexpected = Type.getEnumName(e2);
		var evalue = Type.getEnumName(Type.getEnum(value));
		if(eexpected != evalue) {
			status.error = withPath("expected enumeration of " + eexpected + " but it is " + evalue);
			return false;
		}
		if(status.recursive || status.path == "") {
			if(expected[1] != value[1]) {
				status.error = withPath("expected " + expected[0] + " but it is " + value[0]);
				return false;
			}
			var eparams = expected.slice(2);
			var vparams = value.slice(2);
			var path8 = status.path;
			var _g18 = 0;
			var _g10 = eparams.length;
			while(_g18 < _g10) {
				var i6 = _g18++;
				status.path = path8 == "" ? "enum[" + i6 + "]" : path8 + ("[" + i6 + "]");
				if(!thx_Assert.sameAs(eparams[i6],vparams[i6],status)) {
					status.error = withPath("expected " + Std.string(expected) + " but it is " + Std.string(value));
					return false;
				}
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
		break;
	}
};
var thx_bigint_BigIntImpl = function() { };
thx_bigint_BigIntImpl.__name__ = ["thx","bigint","BigIntImpl"];
thx_bigint_BigIntImpl.prototype = {
	sign: null
	,isSmall: null
	,abs: null
	,add: null
	,subtract: null
	,divide: null
	,multiply: null
	,modulo: null
	,random: null
	,negate: null
	,next: null
	,prev: null
	,pow: null
	,shiftLeft: null
	,shiftRight: null
	,square: null
	,isEven: null
	,isOdd: null
	,isUnit: null
	,isZero: null
	,compareTo: null
	,compareToAbs: null
	,not: null
	,and: null
	,or: null
	,xor: null
	,toFloat: null
	,toInt: null
	,toString: null
	,toStringWithBase: null
	,divMod: null
	,__class__: thx_bigint_BigIntImpl
};
var thx_bigint_Small = function(value) {
	this.sign = value < 0;
	this.value = value;
	this.isSmall = true;
};
thx_bigint_Small.__name__ = ["thx","bigint","Small"];
thx_bigint_Small.__interfaces__ = [thx_bigint_BigIntImpl];
thx_bigint_Small.prototype = {
	value: null
	,sign: null
	,isSmall: null
	,add: function(that) {
		if(this.isZero()) {
			return that;
		}
		if(that.isZero()) {
			return this;
		}
		if(this.sign != that.sign) {
			return this.subtract(that.negate());
		}
		if(that.isSmall) {
			return this.addSmall(that);
		} else {
			return this.addBig(that);
		}
	}
	,addSmall: function(small) {
		if(thx_bigint_Bigs.isPrecise(this.value + small.value)) {
			return new thx_bigint_Small(this.value + small.value);
		} else {
			var v = small.value;
			var tmp = thx_bigint_Bigs.smallToArray(v < 0 ? -v : v);
			var v1 = this.value;
			return new thx_bigint_Big(thx_bigint_Bigs.addSmall(tmp,v1 < 0 ? -v1 : v1),this.sign);
		}
	}
	,addBig: function(big) {
		var v = this.value;
		return new thx_bigint_Big(thx_bigint_Bigs.addSmall(big.value,v < 0 ? -v : v),this.sign);
	}
	,subtract: function(that) {
		if(this.isZero()) {
			return that.negate();
		}
		if(that.isZero()) {
			return this;
		}
		if(this.sign != that.sign) {
			return this.add(that.negate());
		}
		if(that.isSmall) {
			return this.subtractSmall(that);
		} else {
			return this.subtractBig(that);
		}
	}
	,subtractSmall: function(small) {
		return new thx_bigint_Small(this.value - small.value);
	}
	,subtractBig: function(big) {
		if(big.compareToAbsSmall(this) < 0) {
			return new thx_bigint_Small(this.value - big.toInt());
		}
		var v = this.value;
		return thx_bigint_Bigs.subtractSmall(big.value,v < 0 ? -v : v,this.value >= 0);
	}
	,divide: function(that) {
		return this.divMod(that).quotient;
	}
	,divMod: function(that) {
		if(that.isZero()) {
			throw new thx_Error("division by zero",null,{ fileName : "Small.hx", lineNumber : 77, className : "thx.bigint.Small", methodName : "divMod"});
		}
		if(that.isSmall) {
			return this.divModSmall(that);
		} else {
			return this.divModBig(that);
		}
	}
	,divModSmall: function(small) {
		var value = this.value / small.value;
		return { quotient : new thx_bigint_Small(value < 0.0 ? Math.ceil(value) : Math.floor(value)), remainder : new thx_bigint_Small(this.value % small.value)};
	}
	,divModBig: function(big) {
		var v = this.value;
		return new thx_bigint_Big(thx_bigint_Bigs.smallToArray(v < 0 ? -v : v),this.value < 0).divModBig(big);
	}
	,multiply: function(that) {
		if(that.isSmall) {
			return this.multiplySmall(that);
		} else {
			return this.multiplyBig(that);
		}
	}
	,multiplySmall: function(small) {
		if(thx_bigint_Bigs.isPrecise(this.value * small.value)) {
			return new thx_bigint_Small(this.value * small.value);
		}
		var v = small.value;
		var arr = thx_bigint_Bigs.smallToArray(v < 0 ? -v : v);
		var v1 = this.value;
		var abs = v1 < 0 ? -v1 : v1;
		if(abs < 10000000) {
			return new thx_bigint_Big(thx_bigint_Bigs.multiplySmall(arr,abs),this.sign != small.sign);
		} else {
			return new thx_bigint_Big(thx_bigint_Bigs.multiplyLong(arr,thx_bigint_Bigs.smallToArray(abs)),this.sign != small.sign);
		}
	}
	,multiplyBig: function(big) {
		var v = this.value;
		return new thx_bigint_Big(thx_bigint_Bigs.multiplyLong(big.value,thx_bigint_Bigs.smallToArray(v < 0 ? -v : v)),this.sign != big.sign);
	}
	,modulo: function(that) {
		return this.divMod(that).remainder;
	}
	,random: function() {
		return thx_bigint_Bigs.fromInt(Math.random() * this.value | 0);
	}
	,abs: function() {
		var v = this.value;
		return new thx_bigint_Small(v < 0 ? -v : v);
	}
	,negate: function() {
		return new thx_bigint_Small(-this.value);
	}
	,next: function() {
		return this.addSmall(thx_bigint_Small.one);
	}
	,prev: function() {
		return this.addSmall(thx_bigint_Small.negativeOne);
	}
	,pow: function(exp) {
		if(this.isZero()) {
			if(exp.isZero()) {
				return thx_bigint_Small.one;
			} else {
				return this;
			}
		}
		if(this.isUnit()) {
			if(this.sign) {
				if(exp.isEven()) {
					return thx_bigint_Small.one;
				} else {
					return thx_bigint_Small.negativeOne;
				}
			} else {
				return thx_bigint_Small.one;
			}
		}
		if(exp.sign) {
			return thx_bigint_Small.zero;
		}
		if(!exp.isSmall) {
			throw new thx_Error("The exponent " + Std.string(exp) + " is too large.",null,{ fileName : "Small.hx", lineNumber : 141, className : "thx.bigint.Small", methodName : "pow"});
		}
		var b = exp.value;
		if(thx_bigint_Bigs.canPower(this.value,b)) {
			return new thx_bigint_Small(Math.pow(this.value,b) | 0);
		}
		var v = this.value;
		return new thx_bigint_Big(thx_bigint_Bigs.smallToArray(v < 0 ? -v : v),this.sign).pow(exp);
	}
	,shiftLeft: function(n) {
		if(n < 0) {
			return this.shiftRight(-n);
		}
		if((n < 0 ? -n : n) > 10000000) {
			return this.multiply(thx_bigint_Small.two.pow(thx_bigint_Bigs.fromInt(n)));
		}
		var result = this;
		while(n >= thx_bigint_Bigs.powers2Length) {
			result = result.multiply(thx_bigint_Bigs.bigHighestPower2);
			n -= thx_bigint_Bigs.powers2Length - 1;
		}
		return result.multiply(thx_bigint_Bigs.bigPowersOfTwo[n]);
	}
	,shiftRight: function(n) {
		if(n < 0) {
			return this.shiftLeft(-n);
		}
		var remQuo;
		if((n < 0 ? -n : n) > 10000000) {
			remQuo = this.divMod(thx_bigint_Small.two.pow(thx_bigint_Bigs.fromInt(n)));
			if(remQuo.remainder.sign) {
				return remQuo.quotient.prev();
			} else {
				return remQuo.quotient;
			}
		}
		var result = this;
		while(n >= thx_bigint_Bigs.powers2Length) {
			if(result.isZero()) {
				return result;
			}
			remQuo = result.divMod(thx_bigint_Bigs.bigHighestPower2);
			if(remQuo.remainder.sign) {
				result = remQuo.quotient.prev();
			} else {
				result = remQuo.quotient;
			}
			n -= thx_bigint_Bigs.powers2Length - 1;
		}
		remQuo = result.divMod(thx_bigint_Bigs.bigPowersOfTwo[n]);
		if(remQuo.remainder.sign) {
			return remQuo.quotient.prev();
		} else {
			return remQuo.quotient;
		}
	}
	,square: function() {
		if(thx_bigint_Bigs.isPrecise(this.value * this.value)) {
			return new thx_bigint_Small(this.value * this.value);
		}
		var v = this.value;
		return new thx_bigint_Big(thx_bigint_Bigs.square(thx_bigint_Bigs.smallToArray(v < 0 ? -v : v)),false);
	}
	,isEven: function() {
		return (this.value & 1) == 0;
	}
	,isOdd: function() {
		return (this.value & 1) == 1;
	}
	,isZero: function() {
		return this.value == 0;
	}
	,isUnit: function() {
		var v = this.value;
		return (v < 0 ? -v : v) == 1;
	}
	,compareTo: function(that) {
		if(this.sign != that.sign) {
			if(this.sign) {
				return -1;
			} else {
				return 1;
			}
		}
		if(that.isSmall) {
			return this.compareToSmall(that);
		} else {
			return this.compareToBig(that);
		}
	}
	,compareToSmall: function(small) {
		return thx_Ints.compare(this.value,small.value);
	}
	,compareToBig: function(big) {
		var v = this.value;
		return thx_bigint_Bigs.compareToAbs(thx_bigint_Bigs.smallToArray(v < 0 ? -v : v),big.value) * (this.sign ? -1 : 1);
	}
	,compareToAbs: function(that) {
		if(that.isSmall) {
			return this.compareToAbsSmall(that);
		} else {
			return this.compareToAbsBig(that);
		}
	}
	,compareToAbsSmall: function(small) {
		var v = this.value;
		var v1 = small.value;
		return thx_Ints.compare(v < 0 ? -v : v,v1 < 0 ? -v1 : v1);
	}
	,compareToAbsBig: function(big) {
		var v = this.value;
		return thx_bigint_Bigs.compareToAbs(thx_bigint_Bigs.smallToArray(v < 0 ? -v : v),big.value);
	}
	,not: function() {
		return this.negate().prev();
	}
	,and: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a & b;
		});
	}
	,or: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a | b;
		});
	}
	,xor: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a ^ b;
		});
	}
	,toFloat: function() {
		return this.value;
	}
	,toInt: function() {
		return this.value;
	}
	,toString: function() {
		return "" + this.value;
	}
	,toStringWithBase: function(base) {
		return this.value.toString(base);
	}
	,__class__: thx_bigint_Small
};
var thx_bigint_Bigs = function() { };
thx_bigint_Bigs.__name__ = ["thx","bigint","Bigs"];
thx_bigint_Bigs.isPrecise = function(value) {
	if(-thx_bigint_Bigs.MAX_INT < value) {
		return value < thx_bigint_Bigs.MAX_INT;
	} else {
		return false;
	}
};
thx_bigint_Bigs.canMultiply = function(a,b) {
	if(a == 0 || b == 0) {
		return true;
	}
	var v = a * b;
	if(a != v / b) {
		return false;
	}
	return thx_bigint_Bigs.isPrecise(v);
};
thx_bigint_Bigs.canPower = function(a,b) {
	if(a == 0 || b == 0) {
		return true;
	}
	var a1 = Math.abs(a);
	var b1 = Math.abs(b);
	var v;
	try {
		v = Math.pow(a1,b1) | 0;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return false;
	}
	if((Math.pow(v,1.0 / b1) | 0) != a1) {
		return false;
	}
	return thx_bigint_Bigs.isPrecise(v);
};
thx_bigint_Bigs.canAdd = function(a,b) {
	var v = a + b;
	if(a > 0 && b > 0 && v < 0) {
		return false;
	}
	return thx_bigint_Bigs.isPrecise(v);
};
thx_bigint_Bigs.smallToArray = function(n) {
	thx_Assert.isTrue(n >= 0,"Bigs.smallToArray should always be non-negative: " + n,{ fileName : "Bigs.hx", lineNumber : 57, className : "thx.bigint.Bigs", methodName : "smallToArray"});
	if(n < 10000000) {
		return [n];
	}
	if(n < 100000000000000.0) {
		return [n % 10000000,Math.floor(n / 10000000)];
	}
	return [n % 10000000,Math.floor(n / 10000000) % 10000000,Math.floor(n / 100000000000000.0)];
};
thx_bigint_Bigs.arrayToSmall = function(arr) {
	thx_bigint_Bigs.trim(arr);
	var length = arr.length;
	if(length < 4 && thx_bigint_Bigs.compareToAbs(arr,thx_bigint_Bigs.MAX_INT_ARR) < 0) {
		switch(length) {
		case 0:
			return 0;
		case 1:
			return arr[0];
		case 2:
			return arr[0] + arr[1] * 10000000;
		default:
			return arr[0] + (arr[1] + arr[2] * 10000000) * 10000000;
		}
	}
	return null;
};
thx_bigint_Bigs.trim = function(v) {
	while(v.length > 1) {
		if(v[v.length - 1] != 0) {
			break;
		}
		v.pop();
	}
};
thx_bigint_Bigs.createArray = function(length) {
	var x = new Array(length);
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		x[i] = 0;
	}
	return x;
};
thx_bigint_Bigs.createFloatArray = function(length) {
	var x = new Array(length);
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		x[i] = 0.0;
	}
	return x;
};
thx_bigint_Bigs.add = function(a,b) {
	var l_a = a.length;
	var l_b = b.length;
	var r = new Array(l_a);
	var carry = 0;
	var sum;
	var i = 0;
	while(i < l_b) {
		sum = a[i] + b[i] + carry;
		if(sum >= 10000000) {
			carry = 1;
		} else {
			carry = 0;
		}
		r[i++] = sum - carry * 10000000;
	}
	while(i < l_a) {
		sum = a[i] + carry;
		if(sum == 10000000) {
			carry = 1;
		} else {
			carry = 0;
		}
		r[i++] = sum - carry * 10000000;
	}
	if(carry > 0) {
		r.push(carry);
	}
	return r;
};
thx_bigint_Bigs.addAny = function(a,b) {
	if(a.length >= b.length) {
		return thx_bigint_Bigs.add(a,b);
	}
	return thx_bigint_Bigs.add(b,a);
};
thx_bigint_Bigs.addSmall = function(a,carry) {
	var l = a.length;
	var r = new Array(l);
	var sum;
	var i = 0;
	while(i < l) {
		sum = a[i] - 10000000 + carry;
		carry = Math.floor(sum / 10000000);
		r[i++] = sum - carry * 10000000;
		++carry;
	}
	while(carry > 0) {
		r[i++] = carry % 10000000;
		carry = Math.floor(carry / 10000000);
	}
	return r;
};
thx_bigint_Bigs.compareToAbs = function(a,b) {
	if(a.length != b.length) {
		if(a.length > b.length) {
			return 1;
		} else {
			return -1;
		}
	}
	var i = a.length;
	while(--i >= 0) if(a[i] != b[i]) {
		if(a[i] > b[i]) {
			return 1;
		} else {
			return -1;
		}
	}
	return 0;
};
thx_bigint_Bigs.subtract = function(a,b) {
	var a_l = a.length;
	var b_l = b.length;
	var r = new Array(a_l);
	var borrow = 0;
	var i = 0;
	var difference;
	while(i < b_l) {
		difference = a[i] - borrow - b[i];
		if(difference < 0) {
			difference += 10000000;
			borrow = 1;
		} else {
			borrow = 0;
		}
		r[i++] = difference;
	}
	while(i < a_l) {
		difference = a[i] - borrow;
		if(difference < 0) {
			difference += 10000000;
		} else {
			r[i++] = difference;
			break;
		}
		r[i++] = difference;
	}
	while(i < a_l) {
		r[i] = a[i];
		++i;
	}
	thx_bigint_Bigs.trim(r);
	return r;
};
thx_bigint_Bigs.subtractAny = function(a,b,sign) {
	var value;
	if(thx_bigint_Bigs.compareToAbs(a,b) >= 0) {
		value = thx_bigint_Bigs.subtract(a,b);
	} else {
		value = thx_bigint_Bigs.subtract(b,a);
		sign = !sign;
	}
	var n = thx_bigint_Bigs.arrayToSmall(value);
	if(null != n) {
		if(sign) {
			n = -n;
		}
		return new thx_bigint_Small(n);
	}
	return new thx_bigint_Big(value,sign);
};
thx_bigint_Bigs.subtractSmall = function(a,b,sign) {
	var l = a.length;
	var r = new Array(l);
	var carry = -b;
	var i;
	var difference;
	var _g1 = 0;
	var _g = l;
	while(_g1 < _g) {
		var i1 = _g1++;
		difference = a[i1] + carry;
		carry = Math.floor(difference / 10000000);
		r[i1] = difference < 0 ? difference % 10000000 + 10000000 : difference;
	}
	var n = thx_bigint_Bigs.arrayToSmall(r);
	if(null != n) {
		if(sign) {
			n = -n;
		}
		return new thx_bigint_Small(n);
	}
	return new thx_bigint_Big(r,sign);
};
thx_bigint_Bigs.multiplyLong = function(a,b) {
	var a_l = a.length;
	var b_l = b.length;
	var l = a_l + b_l;
	var r = thx_bigint_Bigs.createFloatArray(l);
	var product;
	var carry;
	var i;
	var a_i;
	var b_j;
	var _g1 = 0;
	var _g = a_l;
	while(_g1 < _g) {
		var i1 = _g1++;
		a_i = a[i1];
		var _g3 = 0;
		var _g2 = b_l;
		while(_g3 < _g2) {
			var j = _g3++;
			b_j = b[j];
			product = a_i * b_j + r[i1 + j];
			var value = product / 10000000;
			if(value < 0.0) {
				carry = Math.ceil(value);
			} else {
				carry = Math.floor(value);
			}
			var value1 = product - carry * 10000000;
			r[i1 + j] = value1 < 0.0 ? Math.ceil(value1) : Math.floor(value1);
			r[i1 + j + 1] += carry;
		}
	}
	var arr = r.map(function(v) {
		return v | 0;
	});
	thx_bigint_Bigs.trim(arr);
	return arr;
};
thx_bigint_Bigs.multiplySmall = function(a,b) {
	var l = a.length;
	var r = new Array(l);
	var carry = 0.0;
	var product;
	var i = 0;
	var a_i;
	var bf = b;
	while(i < l) {
		a_i = a[i];
		product = carry + a[i] * bf;
		var value = product / 10000000;
		if(value < 0.0) {
			carry = Math.ceil(value);
		} else {
			carry = Math.floor(value);
		}
		r[i++] = product - carry * 10000000;
	}
	while(carry > 0) {
		r[i++] = carry % 10000000;
		var value1 = carry / 10000000;
		if(value1 < 0.0) {
			carry = Math.ceil(value1);
		} else {
			carry = Math.floor(value1);
		}
	}
	var arr = r.map(function(v) {
		return v | 0;
	});
	thx_bigint_Bigs.trim(arr);
	return arr;
};
thx_bigint_Bigs.shiftLeft = function(x,n) {
	var r = [];
	while(n-- > 0) r.push(0);
	return r.concat(x);
};
thx_bigint_Bigs.multiplyKaratsuba = function(x,y) {
	var a = x.length;
	var b = y.length;
	var n = a > b ? a : b;
	if(n <= 400) {
		return thx_bigint_Bigs.multiplyLong(x,y);
	}
	n = Math.ceil(n / 2);
	var b1 = x.slice(n);
	var a1 = x.slice(0,n);
	var d = y.slice(n);
	var c = y.slice(0,n);
	var ac = thx_bigint_Bigs.multiplyKaratsuba(a1,c);
	var bd = thx_bigint_Bigs.multiplyKaratsuba(b1,d);
	var abcd = thx_bigint_Bigs.multiplyKaratsuba(thx_bigint_Bigs.addAny(a1,b1),thx_bigint_Bigs.addAny(c,d));
	return thx_bigint_Bigs.addAny(thx_bigint_Bigs.addAny(ac,thx_bigint_Bigs.shiftLeft(thx_bigint_Bigs.subtract(thx_bigint_Bigs.subtract(abcd,ac),bd),n)),thx_bigint_Bigs.shiftLeft(bd,2 * n));
};
thx_bigint_Bigs.fromInt = function(value) {
	var abs = value < 0 ? -value : value;
	if(abs < 10000000) {
		return new thx_bigint_Small(value);
	} else {
		return new thx_bigint_Big(thx_bigint_Bigs.smallToArray(abs),value < 0);
	}
};
thx_bigint_Bigs.fromInt64 = function(value) {
	return thx_bigint_Bigs.parseBase(haxe__$Int64_Int64_$Impl_$.toString(value),10);
};
thx_bigint_Bigs.toInt64 = function(value) {
	return thx_Int64s.parse(value.toString());
};
thx_bigint_Bigs.fromFloat = function(value) {
	if(isNaN(value) || !isFinite(value)) {
		throw new thx_Error("Conversion to BigInt failed. Number is NaN or Infinite",null,{ fileName : "Bigs.hx", lineNumber : 305, className : "thx.bigint.Bigs", methodName : "fromFloat"});
	}
	var noFractions = value - value % 1;
	var result = thx_bigint_Small.zero;
	var neg = noFractions < 0.0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	var curr;
	while(rest >= 1) {
		curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			result = result.add(thx_bigint_Small.one.shiftLeft(i));
		}
		++i;
	}
	if(neg) {
		return result.negate();
	} else {
		return result;
	}
};
thx_bigint_Bigs.square = function(a) {
	var l = a.length;
	var r = thx_bigint_Bigs.createFloatArray(l + l);
	var product;
	var carry;
	var i;
	var a_i;
	var a_j;
	var _g1 = 0;
	var _g = l;
	while(_g1 < _g) {
		var i1 = _g1++;
		a_i = a[i1];
		var _g3 = 0;
		var _g2 = l;
		while(_g3 < _g2) {
			var j = _g3++;
			a_j = a[j];
			product = a_i * a_j + r[i1 + j];
			var value = product / 10000000;
			if(value < 0.0) {
				carry = Math.ceil(value);
			} else {
				carry = Math.floor(value);
			}
			var value1 = product - carry * 10000000;
			r[i1 + j] = value1 < 0.0 ? Math.ceil(value1) : Math.floor(value1);
			r[i1 + j + 1] += carry;
		}
	}
	var arr = r.map(function(v) {
		return v | 0;
	});
	thx_bigint_Bigs.trim(arr);
	return arr;
};
thx_bigint_Bigs.divMod1 = function(a,b) {
	var a_l = a.length;
	var b_l = b.length;
	var result = thx_bigint_Bigs.createFloatArray(b.length);
	var divisorMostSignificantDigit = b[b_l - 1];
	var lambda = Math.ceil(10000000 / (2 * divisorMostSignificantDigit));
	var remainder = thx_bigint_Bigs.multiplySmall(a,lambda).map(function(v) {
		return v;
	});
	var divisor = thx_bigint_Bigs.multiplySmall(b,lambda);
	var quotientDigit;
	var shift;
	var carry;
	var borrow;
	var i;
	var l;
	var q;
	if(remainder.length <= a_l) {
		remainder.push(0.0);
	}
	divisor.push(0);
	divisorMostSignificantDigit = divisor[b_l - 1];
	shift = a_l - b_l;
	while(shift >= 0) {
		quotientDigit = 9999999.;
		quotientDigit = Math.floor((remainder[shift + b_l] * 10000000 + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
		carry = 0.0;
		borrow = 0.0;
		l = divisor.length;
		var _g1 = 0;
		var _g = l;
		while(_g1 < _g) {
			var i1 = _g1++;
			carry += quotientDigit * divisor[i1];
			var value = carry / 10000000;
			if(value < 0.0) {
				q = Math.ceil(value);
			} else {
				q = Math.floor(value);
			}
			borrow += remainder[shift + i1] - (carry - q * 10000000);
			carry = q;
			if(borrow < 0.0) {
				remainder[shift + i1] = borrow + 10000000;
				borrow = -1.0;
			} else {
				remainder[shift + i1] = borrow;
				borrow = 0.0;
			}
		}
		while(borrow != 0) {
			--quotientDigit;
			carry = 0;
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				carry += remainder[shift + i2] - 10000000 + divisor[i2];
				if(carry < 0) {
					remainder[shift + i2] = carry + 10000000;
					carry = 0;
				} else {
					remainder[shift + i2] = carry;
					carry = 1;
				}
			}
			borrow += carry;
		}
		result[shift] = quotientDigit;
		--shift;
	}
	var arr = remainder.map(function(v1) {
		return v1 | 0;
	});
	var remainder1 = thx_bigint_Bigs.divModSmall(arr,lambda).q;
	var arr1 = result.map(function(v2) {
		return v2 | 0;
	});
	thx_bigint_Bigs.trim(arr1);
	var q1 = { small : thx_bigint_Bigs.arrayToSmall(arr1), big : arr1};
	var r = { small : thx_bigint_Bigs.arrayToSmall(remainder1), big : remainder1};
	return [q1,r];
};
thx_bigint_Bigs.divMod2 = function(a,b) {
	var a_l = a.length;
	var b_l = b.length;
	var result = [];
	var part = [];
	var guess;
	var xlen;
	var highx;
	var highy;
	var check;
	while(a_l != 0) {
		part.unshift(a[--a_l]);
		if(thx_bigint_Bigs.compareToAbs(part,b) < 0) {
			result.push(0);
			continue;
		}
		xlen = part.length;
		highx = part[xlen - 1] * 10000000 + part[xlen - 2];
		highy = b[b_l - 1] * 10000000 + b[b_l - 2];
		if(xlen > b_l) {
			highx = (highx + 1) * 10000000;
		}
		guess = Math.ceil(highx / highy);
		while(true) {
			check = thx_bigint_Bigs.multiplySmall(b,guess);
			if(thx_bigint_Bigs.compareToAbs(check,part) <= 0) {
				break;
			}
			--guess;
			if(!(guess != 0)) {
				break;
			}
		}
		result.push(guess);
		part = thx_bigint_Bigs.subtract(part,check);
	}
	result.reverse();
	return [{ small : thx_bigint_Bigs.arrayToSmall(result), big : result},{ small : thx_bigint_Bigs.arrayToSmall(part), big : part}];
};
thx_bigint_Bigs.divModSmall = function(value,lambda) {
	var length = value.length;
	var quotient = thx_bigint_Bigs.createArray(length);
	var i;
	var q;
	var remainder;
	var divisor;
	remainder = 0;
	i = length - 1;
	while(i >= 0) {
		divisor = remainder * 10000000 + value[i];
		var value1 = divisor / lambda;
		if(value1 < 0.0) {
			q = Math.ceil(value1);
		} else {
			q = Math.floor(value1);
		}
		remainder = divisor - q * lambda;
		quotient[i--] = q | 0;
	}
	return { q : quotient, r : remainder < 0.0 ? Math.ceil(remainder) : Math.floor(remainder)};
};
thx_bigint_Bigs.parseBase = function(text,base) {
	var val = thx_bigint_Small.zero;
	var pow = thx_bigint_Small.one;
	var bigBase = new thx_bigint_Small(base);
	var isNegative = text.substring(0,1) == "-";
	if(2 > base || base > 36) {
		throw new thx_Error("base (" + base + ") must be a number between 2 ad 36",null,{ fileName : "Bigs.hx", lineNumber : 475, className : "thx.bigint.Bigs", methodName : "parseBase"});
	}
	if(isNegative) {
		text = text.substring(1);
	}
	text = thx_Strings.trimCharsLeft(text,"0").toLowerCase();
	if(text.length == 0) {
		text = "0";
	}
	var e;
	var tmp;
	if(base == 10) {
		e = text.indexOf("e");
		tmp = e > 0;
	} else {
		tmp = false;
	}
	if(tmp) {
		var sexp = text.substring(e + 1);
		text = text.substring(0,e);
		var exp = StringTools.startsWith(sexp,"+") ? Std.parseInt(sexp.substring(1)) : Std.parseInt(sexp);
		var decimalPlace = text.indexOf(".");
		if(decimalPlace >= 0) {
			exp -= text.length - decimalPlace;
			text = text.substring(0,decimalPlace) + text.substring(1 + decimalPlace);
		}
		text = thx_Strings.rpad(text,"0",text.length + exp);
	}
	var length = text.length;
	if(length <= thx_bigint_Bigs.LOG_MAX_INT / Math.log(base)) {
		return new thx_bigint_Small(thx_Ints.parse(text,base) * (isNegative ? -1 : 1));
	}
	var digits = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var charCode = HxOverrides.cca(text,i);
		if(48 <= charCode && charCode <= 57) {
			digits.push(new thx_bigint_Small(charCode - 48));
		} else if(97 <= charCode && charCode <= 122) {
			digits.push(new thx_bigint_Small(charCode - 87));
		} else {
			throw new thx_Error("" + text + " is not a valid string",null,{ fileName : "Bigs.hx", lineNumber : 509, className : "thx.bigint.Bigs", methodName : "parseBase"});
		}
	}
	digits.reverse();
	var mul;
	var _g11 = 0;
	var _g2 = digits.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		mul = digits[i1].multiply(pow);
		val = val.add(mul);
		pow = pow.multiply(bigBase);
	}
	if(isNegative) {
		return val.negate();
	} else {
		return val;
	}
};
thx_bigint_Bigs.bitwise = function(x,y,fn) {
	var xSign = x.sign;
	var ySign = y.sign;
	var xRem = xSign ? x.not() : x;
	var yRem = ySign ? y.not() : y;
	var xBits = [];
	var yBits = [];
	var xStop = false;
	var yStop = false;
	while(!xStop || !yStop) {
		if(xRem.isZero()) {
			xStop = true;
			xBits.push(xSign ? 1 : 0);
		} else if(xSign) {
			xBits.push(xRem.isEven() ? 1 : 0);
		} else {
			xBits.push(xRem.isEven() ? 0 : 1);
		}
		if(yRem.isZero()) {
			yStop = true;
			yBits.push(ySign ? 1 : 0);
		} else if(ySign) {
			yBits.push(yRem.isEven() ? 1 : 0);
		} else {
			yBits.push(yRem.isEven() ? 0 : 1);
		}
		xRem = xRem.divide(thx_bigint_Small.two);
		yRem = yRem.divide(thx_bigint_Small.two);
	}
	var result = [];
	var _g1 = 0;
	var _g = xBits.length;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(fn(xBits[i],yBits[i]));
	}
	var a = thx_bigint_Bigs.fromInt(result.pop());
	var p = thx_bigint_Small.two.pow(thx_bigint_Bigs.fromInt(result.length));
	var sum = a.negate().multiply(p);
	while(result.length > 0) {
		a = thx_bigint_Bigs.fromInt(result.pop());
		p = thx_bigint_Small.two.pow(thx_bigint_Bigs.fromInt(result.length));
		sum = sum.add(a.multiply(p));
	}
	return sum;
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = ["thx","Error"];
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_StackItem = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; return $x; };
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var thx__$Ord_Ord_$Impl_$ = {};
thx__$Ord_Ord_$Impl_$.__name__ = ["thx","_Ord","Ord_Impl_"];
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		var tmp = f(b0);
		var tmp1 = f(b1);
		return this1(tmp,tmp1);
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.intComparison = function(this1,a0,a1) {
	var _g = this1(a0,a1);
	switch(_g[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
thx__$Ord_Ordering_$Impl_$.__name__ = ["thx","_Ord","Ordering_Impl_"];
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = { __ename__ : ["thx","OrderingImpl"], __constructs__ : ["LT","GT","EQ"] };
thx_OrderingImpl.LT = ["LT",0];
thx_OrderingImpl.LT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.GT = ["GT",1];
thx_OrderingImpl.GT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.EQ = ["EQ",2];
thx_OrderingImpl.EQ.__enum__ = thx_OrderingImpl;
var haxe_Utf8 = function() { };
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
var thx_Strings = function() { };
thx_Strings.__name__ = ["thx","Strings"];
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length - 1);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	return haxe_Utf8.compare(a.toLowerCase(),b.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	return thx_Strings.endsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	return thx_Strings.startsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.collapse = function(value) {
	var _this = thx_Strings.WSG;
	return StringTools.trim(value).replace(_this.r," ");
};
thx_Strings.compare = function(a,b) {
	return haxe_Utf8.compare(a,b);
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.caseInsensitiveContains(s1,a1);
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.contains(s1,a1);
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1 ? a1 : b1;
	var _g1 = 0;
	var _g = min;
	while(_g1 < _g) {
		var i = _g1++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	return s.split("").filter(predicate).join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	var codes = thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	}).filter(predicate);
	return codes.map(function(i) {
		return String.fromCharCode(i);
	}).join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c = HxOverrides.cca(value,i);
		code = (haxe__$Int32_Int32_$Impl_$._mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	return thx_Ints.range(0,length).map(function(_) {
		return thx_Strings.random(seed);
	}).join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	return value.split("").map(callback);
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g2 = 0;
	var _g1 = times;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right ? left : right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			++pos;
		} else {
			break;
		}
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var j = _g1++;
		i = len - j - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r1 = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r1,"$1_$2");
	var _this_r2 = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r2,"$1_$2");
	var _this_r3 = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r3,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	return thx_Strings.SPLIT_LINES.split(s).map(function(part) {
		return thx_Strings.wrapLine(StringTools.trim(part.replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}).join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat($char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat($char,diff);
	} else {
		return s;
	}
};
var thx_Ints = function() { };
thx_Ints.__name__ = ["thx","Ints"];
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return thx_Ints.gcd(n,m % n);
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg ? "-" : "") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max - min + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_bigint_Big = function(value,sign) {
	this.sign = sign;
	this.value = value;
	this.isSmall = false;
};
thx_bigint_Big.__name__ = ["thx","bigint","Big"];
thx_bigint_Big.__interfaces__ = [thx_bigint_BigIntImpl];
thx_bigint_Big.prototype = {
	value: null
	,sign: null
	,isSmall: null
	,add: function(that) {
		if(that.isZero()) {
			return this;
		}
		if(this.isZero()) {
			return that;
		}
		if(this.sign != that.sign) {
			return this.subtract(that.negate());
		}
		if(that.isSmall) {
			return this.addSmall(that);
		} else {
			return this.addBig(that);
		}
	}
	,addSmall: function(small) {
		var v = small.value;
		return new thx_bigint_Big(thx_bigint_Bigs.addSmall(this.value,v < 0 ? -v : v),this.sign);
	}
	,addBig: function(big) {
		return new thx_bigint_Big(thx_bigint_Bigs.addAny(this.value,big.value),this.sign);
	}
	,subtract: function(that) {
		if(that.isZero()) {
			return this;
		}
		if(this.isZero()) {
			return that.negate();
		}
		if(this.sign != that.sign) {
			return this.add(that.negate());
		}
		if(that.isSmall) {
			return this.subtractSmall(that);
		} else {
			return this.subtractBig(that);
		}
	}
	,subtractSmall: function(small) {
		var v = small.value;
		return thx_bigint_Bigs.subtractSmall(this.value,v < 0 ? -v : v,this.sign);
	}
	,subtractBig: function(big) {
		return thx_bigint_Bigs.subtractAny(this.value,big.value,this.sign);
	}
	,divide: function(that) {
		return this.divMod(that).quotient;
	}
	,divMod: function(that) {
		if(that.isZero()) {
			throw new thx_Error("division by zero",null,{ fileName : "Big.hx", lineNumber : 55, className : "thx.bigint.Big", methodName : "divMod"});
		}
		if(that.isSmall) {
			return this.divModSmall(that);
		} else {
			return this.divModBig(that);
		}
	}
	,divModSmall: function(small) {
		var v = small.value;
		var values = thx_bigint_Bigs.divModSmall(this.value,v < 0 ? -v : v);
		var quotient = thx_bigint_Bigs.arrayToSmall(values.q);
		var remainder = values.r;
		if(this.sign) {
			remainder = -remainder;
		}
		if(null != quotient) {
			if(this.sign != small.sign) {
				quotient = -quotient;
			}
			return { quotient : new thx_bigint_Small(quotient), remainder : new thx_bigint_Small(remainder)};
		}
		return { quotient : new thx_bigint_Big(values.q,this.sign != small.sign), remainder : new thx_bigint_Small(remainder)};
	}
	,divModBig: function(big) {
		var comparison = thx_bigint_Bigs.compareToAbs(this.value,big.value);
		if(comparison == -1) {
			return { quotient : thx_bigint_Small.zero, remainder : this};
		}
		if(comparison == 0) {
			return { quotient : this.sign == big.sign ? thx_bigint_Small.one : thx_bigint_Small.negativeOne, remainder : thx_bigint_Small.zero};
		}
		var values = this.value.length + big.value.length <= 200 ? thx_bigint_Bigs.divMod1(this.value,big.value) : thx_bigint_Bigs.divMod2(this.value,big.value);
		var q = values[0].small;
		var quotient;
		var remainder;
		var qSign = this.sign != big.sign;
		var r = values[1].small;
		var mSign = this.sign;
		if(null != q) {
			if(qSign) {
				q = -q;
			}
			quotient = new thx_bigint_Small(q);
		} else {
			quotient = new thx_bigint_Big(values[0].big,qSign);
		}
		if(null != r) {
			if(mSign) {
				r = -r;
			}
			remainder = new thx_bigint_Small(r);
		} else {
			remainder = new thx_bigint_Big(values[1].big,mSign);
		}
		return { quotient : quotient, remainder : remainder};
	}
	,multiply: function(that) {
		if(that.isZero()) {
			return thx_bigint_Small.zero;
		}
		if(that.isSmall) {
			return this.multiplySmall(that);
		} else {
			return this.multiplyBig(that);
		}
	}
	,multiplySmall: function(small) {
		var v = small.value;
		return new thx_bigint_Big(thx_bigint_Bigs.multiplyLong(this.value,thx_bigint_Bigs.smallToArray(v < 0 ? -v : v)),this.sign != small.sign);
	}
	,multiplyBig: function(big) {
		if(this.value.length + big.value.length > 4000) {
			return new thx_bigint_Big(thx_bigint_Bigs.multiplyKaratsuba(this.value,big.value),this.sign != big.sign);
		}
		return new thx_bigint_Big(thx_bigint_Bigs.multiplyLong(this.value,big.value),this.sign != big.sign);
	}
	,modulo: function(that) {
		return this.divMod(that).remainder;
	}
	,random: function() {
		var length = this.value.length - 1;
		var result = [];
		var restricted = true;
		var i = length;
		var top;
		var digit;
		while(i >= 0) {
			if(restricted) {
				top = this.value[i];
			} else {
				top = 10000000;
			}
			var value = Math.random() * top;
			if(value < 0.0) {
				digit = Math.ceil(value);
			} else {
				digit = Math.floor(value);
			}
			result.unshift(digit);
			if(digit < top) {
				restricted = false;
			}
			--i;
		}
		var v = thx_bigint_Bigs.arrayToSmall(result);
		if(null != v) {
			return new thx_bigint_Small(v);
		} else {
			return new thx_bigint_Big(result,false);
		}
	}
	,abs: function() {
		return new thx_bigint_Big(this.value,false);
	}
	,negate: function() {
		return new thx_bigint_Big(this.value,!this.sign);
	}
	,next: function() {
		return this.add(thx_bigint_Small.one);
	}
	,prev: function() {
		return this.subtract(thx_bigint_Small.one);
	}
	,pow: function(exp) {
		if(this.isZero()) {
			if(exp.isZero()) {
				return thx_bigint_Small.one;
			} else {
				return this;
			}
		}
		if(this.isUnit()) {
			if(this.sign) {
				if(exp.isEven()) {
					return thx_bigint_Small.one;
				} else {
					return thx_bigint_Small.negativeOne;
				}
			} else {
				return thx_bigint_Small.one;
			}
		}
		if(exp.sign) {
			return thx_bigint_Small.zero;
		}
		if(!exp.isSmall) {
			throw new thx_Error("The exponent " + Std.string(exp) + " is too large.",null,{ fileName : "Big.hx", lineNumber : 174, className : "thx.bigint.Big", methodName : "pow"});
		}
		var b = exp.value;
		var x = this;
		var y = thx_bigint_Small.one;
		while(true) {
			if((b & 1) == 1) {
				y = y.multiply(x);
				--b;
			}
			if(b == 0) {
				break;
			}
			b = b / 2 | 0;
			x = x.square();
		}
		return y;
	}
	,shiftLeft: function(n) {
		if(n < 0) {
			return this.shiftRight(-n);
		}
		var result = this;
		while(n >= thx_bigint_Bigs.powers2Length) {
			result = result.multiply(thx_bigint_Bigs.bigHighestPower2);
			n -= thx_bigint_Bigs.powers2Length - 1;
		}
		return result.multiply(thx_bigint_Bigs.bigPowersOfTwo[n]);
	}
	,shiftRight: function(n) {
		if(n < 0) {
			return this.shiftLeft(-n);
		}
		var result = this;
		var remQuo;
		while(n >= thx_bigint_Bigs.powers2Length) {
			if(result.isZero()) {
				return result;
			}
			remQuo = result.divMod(thx_bigint_Bigs.bigHighestPower2);
			if(remQuo.remainder.sign) {
				result = remQuo.quotient.prev();
			} else {
				result = remQuo.quotient;
			}
			n -= thx_bigint_Bigs.powers2Length - 1;
		}
		remQuo = result.divMod(thx_bigint_Bigs.bigPowersOfTwo[n]);
		if(remQuo.remainder.sign) {
			return remQuo.quotient.prev();
		} else {
			return remQuo.quotient;
		}
	}
	,square: function() {
		return new thx_bigint_Big(thx_bigint_Bigs.square(this.value),false);
	}
	,isEven: function() {
		return (this.value[0] & 1) == 0;
	}
	,isOdd: function() {
		return (this.value[0] & 1) == 1;
	}
	,isZero: function() {
		return this.value.length == 0;
	}
	,isUnit: function() {
		return false;
	}
	,compareTo: function(that) {
		if(this.sign != that.sign) {
			if(this.sign) {
				return -1;
			} else {
				return 1;
			}
		}
		if(that.isSmall) {
			return this.compareToSmall(that);
		} else {
			return this.compareToBig(that);
		}
	}
	,compareToSmall: function(small) {
		var v = small.value;
		return thx_bigint_Bigs.compareToAbs(this.value,thx_bigint_Bigs.smallToArray(v < 0 ? -v : v)) * (this.sign ? -1 : 1);
	}
	,compareToBig: function(big) {
		return thx_bigint_Bigs.compareToAbs(this.value,big.value) * (this.sign ? -1 : 1);
	}
	,compareToAbs: function(that) {
		if(that.isSmall) {
			return this.compareToAbsSmall(that);
		} else {
			return this.compareToAbsBig(that);
		}
	}
	,compareToAbsSmall: function(small) {
		var v = small.value;
		return thx_bigint_Bigs.compareToAbs(this.value,thx_bigint_Bigs.smallToArray(v < 0 ? -v : v));
	}
	,compareToAbsBig: function(big) {
		return thx_bigint_Bigs.compareToAbs(this.value,big.value);
	}
	,not: function() {
		return this.negate().prev();
	}
	,and: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a & b;
		});
	}
	,or: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a | b;
		});
	}
	,xor: function(that) {
		return thx_bigint_Bigs.bitwise(this,that,function(a,b) {
			return a ^ b;
		});
	}
	,toFloat: function() {
		return parseFloat(this.toString());
	}
	,toInt: function() {
		var v = thx_bigint_Bigs.arrayToSmall(this.value);
		if(null == v) {
			throw new thx_Error("overflow",null,{ fileName : "Big.hx", lineNumber : 274, className : "thx.bigint.Big", methodName : "toInt"});
		}
		return (this.sign ? -1 : 1) * v;
	}
	,toString: function() {
		return this.toStringWithBase(10);
	}
	,toStringWithBase: function(base) {
		if(this.isZero()) {
			return "0";
		}
		if(base == 10) {
			var l = this.value.length;
			var out = "" + this.value[--l];
			var zeros = "0000000";
			var digit;
			while(--l >= 0) {
				digit = "" + this.value[l];
				out += zeros.substring(digit.length) + digit;
			}
			return (this.sign ? "-" : "") + out;
		}
		var out1 = [];
		var baseBig = new thx_bigint_Small(base);
		var left = this;
		var divmod;
		while(left.sign || left.compareToAbs(baseBig) >= 0) {
			divmod = left.divMod(baseBig);
			left = divmod.quotient;
			var digit1 = divmod.remainder;
			if(digit1.sign) {
				digit1 = baseBig.subtract(digit1).abs();
				left = left.next();
			}
			out1.push(digit1.toStringWithBase(base));
		}
		out1.push(left.toStringWithBase(base));
		out1.reverse();
		return (this.sign ? "-" : "") + out1.join("");
	}
	,__class__: thx_bigint_Big
};
var thx_bigint_DecimalImpl = function(value,scale) {
	this.value = value;
	this.scale = scale;
};
thx_bigint_DecimalImpl.__name__ = ["thx","bigint","DecimalImpl"];
thx_bigint_DecimalImpl.randomBetween = function(a,b) {
	var lhs = a.matchScale(b);
	var rhs = b.matchScale(a);
	return new thx_bigint_DecimalImpl(thx__$BigInt_BigInt_$Impl_$.randomBetween(lhs.value,rhs.value),lhs.scale);
};
thx_bigint_DecimalImpl.prototype = {
	value: null
	,scale: null
	,add: function(that) {
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		return new thx_bigint_DecimalImpl(lhs.value.add(rhs.value),lhs.scale);
	}
	,subtract: function(that) {
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		return new thx_bigint_DecimalImpl(lhs.value.subtract(rhs.value),lhs.scale);
	}
	,divide: function(that) {
		return this.divideWithScale(that,thx_bigint_Decimals.divisionExtraScale);
	}
	,divideWithScale: function(that,scale) {
		if(that.isZero()) {
			throw new thx_Error("division by zero",null,{ fileName : "DecimalImpl.hx", lineNumber : 42, className : "thx.bigint.DecimalImpl", methodName : "divideWithScale"});
		}
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		var pow = thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(rhs.scale + scale));
		var qr = lhs.value.multiply(pow).divMod(rhs.value);
		var nscale = rhs.scale + scale;
		return new thx_bigint_DecimalImpl(qr.quotient,nscale).trim(nscale);
	}
	,moduloWithScale: function(that,scale) {
		if(that.isZero()) {
			throw new thx_Error("modulo by zero",null,{ fileName : "DecimalImpl.hx", lineNumber : 53, className : "thx.bigint.DecimalImpl", methodName : "moduloWithScale"});
		}
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		var pow = thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(scale));
		var qr = lhs.value.multiply(pow).divMod(rhs.value.multiply(pow));
		var nscale = lhs.scale + scale;
		return new thx_bigint_DecimalImpl(qr.remainder,nscale).trim(nscale);
	}
	,multiply: function(that) {
		return new thx_bigint_DecimalImpl(this.value.multiply(that.value),this.scale + that.scale);
	}
	,modulo: function(that) {
		return this.moduloWithScale(that,thx_bigint_Decimals.divisionExtraScale);
	}
	,abs: function() {
		return new thx_bigint_DecimalImpl(this.value.abs(),this.scale);
	}
	,negate: function() {
		return new thx_bigint_DecimalImpl(this.value.negate(),this.scale);
	}
	,next: function() {
		return this.add(thx_bigint_DecimalImpl.one);
	}
	,prev: function() {
		return this.subtract(thx_bigint_DecimalImpl.one);
	}
	,pow: function(exp) {
		if(exp < 0) {
			var i = this.value.pow(thx_bigint_Bigs.fromInt(-exp));
			return thx__$Decimal_Decimal_$Impl_$.one.divideWithScale(thx__$Decimal_Decimal_$Impl_$.fromBigInt(i),(this.scale + 1) * -exp);
		} else {
			var i1 = this.value.pow(thx_bigint_Bigs.fromInt(exp));
			return new thx_bigint_DecimalImpl(i1,this.scale * exp);
		}
	}
	,ceilTo: function(newscale) {
		if(this.isZero()) {
			return this;
		}
		var scaled = this.scaleTo(newscale);
		var f = (scaled.isZero() ? thx_bigint_DecimalImpl.one : this.modulo(scaled)).multiply(thx_bigint_DecimalImpl.ten.pow(newscale)).toFloat();
		if(f <= 0) {
			return scaled;
		} else {
			return new thx_bigint_DecimalImpl(scaled.value.add(thx_bigint_Small.one),scaled.scale);
		}
	}
	,floorTo: function(newscale) {
		return this.scaleTo(newscale);
	}
	,roundTo: function(newscale) {
		if(this.isZero()) {
			return this;
		}
		var scaled = this.scaleTo(newscale);
		var f = (scaled.isZero() ? thx_bigint_DecimalImpl.one : this.modulo(scaled)).multiply(thx_bigint_DecimalImpl.ten.pow(newscale)).toFloat();
		if(f < 0.5) {
			return scaled;
		} else {
			return new thx_bigint_DecimalImpl(scaled.value.add(thx_bigint_Small.one),scaled.scale);
		}
	}
	,scaleTo: function(newscale) {
		if(newscale == this.scale) {
			return this;
		}
		if(newscale > this.scale) {
			var mul = thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(newscale - this.scale));
			return new thx_bigint_DecimalImpl(this.value.multiply(mul),newscale);
		} else {
			var div = thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(this.scale - newscale));
			return new thx_bigint_DecimalImpl(this.value.divide(div),newscale);
		}
	}
	,square: function() {
		return this.multiply(this);
	}
	,isNegative: function() {
		return this.value.sign;
	}
	,isEven: function() {
		return this.value.isEven();
	}
	,isOdd: function() {
		return this.value.isOdd();
	}
	,isZero: function() {
		return this.value.isZero();
	}
	,compareTo: function(that) {
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		return lhs.value.compareTo(rhs.value);
	}
	,compareToAbs: function(that) {
		var lhs = this.matchScale(that);
		var rhs = that.matchScale(this);
		return lhs.value.compareToAbs(rhs.value);
	}
	,trim: function(min) {
		if(min == null) {
			min = 0;
		}
		if(this.scale == 0) {
			return this;
		}
		var s = this.toString();
		var parts = s.split(".");
		var dec = thx_Strings.rpad(thx_Strings.trimCharsRight(parts[1],"0"),"0",min);
		if(dec.length > 0) {
			s = parts[0] + "." + dec;
		} else {
			s = parts[0];
		}
		return thx_bigint_Decimals.parse(s);
	}
	,toFloat: function() {
		return parseFloat(this.toString());
	}
	,toInt: function() {
		var i = this.value.divide(thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(this.scale)));
		return i.toInt();
	}
	,toString: function() {
		var sign = this.value.sign;
		var i = (sign ? this.value.negate() : this.value).toString();
		var l = i.length;
		if(this.scale == 0) {
			return (sign ? "-" : "") + i;
		} else if(i.length <= this.scale) {
			return (sign ? "-" : "") + "0." + thx_Strings.lpad(i,"0",this.scale);
		} else {
			return (sign ? "-" : "") + i.substring(0,l - this.scale) + "." + i.substring(l - this.scale);
		}
	}
	,matchScale: function(that) {
		if(this.scale >= that.scale) {
			return this;
		}
		return this.scaleTo(that.scale);
	}
	,__class__: thx_bigint_DecimalImpl
};
var thx__$Decimal_Decimal_$Impl_$ = {};
thx__$Decimal_Decimal_$Impl_$.__name__ = ["thx","_Decimal","Decimal_Impl_"];
thx__$Decimal_Decimal_$Impl_$.fromInt64 = function(value) {
	return new thx_bigint_DecimalImpl(thx_bigint_Bigs.fromInt64(value),0);
};
thx__$Decimal_Decimal_$Impl_$.fromBigInt = function(value) {
	return new thx_bigint_DecimalImpl(value,0);
};
thx__$Decimal_Decimal_$Impl_$.fromInt = function(value) {
	return thx_bigint_Decimals.fromInt(value);
};
thx__$Decimal_Decimal_$Impl_$.fromFloat = function(value) {
	return thx_bigint_Decimals.fromFloat(value);
};
thx__$Decimal_Decimal_$Impl_$.fromString = function(value) {
	return thx_bigint_Decimals.parse(value);
};
thx__$Decimal_Decimal_$Impl_$.randomBetween = function(a,b) {
	return thx_bigint_DecimalImpl.randomBetween(a,b);
};
thx__$Decimal_Decimal_$Impl_$.compare = function(a,b) {
	return a.compareTo(b);
};
thx__$Decimal_Decimal_$Impl_$.isZero = function(this1) {
	return this1.isZero();
};
thx__$Decimal_Decimal_$Impl_$.abs = function(this1) {
	return this1.abs();
};
thx__$Decimal_Decimal_$Impl_$.compareTo = function(this1,that) {
	return this1.compareTo(that);
};
thx__$Decimal_Decimal_$Impl_$.compareAbs = function(this1,that) {
	return this1.compareToAbs(that);
};
thx__$Decimal_Decimal_$Impl_$.next = function(this1) {
	return this1.next();
};
thx__$Decimal_Decimal_$Impl_$.prev = function(this1) {
	return this1.prev();
};
thx__$Decimal_Decimal_$Impl_$.square = function(this1) {
	return this1.square();
};
thx__$Decimal_Decimal_$Impl_$.pow = function(this1,exp) {
	return this1.pow(exp);
};
thx__$Decimal_Decimal_$Impl_$.isEven = function(this1) {
	return this1.isEven();
};
thx__$Decimal_Decimal_$Impl_$.isOdd = function(this1) {
	return this1.isOdd();
};
thx__$Decimal_Decimal_$Impl_$.isNegative = function(this1) {
	return this1.isNegative();
};
thx__$Decimal_Decimal_$Impl_$.isPositive = function(this1) {
	return this1.compareTo(thx__$Decimal_Decimal_$Impl_$.zero) > 0;
};
thx__$Decimal_Decimal_$Impl_$.max = function(this1,that) {
	if(thx__$Decimal_Decimal_$Impl_$.greater(this1,that)) {
		return this1;
	} else {
		return that;
	}
};
thx__$Decimal_Decimal_$Impl_$.min = function(this1,that) {
	if(thx__$Decimal_Decimal_$Impl_$.less(this1,that)) {
		return this1;
	} else {
		return that;
	}
};
thx__$Decimal_Decimal_$Impl_$.ceil = function(this1) {
	return this1.ceilTo(0);
};
thx__$Decimal_Decimal_$Impl_$.ceilTo = function(this1,decimals) {
	return this1.ceilTo(decimals);
};
thx__$Decimal_Decimal_$Impl_$.floor = function(this1) {
	return this1.floorTo(0);
};
thx__$Decimal_Decimal_$Impl_$.floorTo = function(this1,decimals) {
	return this1.floorTo(decimals);
};
thx__$Decimal_Decimal_$Impl_$.round = function(this1) {
	return this1.roundTo(0);
};
thx__$Decimal_Decimal_$Impl_$.roundTo = function(this1,decimals) {
	return this1.roundTo(decimals);
};
thx__$Decimal_Decimal_$Impl_$.scaleTo = function(this1,decimals) {
	return this1.scaleTo(decimals);
};
thx__$Decimal_Decimal_$Impl_$.trim = function(this1,mindecimals) {
	return this1.trim(mindecimals);
};
thx__$Decimal_Decimal_$Impl_$.greaterThan = function(this1,that) {
	return this1.compareTo(that) > 0;
};
thx__$Decimal_Decimal_$Impl_$.greater = function(self,that) {
	return self.compareTo(that) > 0;
};
thx__$Decimal_Decimal_$Impl_$.greaterEqualsTo = function(this1,that) {
	return this1.compareTo(that) >= 0;
};
thx__$Decimal_Decimal_$Impl_$.greaterEquals = function(self,that) {
	return self.compareTo(that) >= 0;
};
thx__$Decimal_Decimal_$Impl_$.lessThan = function(this1,that) {
	return this1.compareTo(that) < 0;
};
thx__$Decimal_Decimal_$Impl_$.less = function(self,that) {
	return self.compareTo(that) < 0;
};
thx__$Decimal_Decimal_$Impl_$.lessEqualsTo = function(this1,that) {
	return this1.compareTo(that) <= 0;
};
thx__$Decimal_Decimal_$Impl_$.lessEquals = function(self,that) {
	return self.compareTo(that) <= 0;
};
thx__$Decimal_Decimal_$Impl_$.equalsTo = function(this1,that) {
	return this1.compareTo(that) == 0;
};
thx__$Decimal_Decimal_$Impl_$.equals = function(self,that) {
	return self.compareTo(that) == 0;
};
thx__$Decimal_Decimal_$Impl_$.notEqualsTo = function(this1,that) {
	return this1.compareTo(that) != 0;
};
thx__$Decimal_Decimal_$Impl_$.notEquals = function(self,that) {
	return self.compareTo(that) != 0;
};
thx__$Decimal_Decimal_$Impl_$.add = function(this1,that) {
	return this1.add(that);
};
thx__$Decimal_Decimal_$Impl_$.subtract = function(this1,that) {
	return this1.subtract(that);
};
thx__$Decimal_Decimal_$Impl_$.negate = function(this1) {
	return this1.negate();
};
thx__$Decimal_Decimal_$Impl_$.preIncrement = function(this1) {
	this1 = this1.add(thx__$Decimal_Decimal_$Impl_$.one);
	return this1;
};
thx__$Decimal_Decimal_$Impl_$.postIncrement = function(this1) {
	var v = this1;
	this1 = this1.add(thx__$Decimal_Decimal_$Impl_$.one);
	return v;
};
thx__$Decimal_Decimal_$Impl_$.preDecrement = function(this1) {
	this1 = this1.subtract(thx__$Decimal_Decimal_$Impl_$.one);
	return this1;
};
thx__$Decimal_Decimal_$Impl_$.postDecrement = function(this1) {
	var v = this1;
	this1 = this1.subtract(thx__$Decimal_Decimal_$Impl_$.one);
	return v;
};
thx__$Decimal_Decimal_$Impl_$.multiply = function(this1,that) {
	return this1.multiply(that);
};
thx__$Decimal_Decimal_$Impl_$.divide = function(this1,that) {
	return this1.divide(that);
};
thx__$Decimal_Decimal_$Impl_$.modulo = function(this1,that) {
	return this1.modulo(that);
};
thx__$Decimal_Decimal_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
thx__$Decimal_Decimal_$Impl_$.toInt = function(this1) {
	return this1.toInt();
};
thx__$Decimal_Decimal_$Impl_$.toInt64 = function(this1) {
	return thx_bigint_Bigs.toInt64(thx__$Decimal_Decimal_$Impl_$.toBigInt(this1));
};
thx__$Decimal_Decimal_$Impl_$.toBigInt = function(this1) {
	return this1.value.divide(thx_bigint_Small.ten.pow(thx_bigint_Bigs.fromInt(this1.scale)));
};
thx__$Decimal_Decimal_$Impl_$.toString = function(this1) {
	return this1.toString();
};
thx__$Decimal_Decimal_$Impl_$.get_divisionScale = function() {
	return thx_bigint_Decimals.divisionExtraScale;
};
thx__$Decimal_Decimal_$Impl_$.set_divisionScale = function(v) {
	return thx_bigint_Decimals.divisionExtraScale = v;
};
var Resource = function(name,id,amount,plus,autoCost) {
	this.upgrades = [];
	this.name = name;
	this.id = id;
	this.amount = amount;
	this.plus = plus;
	this.autoCost = autoCost;
};
Resource.__name__ = ["Resource"];
Resource.prototype = {
	name: null
	,id: null
	,upgrades: null
	,amount: null
	,plus: null
	,autoCost: null
	,buildingBonus: null
	,barInc: null
	,progress: null
	,timer: null
	,setupBar: function() {
		this.barInc = 1;
		this.progress = 0;
		this.timer = new haxe_Timer(100);
		var _g = this.name;
		switch(_g) {
		case "food":
			this.upgrades.push(Main.newFarmer);
			this.upgrades.push(Main.farmerUpgrade1);
			this.upgrades.push(Main.farmerUpgrade2);
			break;
		case "metal":
			this.upgrades.push(Main.newMiner);
			this.upgrades.push(Main.minerUpgrade1);
			this.upgrades.push(Main.minerUpgrade2);
			break;
		case "wood":
			this.upgrades.push(Main.newWoodcutter);
			this.upgrades.push(Main.woodcutterUpgrade1);
			this.upgrades.push(Main.woodcutterUpgrade2);
			break;
		}
		this.timer.run = $bind(this,this.updateProgressBar);
		return this;
	}
	,getName: function() {
		return this.name;
	}
	,getUpgrades: function() {
		return this.upgrades;
	}
	,format: function() {
		return Util.formatDecimal(this.amount);
	}
	,updatePlus: function() {
		if(this.plus == null || this.upgrades[1] == null || this.upgrades[0] == null) {
			return thx__$Decimal_Decimal_$Impl_$.zero;
		}
		this.plus = this.upgrades[0].amount.multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(100)).multiply(thx_bigint_Decimals.fromFloat(Math.pow(Main.upgradeAmountMult.toFloat(),this.upgrades[1].amount.toFloat())));
		return this.plus;
	}
	,updateBarInc: function() {
		if(this.barInc == null || this.upgrades[2] == null) {
			return thx__$Decimal_Decimal_$Impl_$.zero;
		}
		this.barInc = Math.pow(Main.upgradeSpeedMult.toFloat(),this.upgrades[2].amount.toFloat());
		return thx_bigint_Decimals.fromFloat(this.barInc);
	}
	,getResourceAdd: function() {
		return this.plus.subtract(this.autoCost).multiply(thx_bigint_Decimals.parse("10"));
	}
	,addProgress: function() {
		this.progress += this.barInc;
		if(this.progress >= 100) {
			this.addResources();
			this.progress = 0;
		}
	}
	,addResources: function() {
		this.amount = this.amount.add(this.getResourceAdd());
		UpdateUI.updateResource(this);
		Util.saveGame();
	}
	,updateProgressBar: function() {
		$(".progress-bar-" + this.name).css("width",this.progress + "%");
		$(".progress-bar-" + this.name).text(thx_Floats.roundTo(this.progress,2) + "%");
		this.addProgress();
	}
	,__class__: Resource
};
var upgrades_UpgradeType = { __ename__ : ["upgrades","UpgradeType"], __constructs__ : ["building","research","skill","perk"] };
upgrades_UpgradeType.building = ["building",0];
upgrades_UpgradeType.building.__enum__ = upgrades_UpgradeType;
upgrades_UpgradeType.research = ["research",1];
upgrades_UpgradeType.research.__enum__ = upgrades_UpgradeType;
upgrades_UpgradeType.skill = ["skill",2];
upgrades_UpgradeType.skill.__enum__ = upgrades_UpgradeType;
upgrades_UpgradeType.perk = ["perk",3];
upgrades_UpgradeType.perk.__enum__ = upgrades_UpgradeType;
var upgrades_Buyable = function(name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,formalCost,physicalCost,lifeCost,appliedCost,socialCost,electricityCost,perkCost,skillCost) {
	this.skillCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.perkCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.electricityCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.socialCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.appliedCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.lifeCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.physicalCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.formalCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.populationMaxCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.populationCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.metalCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.woodCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.foodCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.moneyCost = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.amount = thx__$Decimal_Decimal_$Impl_$.fromInt(0);
	this.name = "";
	this.id = 0;
	this.id = id;
	this.name = name;
	this.amount = amount;
	this.moneyCost = moneyCost;
	this.foodCost = foodCost;
	this.woodCost = woodCost;
	this.metalCost = metalCost;
	this.populationCost = populationCost;
	this.populationMaxCost = populationMaxCost;
};
upgrades_Buyable.__name__ = ["upgrades","Buyable"];
upgrades_Buyable.prototype = {
	id: null
	,name: null
	,amount: null
	,moneyCost: null
	,foodCost: null
	,woodCost: null
	,metalCost: null
	,populationCost: null
	,populationMaxCost: null
	,formalCost: null
	,physicalCost: null
	,lifeCost: null
	,appliedCost: null
	,socialCost: null
	,electricityCost: null
	,perkCost: null
	,skillCost: null
	,getId: function() {
		return this.id;
	}
	,getName: function() {
		return this.name;
	}
	,onClick: function() {
	}
	,format: function(type) {
		var number = thx__$Decimal_Decimal_$Impl_$.zero;
		if(type == null) {
			return "0";
		} else {
			switch(type) {
			case "applied":
				number = this.appliedCost;
				break;
			case "electricity":
				number = this.electricityCost;
				break;
			case "food":
				number = this.foodCost;
				break;
			case "formal":
				number = this.formalCost;
				break;
			case "life":
				number = this.lifeCost;
				break;
			case "metal":
				number = this.metalCost;
				break;
			case "money":
				number = this.moneyCost;
				break;
			case "perkPoint":
				number = this.perkCost;
				break;
			case "physical":
				number = this.physicalCost;
				break;
			case "population":
				number = this.populationCost;
				break;
			case "populationMax":
				number = this.populationMaxCost;
				break;
			case "skillPoint":
				number = this.skillCost;
				break;
			case "social":
				number = this.socialCost;
				break;
			case "wood":
				number = this.woodCost;
				break;
			default:
				return "0";
			}
		}
		return Util.formatDecimal(number);
	}
	,isBuyable: function() {
		if(thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.money.amount,this.moneyCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.food.amount,this.foodCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.wood.amount,this.woodCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.metal.amount,this.metalCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.population.amount,this.populationCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.populationMax.amount,this.populationMaxCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.formal.amount,this.formalCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.physical.amount,this.physicalCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.life.amount,this.lifeCost) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.applied.amount,this.appliedCost)) {
			return thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.social.amount,this.socialCost);
		} else {
			return false;
		}
	}
	,takeResources: function() {
		var tmp = Main.money.amount.subtract(this.moneyCost);
		Main.money.amount = tmp;
		var tmp1 = Main.food.amount.subtract(this.foodCost);
		Main.food.amount = tmp1;
		var tmp2 = Main.wood.amount.subtract(this.woodCost);
		Main.wood.amount = tmp2;
		var tmp3 = Main.metal.amount.subtract(this.metalCost);
		Main.metal.amount = tmp3;
		var tmp4 = Main.population.amount.subtract(this.populationCost);
		Main.population.amount = tmp4;
		var tmp5 = Main.populationMax.amount.subtract(this.populationMaxCost);
		Main.populationMax.amount = tmp5;
		var tmp6 = Main.formal.amount.subtract(this.formalCost);
		Main.formal.amount = tmp6;
		var tmp7 = Main.physical.amount.subtract(this.physicalCost);
		Main.physical.amount = tmp7;
		var tmp8 = Main.life.amount.subtract(this.lifeCost);
		Main.life.amount = tmp8;
		var tmp9 = Main.applied.amount.subtract(this.appliedCost);
		Main.applied.amount = tmp9;
		var tmp10 = Main.social.amount.subtract(this.socialCost);
		Main.social.amount = tmp10;
		var tmp11 = Main.electricity.amount.subtract(this.electricityCost);
		Main.electricity.amount = tmp11;
		var tmp12 = Main.skillPoint.amount.subtract(this.skillCost);
		Main.skillPoint.amount = tmp12;
		var tmp13 = Main.perkPoint.amount.subtract(this.perkCost);
		Main.perkPoint.amount = tmp13;
	}
	,increaseCost: function() {
	}
	,__class__: upgrades_Buyable
};
var upgrades_RebuyableUpgrade = function(name,id,type,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,formalCost,physicalCost,lifeCost,appliedCost,socialCost,electricityCost,perkCost,skillCost) {
	upgrades_Buyable.call(this,name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,formalCost,physicalCost,lifeCost,appliedCost,socialCost,electricityCost,perkCost,skillCost);
	this.type = type;
};
upgrades_RebuyableUpgrade.__name__ = ["upgrades","RebuyableUpgrade"];
upgrades_RebuyableUpgrade.__super__ = upgrades_Buyable;
upgrades_RebuyableUpgrade.prototype = $extend(upgrades_Buyable.prototype,{
	type: null
	,onClick: function() {
		if(!this.isBuyable()) {
			return;
		}
		this.takeResources();
		var v = this.amount;
		this.amount = this.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
		this.increaseCost();
		var _g = this.id;
		switch(_g) {
		case 0:
			break;
		case 1:
			Main.food.updatePlus();
			break;
		case 2:
			Main.wood.updatePlus();
			break;
		case 3:
			Main.metal.updatePlus();
			break;
		case 4:
			var tmp = Main.money.plus.add(thx__$Decimal_Decimal_$Impl_$.fromInt(10));
			Main.money.plus = tmp;
			break;
		case 5:
			break;
		case 6:
			break;
		case 7:
			break;
		case 8:
			break;
		case 9:
			Main.upgradeAmountMult = Main.upgradeAmountMult.add(thx_bigint_Decimals.fromFloat(0.01));
			break;
		case 10:
			Main.upgradeSpeedMult = Main.upgradeSpeedMult.add(thx_bigint_Decimals.fromFloat(0.01));
			break;
		case 11:
			var tmp1 = Main.electricity.plus.add(thx__$Decimal_Decimal_$Impl_$.fromInt(3));
			Main.electricity.plus = tmp1;
			var tmp2 = Main.wood.autoCost.add(thx__$Decimal_Decimal_$Impl_$.fromInt(1000));
			Main.wood.autoCost = tmp2;
			break;
		case 12:
			var tmp3 = Main.electricity.plus.add(thx__$Decimal_Decimal_$Impl_$.fromInt(1));
			Main.electricity.plus = tmp3;
			break;
		case 13:
			var tmp4 = Main.electricity.plus.add(thx__$Decimal_Decimal_$Impl_$.fromInt(10));
			Main.electricity.plus = tmp4;
			break;
		case 14:
			var tmp5 = Main.electricity.plus.add(thx__$Decimal_Decimal_$Impl_$.fromInt(100));
			Main.electricity.plus = tmp5;
			var tmp6 = Main.metal.autoCost.add(thx__$Decimal_Decimal_$Impl_$.fromInt(100000));
			Main.metal.autoCost = tmp6;
			break;
		case 100:
			break;
		case 101:
			break;
		case 102:
			break;
		case 103:
			break;
		case 104:
			break;
		case 105:
			break;
		case 106:
			break;
		case 107:
			break;
		case 108:
			break;
		case 109:
			break;
		case 110:
			break;
		case 111:
			break;
		}
	}
	,increaseCost: function() {
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			this.moneyCost = thx_bigint_Decimals.fromFloat(Math.pow(this.moneyCost.toFloat(),1.04));
			this.foodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.foodCost.toFloat(),1.04));
			this.woodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.woodCost.toFloat(),1.04));
			this.metalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.metalCost.toFloat(),1.04));
			this.formalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.formalCost.toFloat(),1.04));
			this.physicalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.physicalCost.toFloat(),1.04));
			this.lifeCost = thx_bigint_Decimals.fromFloat(Math.pow(this.lifeCost.toFloat(),1.04));
			this.appliedCost = thx_bigint_Decimals.fromFloat(Math.pow(this.appliedCost.toFloat(),1.04));
			this.socialCost = thx_bigint_Decimals.fromFloat(Math.pow(this.socialCost.toFloat(),1.04));
			this.electricityCost = thx_bigint_Decimals.fromFloat(Math.pow(this.electricityCost.toFloat(),1.04));
			break;
		case 1:
			this.moneyCost = thx_bigint_Decimals.fromFloat(Math.pow(this.moneyCost.toFloat(),1.04));
			this.foodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.foodCost.toFloat(),1.04));
			this.woodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.woodCost.toFloat(),1.04));
			this.metalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.metalCost.toFloat(),1.04));
			this.formalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.formalCost.toFloat(),1.04));
			this.physicalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.physicalCost.toFloat(),1.04));
			this.lifeCost = thx_bigint_Decimals.fromFloat(Math.pow(this.lifeCost.toFloat(),1.04));
			this.appliedCost = thx_bigint_Decimals.fromFloat(Math.pow(this.appliedCost.toFloat(),1.04));
			this.socialCost = thx_bigint_Decimals.fromFloat(Math.pow(this.socialCost.toFloat(),1.04));
			this.electricityCost = thx_bigint_Decimals.fromFloat(Math.pow(this.electricityCost.toFloat(),1.04));
			break;
		case 2:
			break;
		case 3:
			this.perkCost = thx_bigint_Decimals.fromFloat(Math.pow(this.perkCost.toFloat(),1.2) + 1);
			break;
		}
	}
	,__class__: upgrades_RebuyableUpgrade
});
var upgrades_OneTimeUpgrade = function(name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,formalCost,physicalCost,lifeCost,appliedCost,socialCost,electricityCost,perkCost,skillCost) {
	this.visible = true;
	this.bought = false;
	upgrades_Buyable.call(this,name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,formalCost,physicalCost,lifeCost,appliedCost,socialCost,electricityCost,perkCost,skillCost);
};
upgrades_OneTimeUpgrade.__name__ = ["upgrades","OneTimeUpgrade"];
upgrades_OneTimeUpgrade.__super__ = upgrades_Buyable;
upgrades_OneTimeUpgrade.prototype = $extend(upgrades_Buyable.prototype,{
	bought: null
	,visible: null
	,onClick: function() {
		if(!this.isBuyable()) {
			return;
		}
		this.takeResources();
		var v = this.amount;
		this.amount = this.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
		this.increaseCost();
		this.bought = true;
		var _g = this.id;
		switch(_g) {
		case 0:
			break;
		case 10:
			Main.house.populationMaxCost = thx__$Decimal_Decimal_$Impl_$.fromInt(-5);
			var tmp = Main.populationMax.amount.add(Main.house.amount.multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(3)));
			Main.populationMax.amount = tmp;
			$("#housePopulationIncrease").text(Main.house.populationMaxCost.negate().toFloat());
			break;
		case 11:
			Main.house.populationMaxCost = thx__$Decimal_Decimal_$Impl_$.fromInt(-10);
			var tmp1 = Main.populationMax.amount.add(Main.house.amount.multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(5)));
			Main.populationMax.amount = tmp1;
			$("#housePopulationIncrease").text(Main.house.populationMaxCost.negate().toFloat());
			break;
		case 12:
			Main.house.populationMaxCost = thx__$Decimal_Decimal_$Impl_$.fromInt(-25);
			var tmp2 = Main.populationMax.amount.add(Main.house.amount.multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(15)));
			Main.populationMax.amount = tmp2;
			$("#housePopulationIncrease").text(Main.house.populationMaxCost.negate().toFloat());
			break;
		}
	}
	,__class__: upgrades_OneTimeUpgrade
});
var upgrades_ResourceUpgrade = function(name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost,resource) {
	upgrades_Buyable.call(this,name,id,amount,moneyCost,foodCost,woodCost,metalCost,populationCost,populationMaxCost);
	this.resource = resource;
};
upgrades_ResourceUpgrade.__name__ = ["upgrades","ResourceUpgrade"];
upgrades_ResourceUpgrade.__super__ = upgrades_Buyable;
upgrades_ResourceUpgrade.prototype = $extend(upgrades_Buyable.prototype,{
	resource: null
	,getResource: function() {
		return this.resource;
	}
	,onClick: function() {
		if(!this.isBuyable()) {
			return;
		}
		this.takeResources();
		var v = this.amount;
		this.amount = this.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
		this.resource.updatePlus();
		this.resource.updateBarInc();
		this.increaseCost();
		UpdateUI.updateUpgrade(this);
	}
	,fire: function() {
		if(this.id == 0 && thx__$Decimal_Decimal_$Impl_$.greater(this.amount,thx__$Decimal_Decimal_$Impl_$.fromInt(1))) {
			this.moneyCost = thx_bigint_Decimals.fromFloat(Math.pow(this.moneyCost.toFloat(),0.96153846153846145));
			this.foodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.foodCost.toFloat(),0.96153846153846145));
			var tmp = Main.money.amount.add(this.moneyCost);
			Main.money.amount = tmp;
			var tmp1 = Main.food.amount.add(this.foodCost);
			Main.food.amount = tmp1;
			this.resource.updatePlus();
			var v = this.amount;
			this.amount = this.amount.subtract(thx__$Decimal_Decimal_$Impl_$.one);
			var v1 = Main.population.amount;
			var tmp2 = Main.population.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
			Main.population.amount = tmp2;
			var v2 = Main.populationMax.amount;
			var tmp3 = Main.populationMax.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
			Main.populationMax.amount = tmp3;
			if(thx__$Decimal_Decimal_$Impl_$.equals(this.amount,thx__$Decimal_Decimal_$Impl_$.fromInt(1))) {
				this.moneyCost = thx__$Decimal_Decimal_$Impl_$.fromInt(10000);
				this.foodCost = thx__$Decimal_Decimal_$Impl_$.fromInt(1000);
			}
			Util.saveGame();
			UpdateUI.updateUpgrade(this);
			UpdateUI.updateResource(this.resource);
		}
	}
	,increaseCost: function() {
		this.moneyCost = thx_bigint_Decimals.fromFloat(Math.pow(this.moneyCost.toFloat(),1.04));
		this.foodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.foodCost.toFloat(),1.04));
		this.woodCost = thx_bigint_Decimals.fromFloat(Math.pow(this.woodCost.toFloat(),1.04));
		this.metalCost = thx_bigint_Decimals.fromFloat(Math.pow(this.metalCost.toFloat(),1.04));
	}
	,__class__: upgrades_ResourceUpgrade
});
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.prototype = {
	id: null
	,run: function() {
	}
	,__class__: haxe_Timer
};
var Main = function() { };
Main.__name__ = ["Main"];
Main.main = function() {
	Main.food.setupBar();
	Main.wood.setupBar();
	window.document.getElementById("evolveButton").onclick = function() {
		Util.dialogs("evolve");
	};
	window.document.getElementById("evolutionButton").onclick = Main.evolve;
	window.document.getElementById("saveButton").onclick = Util.saveGame;
	window.document.getElementById("resourcesButton").onclick = Util.getResources;
	window.document.getElementById("achievementsButton").onclick = function() {
		Util.dialogs("achievements");
	};
	window.document.getElementById("optionsButton").onclick = function() {
		Util.dialogs("options");
	};
	window.document.getElementById("resetButton").onclick = function() {
		Util.dialogs("reset1");
	};
	window.document.getElementById("skillsButton").onclick = function() {
		Util.dialogs("skills",900,600);
	};
	window.document.getElementById("skillsBadge").onclick = function() {
		Util.dialogs("skills",900,600);
	};
	window.document.getElementById("hire").onclick = function() {
		UpdateUI.hireFire("hire");
	};
	window.document.getElementById("fire").onclick = function() {
		UpdateUI.hireFire("fire");
	};
	window.document.getElementById("constructionButton").onclick = function() {
		Util.dialogs("construction1");
	};
	window.document.getElementById("researchButton").onclick = function() {
		Util.dialogs("research1");
	};
	window.document.getElementById("researchProductionOverview").onclick = function() {
		Util.dialogs("researchProd");
	};
	window.document.getElementById("manufacturingComponentsButton").onclick = function() {
		Util.dialogs("components1");
	};
	window.document.getElementById("manufacturingUpgradesButton").onclick = function() {
		Util.dialogs("upgrades1");
	};
	var _g = 0;
	var _g1 = Main.resourceArray.slice(1,4);
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		var tmp = window.document;
		var tmp1 = i.name + "ProdButton";
		var tmp2 = (function(a1) {
			return function() {
				Util.dialogs(a1[0]);
			};
		})([i.name + "Prod"]);
		tmp.getElementById(tmp1).onclick = tmp2;
	}
	var _g2 = 0;
	var _g11 = Main.upgradeArray;
	while(_g2 < _g11.length) {
		var i1 = _g11[_g2];
		++_g2;
		window.document.getElementById(i1.name).onclick = $bind(i1,i1.onClick);
		if(i1.id == 0) {
			window.document.getElementById(i1.name + "Remove").onclick = $bind(i1,i1.fire);
		}
	}
	var _g3 = 0;
	var _g12 = Main.buildingArray;
	while(_g3 < _g12.length) {
		var i2 = _g12[_g3];
		++_g3;
		window.document.getElementById(i2.name + "Button").onclick = $bind(i2,i2.onClick);
	}
	var _g4 = 0;
	var _g13 = Main.researchArray;
	while(_g4 < _g13.length) {
		var i3 = _g13[_g4];
		++_g4;
		window.document.getElementById(i3.name + "Button").onclick = $bind(i3,i3.onClick);
	}
	var _g5 = 2;
	while(_g5 < 8) {
		var i4 = _g5++;
		var tmp3 = window.document;
		var tmp4 = i4 % 2 == 0 ? (function(a3,a2) {
			return function() {
				Util.changePage("reset",a2[0],a3[0]);
			};
		})([i4 / 2 | 0],[i4 / 2 + 1 | 0]) : (function(a31,a21) {
			return function() {
				Util.changePage("reset",a21[0],a31[0]);
			};
		})([i4 / 2 + 0.5 | 0],[i4 / 2 - 0.5 | 0]);
		tmp3.getElementById("resetP" + i4).onclick = tmp4;
	}
	window.document.addEventListener("visibilitychange",Util.addOfflineProduction);
	window.document.addEventListener("beforeunload",Util.saveGame);
	if(js_Browser.getLocalStorage().getItem("foodAmount") == null) {
		haxe_Log.trace("new game",{ fileName : "Main.hx", lineNumber : 177, className : "Main", methodName : "main"});
		UpdateUI.updateAll();
	} else {
		haxe_Log.trace("load game",{ fileName : "Main.hx", lineNumber : 180, className : "Main", methodName : "main"});
		Util.loadGame();
		UpdateUI.displayUI(Main.evolution);
		Util.addOfflineProduction();
		UpdateUI.updateAll();
	}
	Main.updateUITimer.run = UpdateUI.updateAll;
};
Main.getMoneyGain = function() {
	return Main.population.amount.multiply(Main.money.plus);
};
Main.addMoney = function() {
	var tmp = Main.money.amount.add(Main.population.amount.multiply(Main.money.plus));
	Main.money.amount = tmp;
	UpdateUI.updateResource(Main.money);
};
Main.addPopulation = function() {
	if(thx__$Decimal_Decimal_$Impl_$.greater(Main.populationMax.amount,Main.population.amount)) {
		var v = Main.population.amount;
		var tmp = Main.population.amount.add(thx__$Decimal_Decimal_$Impl_$.one);
		Main.population.amount = tmp;
		var tmp1 = Main.food.autoCost.add(thx__$Decimal_Decimal_$Impl_$.fromInt(10));
		Main.food.autoCost = tmp1;
	}
};
Main.evolve = function() {
	if(Main.evolution == 0 && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.food.amount,thx__$Decimal_Decimal_$Impl_$.fromInt(2000)) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.wood.amount,thx__$Decimal_Decimal_$Impl_$.fromInt(2000))) {
		Main.evolution++;
		UpdateUI.displayUI(Main.evolution);
	} else if(Main.evolution == 1 && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.food.amount,thx_bigint_Decimals.parse("10000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.wood.amount,thx_bigint_Decimals.parse("25000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.metal.amount,thx_bigint_Decimals.parse("15000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.farmerUpgrade1.amount,thx_bigint_Decimals.parse("2")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.woodcutterUpgrade1.amount,thx_bigint_Decimals.parse("2")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.minerUpgrade1.amount,thx_bigint_Decimals.parse("2"))) {
		Main.evolution++;
		UpdateUI.displayUI(Main.evolution);
	} else if(Main.evolution == 2 && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.food.amount,thx_bigint_Decimals.parse("500000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.wood.amount,thx_bigint_Decimals.parse("500000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.metal.amount,thx_bigint_Decimals.parse("500000")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.population.amount,thx_bigint_Decimals.parse("20")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.newFarmer.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.farmerUpgrade1.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.farmerUpgrade2.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.newWoodcutter.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.woodcutterUpgrade1.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.woodcutterUpgrade2.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.newMiner.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.minerUpgrade1.amount,thx_bigint_Decimals.parse("5")) && thx__$Decimal_Decimal_$Impl_$.greaterEquals(Main.minerUpgrade2.amount,thx_bigint_Decimals.parse("5"))) {
		Main.evolution++;
		UpdateUI.displayUI(Main.evolution);
	}
};
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var ValueType = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var UpdateUI = function() { };
UpdateUI.__name__ = ["UpdateUI"];
UpdateUI.updateAll = function() {
	UpdateUI.updateAllResources();
	UpdateUI.updateAllResourceUpgrades();
};
UpdateUI.updateAllResources = function() {
	var _g = 0;
	var _g1 = Main.resourceArray;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		UpdateUI.updateResource(i);
	}
};
UpdateUI.updateResource = function(resource) {
	$("#" + resource.name + "Amount").text(resource.format());
	$("#" + resource.name + "Second").text(Util.formatDecimal(resource.plus.subtract(resource.autoCost)));
};
UpdateUI.updateAllResourceUpgrades = function() {
	var _g = 0;
	var _g1 = Main.upgradeArray;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		UpdateUI.updateResourceUpgrade(i);
		UpdateUI.updateResourceUpgradeButton(i);
	}
};
UpdateUI.updateResourceUpgrade = function(upgrade) {
	$("#" + upgrade.name + "Count").text(upgrade.amount.toFloat());
	$("#" + upgrade.name + "Money").text(upgrade.format("money"));
	$("#" + upgrade.name + "Food").text(upgrade.format("food"));
	$("#" + upgrade.name + "Wood").text(upgrade.format("wood"));
	$("#" + upgrade.name + "Metal").text(upgrade.format("metal"));
	if(upgrade.id == 0) {
		$("#" + upgrade.name + "Gain").text(Util.formatDecimal(upgrade.resource.updatePlus().multiply(upgrade.resource.updateBarInc()).divide(upgrade.amount)));
	}
	UpdateUI.updateResourceUpgradeButton(upgrade);
};
UpdateUI.updateResourceUpgradeButton = function(upgrade) {
	if(upgrade.isBuyable()) {
		$("#" + upgrade.name).removeClass("disabled");
	} else {
		$("#" + upgrade.name).addClass("disabled");
	}
};
UpdateUI.updateUpgrade = function(upgrade) {
};
UpdateUI.updateAllUpgradeButtons = function() {
	var _g = 0;
	var _g1 = Main.buildingArray;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		UpdateUI.updateUpgradeButton(i);
	}
};
UpdateUI.updateUpgradeButton = function(upgrade) {
	if(upgrade.bought == true && upgrade.getId() >= 10 && upgrade.getId() <= 69 && upgrade.getId() % 10 != 3) {
		upgrade.visible = false;
	}
	if(upgrade.visible) {
		$("#" + Std.string(upgrade.getName())).removeClass("hidden");
	} else {
		$("#" + Std.string(upgrade.getName())).addClass("hidden");
	}
	if(upgrade.isBuyable()) {
		$("#" + Std.string(upgrade.getName())).removeClass("disabled");
	} else {
		$("#" + Std.string(upgrade.getName())).addClass("disabled");
	}
};
UpdateUI.displayUI = function(evolution) {
	if(evolution >= 1) {
		$("#metalBlock").removeClass("hidden");
		$("#metal").removeClass("hidden");
		$("#money").removeClass("hidden");
		$("#foodUpgrade2").removeClass("hidden");
		$("#woodUpgrade2").removeClass("hidden");
		$("#metalUpgrade2").removeClass("hidden");
		$("#evolution1").addClass("hidden");
		$("#evolution2").removeClass("hidden");
		Main.moneyTimer.run = Main.addMoney;
		Main.metal.setupBar();
	}
	if(evolution >= 2) {
		$("#foodUpgrade1").removeClass("hidden");
		$("#woodUpgrade1").removeClass("hidden");
		$("#metalUpgrade1").removeClass("hidden");
		$("#foodUpgrade3").removeClass("hidden");
		$("#woodUpgrade3").removeClass("hidden");
		$("#metalUpgrade3").removeClass("hidden");
		$("#construction").removeClass("hidden");
		$("#house").removeClass("hidden");
		$("#evolution2").addClass("hidden");
		$("#evolution3").removeClass("hidden");
	}
	if(evolution >= 3) {
		$("#farm").removeClass("hidden");
		$("#lumberMill").removeClass("hidden");
		$("#metalMine").removeClass("hidden");
		$("#goldMine").removeClass("hidden");
		$("#tax").removeClass("hidden");
		$("#skills").removeClass("hidden");
	}
};
UpdateUI.hireFire = function(action) {
	switch(action) {
	case "fire":
		$("#fire").addClass("disabled");
		$("#hire").removeClass("disabled");
		$("#newFarmer").hide();
		$("#newWoodcutter").hide();
		$("#newMiner").hide();
		$("#newFarmerRemove").show();
		$("#newWoodcutterRemove").show();
		$("#newMinerRemove").show();
		break;
	case "hire":
		$("#hire").addClass("disabled");
		$("#fire").removeClass("disabled");
		$("#newFarmer").show();
		$("#newWoodcutter").show();
		$("#newMiner").show();
		$("#newFarmerRemove").hide();
		$("#newWoodcutterRemove").hide();
		$("#newMinerRemove").hide();
		break;
	}
};
var Util = function() { };
Util.__name__ = ["Util"];
Util.saveGame = function() {
	if(js_Browser.getLocalStorage() == null) {
		haxe_Log.trace("Local Storage is not supported, please switch to a supporting browser, such as chrome, firefox, edge, or internet explorer to enable saving.",{ fileName : "Util.hx", lineNumber : 14, className : "Util", methodName : "saveGame"});
	}
	js_Browser.getLocalStorage().setItem("evolution",Std.string(Main.evolution));
	js_Browser.getLocalStorage().setItem("time",Std.string(new Date().getTime()));
	js_Browser.getLocalStorage().setItem("upgradeAmountMult",Main.upgradeAmountMult.toString());
	js_Browser.getLocalStorage().setItem("upgradeSpeedMult",Main.upgradeSpeedMult.toString());
	var _g = 0;
	var _g1 = Main.resourceArray;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		js_Browser.getLocalStorage().setItem(i.name + "Amount",i.amount.toString());
		js_Browser.getLocalStorage().setItem(i.name + "Plus",i.plus.toString());
		js_Browser.getLocalStorage().setItem(i.name + "AutoCost",i.autoCost.toString());
	}
	var _g2 = 0;
	var _g11 = Main.upgradeArray;
	while(_g2 < _g11.length) {
		var i1 = _g11[_g2];
		++_g2;
		js_Browser.getLocalStorage().setItem(i1.name + "Amount",i1.amount.toString());
		js_Browser.getLocalStorage().setItem(i1.name + "Money",i1.moneyCost.toString());
		js_Browser.getLocalStorage().setItem(i1.name + "Food",i1.foodCost.toString());
		js_Browser.getLocalStorage().setItem(i1.name + "Wood",i1.woodCost.toString());
		js_Browser.getLocalStorage().setItem(i1.name + "Metal",i1.metalCost.toString());
	}
	var _g3 = 0;
	var _g12 = Main.buildingArray;
	while(_g3 < _g12.length) {
		var i2 = _g12[_g3];
		++_g3;
		if(i2.amount != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Amount",i2.amount.toString());
		}
		if(i2.moneyCost != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Money",i2.moneyCost.toString());
		}
		if(i2.foodCost != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Food",i2.foodCost.toString());
		}
		if(i2.woodCost != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Wood",i2.woodCost.toString());
		}
		if(i2.metalCost != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Metal",i2.metalCost.toString());
		}
		if(i2.electricityCost != null) {
			js_Browser.getLocalStorage().setItem(i2.name + "Electricity",i2.electricityCost.toString());
		}
	}
	var _g4 = 0;
	var _g13 = Main.researchArray;
	while(_g4 < _g13.length) {
		var i3 = _g13[_g4];
		++_g4;
		if(i3.amount != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Amount",i3.amount.toString());
		}
		if(i3.moneyCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Money",i3.moneyCost.toString());
		}
		if(i3.foodCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Food",i3.foodCost.toString());
		}
		if(i3.woodCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Wood",i3.woodCost.toString());
		}
		if(i3.metalCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Metal",i3.metalCost.toString());
		}
		if(i3.electricityCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Electricity",i3.electricityCost.toString());
		}
		if(i3.formalCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Formal",i3.formalCost.toString());
		}
		if(i3.physicalCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Physical",i3.physicalCost.toString());
		}
		if(i3.lifeCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Life",i3.lifeCost.toString());
		}
		if(i3.appliedCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Applied",i3.appliedCost.toString());
		}
		if(i3.socialCost != null) {
			js_Browser.getLocalStorage().setItem(i3.name + "Social",i3.socialCost.toString());
		}
	}
};
Util.loadGame = function() {
	Main.evolution = Std.parseInt(js_Browser.getLocalStorage().getItem("evolution"));
	Main.upgradeAmountMult = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem("upgradeAmountMult"));
	Main.upgradeSpeedMult = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem("upgradeSpeedMult"));
	var _g = 0;
	var _g1 = Main.resourceArray;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		i.amount = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i.name + "Amount"));
		i.plus = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i.name + "Plus"));
		i.autoCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i.name + "AutoCost"));
	}
	var _g2 = 0;
	var _g11 = Main.upgradeArray;
	while(_g2 < _g11.length) {
		var i1 = _g11[_g2];
		++_g2;
		i1.amount = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i1.name + "Amount"));
		i1.moneyCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i1.name + "Money"));
		i1.foodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i1.name + "Food"));
		i1.woodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i1.name + "Wood"));
		i1.metalCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i1.name + "Metal"));
	}
	var _g3 = 0;
	var _g12 = Main.buildingArray;
	while(_g3 < _g12.length) {
		var i2 = _g12[_g3];
		++_g3;
		if(i2.amount != null) {
			i2.amount = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Amount"));
		}
		if(i2.moneyCost != null) {
			i2.moneyCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Money"));
		}
		if(i2.foodCost != null) {
			i2.foodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Food"));
		}
		if(i2.woodCost != null) {
			i2.woodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Wood"));
		}
		if(i2.metalCost != null) {
			i2.metalCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Metal"));
		}
		if(i2.electricityCost != null) {
			i2.electricityCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i2.name + "Electricity"));
		}
	}
	var _g4 = 0;
	var _g13 = Main.researchArray;
	while(_g4 < _g13.length) {
		var i3 = _g13[_g4];
		++_g4;
		if(i3.amount != null) {
			i3.amount = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Amount"));
		}
		if(i3.moneyCost != null) {
			i3.moneyCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Money"));
		}
		if(i3.foodCost != null) {
			i3.foodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Food"));
		}
		if(i3.woodCost != null) {
			i3.woodCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Wood"));
		}
		if(i3.metalCost != null) {
			i3.metalCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Metal"));
		}
		if(i3.electricityCost != null) {
			i3.electricityCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Electricity"));
		}
		if(i3.formalCost != null) {
			i3.formalCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Formal"));
		}
		if(i3.physicalCost != null) {
			i3.physicalCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Physical"));
		}
		if(i3.lifeCost != null) {
			i3.lifeCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Life"));
		}
		if(i3.appliedCost != null) {
			i3.appliedCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Applied"));
		}
		if(i3.socialCost != null) {
			i3.socialCost = thx_bigint_Decimals.parse(js_Browser.getLocalStorage().getItem(i3.name + "Social"));
		}
	}
};
Util.deleteGame = function() {
	js_Browser.getLocalStorage().clear();
	js_Browser.alert("deleted");
};
Util.getResources = function() {
	var tmp = Main.money.amount.add(thx_bigint_Decimals.parse("1000000000000000000000"));
	Main.money.amount = tmp;
	var tmp1 = Main.food.amount.add(thx_bigint_Decimals.parse("100000000000000000000"));
	Main.food.amount = tmp1;
	var tmp2 = Main.wood.amount.add(thx_bigint_Decimals.parse("100000000000000000000"));
	Main.wood.amount = tmp2;
	var tmp3 = Main.metal.amount.add(thx_bigint_Decimals.parse("100000000000000000000"));
	Main.metal.amount = tmp3;
	var tmp4 = Main.population.amount.add(thx_bigint_Decimals.parse("10000000000"));
	Main.population.amount = tmp4;
	var tmp5 = Main.populationMax.amount.add(thx_bigint_Decimals.parse("10000000000"));
	Main.populationMax.amount = tmp5;
	UpdateUI.updateAll();
};
Util.dialogs = function(dialog,width,height,buttons) {
	if(height == null) {
		height = "auto";
	}
	if(width == null) {
		width = 350;
	}
	$(function(){$("#" + dialog).dialog({closeText: "", width: width, height: height}).dialog("open").removeClass("hidden");});
};
Util.changePage = function(name,page,prev) {
	$("#" + name + page).removeClass("hidden");$("#" + name + page).dialog();$("#" + name + prev).dialog("close");
};
Util.formatDecimal = function(number) {
	var suffix = 0;
	while(thx__$Decimal_Decimal_$Impl_$.greaterEquals(number,thx__$Decimal_Decimal_$Impl_$.fromInt(1000000))) {
		++suffix;
		number = number.divide(thx__$Decimal_Decimal_$Impl_$.fromInt(1000000));
	}
	if(suffix == 0) {
		return number.roundTo(0).toString();
	}
	return number.roundTo(2).toString() + Main.displayLookup[suffix];
};
Util.addOfflineProduction = function() {
	if(window.document.visibilityState == "hidden") {
		Util.saveGame();
		return;
	}
	var oldTime = parseFloat(js_Browser.getLocalStorage().getItem("time"));
	var newTime = new Date().getTime();
	var secondsPassed = Math.floor((newTime - oldTime) / 1000);
	haxe_Log.trace(secondsPassed,{ fileName : "Util.hx", lineNumber : 143, className : "Util", methodName : "addOfflineProduction"});
	var tmp = Main.money.amount.add(Util.getOfflineProduction(Main.money,secondsPassed));
	Main.money.amount = tmp;
	var tmp1 = Main.food.amount.add(Util.getOfflineProduction(Main.food,secondsPassed));
	Main.food.amount = tmp1;
	var tmp2 = Main.wood.amount.add(Util.getOfflineProduction(Main.wood,secondsPassed));
	Main.wood.amount = tmp2;
	var tmp3 = Main.metal.amount.add(Util.getOfflineProduction(Main.metal,secondsPassed));
	Main.metal.amount = tmp3;
	var tmp4 = Main.electricity.amount.add(Util.getOfflineProduction(Main.electricity,secondsPassed));
	Main.electricity.amount = tmp4;
	var tmp5 = Main.formal.amount.add(Util.getOfflineProduction(Main.formal,secondsPassed));
	Main.formal.amount = tmp5;
	var tmp6 = Main.physical.amount.add(Util.getOfflineProduction(Main.physical,secondsPassed));
	Main.physical.amount = tmp6;
	var tmp7 = Main.life.amount.add(Util.getOfflineProduction(Main.life,secondsPassed));
	Main.life.amount = tmp7;
	var tmp8 = Main.applied.amount.add(Util.getOfflineProduction(Main.applied,secondsPassed));
	Main.applied.amount = tmp8;
	var tmp9 = Main.social.amount.add(Util.getOfflineProduction(Main.social,secondsPassed));
	Main.social.amount = tmp9;
};
Util.getOfflineProduction = function(resource,seconds) {
	if(resource == null) {
		return thx__$Decimal_Decimal_$Impl_$.zero;
	}
	if(resource == Main.money) {
		return Main.population.amount.multiply(Main.money.plus).multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(seconds)).divide(thx__$Decimal_Decimal_$Impl_$.fromInt(10));
	} else if(resource == Main.food || resource == Main.wood || resource == Main.metal) {
		return resource.getResourceAdd().multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(seconds)).divide(thx__$Decimal_Decimal_$Impl_$.fromInt(10));
	} else if(resource == Main.population || resource == Main.populationMax) {
		return thx__$Decimal_Decimal_$Impl_$.zero;
	} else {
		return resource.plus.multiply(thx__$Decimal_Decimal_$Impl_$.fromInt(seconds));
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe__$Int64_Int64_$Impl_$ = {};
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe","_Int64","Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	if(i.high == b.high && i.low == b.low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this3;
	while(true) {
		var this4 = new haxe__$Int64__$_$_$Int64(0,0);
		var b1 = this4;
		if(!(i.high != b1.high || i.low != b1.low)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			str = this5.low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this6;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		var _g = divisor.low;
		switch(_g) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
			break;
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this3;
	} else {
		var this4 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this4;
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		divisor = this5;
	} else {
		divisor = divisor;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this6;
	var this7 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this7;
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this8;
		} else if(b < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this10;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this11 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this11;
		} else if(b1 < 32) {
			var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this12;
		} else {
			var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this13;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var this14 = new haxe__$Int64__$_$_$Int64(0,0);
		var b2 = this14;
		if(!(mask.high != b2.high || mask.low != b2.low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			var this15 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this15;
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				var ret2 = high2--;
				high2 = high2 | 0;
			}
			var this16 = new haxe__$Int64__$_$_$Int64(high2,low2);
			modulus = this16;
		}
		var b3 = 1;
		b3 &= 63;
		if(b3 == 0) {
			var this17 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this17;
		} else if(b3 < 32) {
			var this18 = new haxe__$Int64__$_$_$Int64(mask.high >>> b3,mask.high << 32 - b3 | mask.low >>> b3);
			mask = this18;
		} else {
			var this19 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b3 - 32);
			mask = this19;
		}
		var b4 = 1;
		b4 &= 63;
		if(b4 == 0) {
			var this20 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this20;
		} else if(b4 < 32) {
			var this21 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b4,divisor.high << 32 - b4 | divisor.low >>> b4);
			divisor = this21;
		} else {
			var this22 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b4 - 32);
			divisor = this22;
		}
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high3,low3);
		quotient = this23;
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this24 = new haxe__$Int64__$_$_$Int64(high4,low4);
		modulus = this24;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds__$HashMap_HashMapData = function() {
	this.keys = new haxe_ds_IntMap();
	this.values = new haxe_ds_IntMap();
};
haxe_ds__$HashMap_HashMapData.__name__ = ["haxe","ds","_HashMap","HashMapData"];
haxe_ds__$HashMap_HashMapData.prototype = {
	keys: null
	,values: null
	,__class__: haxe_ds__$HashMap_HashMapData
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : ["haxe","ds","Option"], __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var thx_AnonymousMap = function(o) {
	this.o = o;
};
thx_AnonymousMap.__name__ = ["thx","AnonymousMap"];
thx_AnonymousMap.__interfaces__ = [haxe_IMap];
thx_AnonymousMap.prototype = {
	o: null
	,get: function(k) {
		return Reflect.field(this.o,k);
	}
	,getOption: function(k) {
		var value = this.get(k);
		if(null == value) {
			return haxe_ds_Option.None;
		} else {
			return haxe_ds_Option.Some(value);
		}
	}
	,getObject: function() {
		return this.o;
	}
	,set: function(k,v) {
		this.o[k] = v;
	}
	,exists: function(k) {
		return Object.prototype.hasOwnProperty.call(this.o,k);
	}
	,remove: function(k) {
		return Reflect.deleteField(this.o,k);
	}
	,keys: function() {
		return HxOverrides.iter(Reflect.fields(this.o));
	}
	,iterator: function() {
		var tmp = this.keys();
		var o = this.o;
		return thx_Iterators.fmap(tmp,function(a1) {
			return Reflect.field(o,a1);
		});
	}
	,toString: function() {
		return "{ " + thx_Maps.tuples(this).map(function(t) {
			return t._0 + " => " + Std.string(t._1);
		}).join(", ") + " }";
	}
	,__class__: thx_AnonymousMap
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = ["thx","Arrays"];
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "Arrays.hx", lineNumber : 55, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g11 = 0;
		var _g2 = array.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			result[indexes[i1]] = array[i1];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i]);
	}
};
thx_Arrays.eachi = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!predicate(arr[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	return indexes.map(function(i) {
		return arr[i];
	});
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	return arr.filter(function(v) {
		return null != v;
	});
};
thx_Arrays.compare = function(a,b) {
	var v = thx_Ints.compare(a.length,b.length);
	if(v != 0) {
		return v;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var el = $iterator(elements)();
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.contains(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var el = $iterator(elements)();
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.contains(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0 ? new Array(length) : [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.fromItem = function(t) {
	return [t];
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var _g = 0;
	while(_g < a.length) {
		var va = a[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < b.length) {
			var vb = b[_g1];
			++_g1;
			r.push([va,vb]);
		}
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var result = acopy.shift().map(function(v) {
		return [v];
	});
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result;
		result = [];
		var _g = 0;
		while(_g < array1.length) {
			var v1 = array1[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < tresult.length) {
				var ar = tresult[_g1];
				++_g1;
				var t = ar.slice();
				t.push(v1);
				result.push(t);
			}
		}
	}
	return result;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var _g = 0;
	while(_g < array.length) {
		var v = [array[_g]];
		++_g;
		var keep = !thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v));
		if(keep) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = array.length;
		while(_g3 < _g2) {
			var j = _g3++;
			if(!callback(array[i],array[j])) {
				return;
			}
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var _g = 0;
	while(_g < a.length) {
		var v = a[_g];
		++_g;
		if(null != v) {
			arr.push(v);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV[1]) {
		case 0:
			var v = maybeV[2];
			acc.push(v);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.flattenOptions = function(a) {
	var acc = [];
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		switch(e[1]) {
		case 0:
			var v = e[2];
			acc.push(v);
			break;
		case 1:
			return haxe_ds_Option.None;
		}
	}
	return haxe_ds_Option.Some(acc);
};
thx_Arrays.find = function(array,predicate) {
	var _g = 0;
	while(_g < array.length) {
		var element = array[_g];
		++_g;
		if(predicate(element)) {
			return element;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var _g = 0;
	while(_g < array.length) {
		var element = array[_g];
		++_g;
		if(predicate(element)) {
			return haxe_ds_Option.Some(element);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findMap = function(values,f) {
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		var opt = f(value);
		if(!thx_Options.isNone(opt)) {
			return opt;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.filterMap = function(values,f) {
	var acc = [];
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		var _g1 = f(value);
		switch(_g1[1]) {
		case 0:
			var v = _g1[2];
			acc.push(v);
			break;
		case 1:
			break;
		}
	}
	return acc;
};
thx_Arrays.findSome = function(options) {
	var _g = 0;
	while(_g < options.length) {
		var option = options[_g];
		++_g;
		if(!thx_Options.isNone(option)) {
			return option;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		j = len - i - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.firstOption = function(array) {
	var value = array[0];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.flatMap = function(array,callback) {
	var array1 = array.map(callback);
	return Array.prototype.concat.apply([],array1);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "Arrays.hx", lineNumber : 633, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},thx_Arrays.create(array.length * 2 - 1,value));
};
thx_Arrays.interspersef = function(array,f) {
	if(array.length == 0) {
		return [];
	}
	var acc = [array[0]];
	var _g1 = 1;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		acc.push(f());
		acc.push(array[i]);
	}
	return acc;
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.lastOption = function(array) {
	var value = array[array.length - 1];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.map = function(array,callback) {
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		r.push(callback(array[i]));
	}
	return r;
};
thx_Arrays.mapi = function(array,callback) {
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		r.push(callback(array[i],i));
	}
	return r;
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var _g = 0;
	while(_g < toRemove.length) {
		var element = toRemove[_g];
		++_g;
		thx_Arrays.removeAll(array,element,equality);
	}
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var r = [];
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array[i], _1 : i};
		r.push(this1);
	}
	var arr = r;
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i1) {
			var index = i1 > 0 && compare(arr[i1 - 1]._0,x._0) == 0 ? acc[arr[i1 - 1]._1] : i1;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc1,x1,i2) {
			acc1[x1._1] = i2 > 0 && compare(arr[i2 - 1]._0,x1._0) == 0 ? acc1[arr[i2 - 1]._1] : i2;
			return acc1;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var _g = 0;
	while(_g < array.length) {
		var v = array[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeft1 = function(array,f) {
	var tail = thx_Arrays.dropLeft(array,1);
	var head = array[0];
	if(head == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(thx_Arrays.reduce(tail,f,head));
	}
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var _g = 0;
	while(_g < array.length) {
		var a = array[_g];
		++_g;
		switch(acc[1]) {
		case 0:
			var error = acc[2];
			return acc;
		case 1:
			var b = acc[2];
			acc = f(b,a);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var _e = m;
	return thx_Arrays.reduce(array.map(f),function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	},thx__$Monoid_Monoid_$Impl_$.get_zero(m));
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx__$Nel_Nel_$Impl_$.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx__$Nel_Nel_$Impl_$.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.resized = function(array,length,fill) {
	array = array.slice();
	return thx_Arrays.resize(array,length,fill);
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	if(n < b) {
		n = n;
	} else {
		n = b;
	}
	var copy = array.slice();
	var result = [];
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	var strings = arr.map(thx_Dynamics.string);
	return "[" + strings.join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	var len = Math.ceil(array.length / parts);
	return thx_Arrays.splitBy(array,len);
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	if(len < b) {
		len = len;
	} else {
		len = b;
	}
	var _g1 = 0;
	var _g = Math.ceil(array.length / len);
	while(_g1 < _g) {
		var p = _g1++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},haxe_ds_Option.Some([]));
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g1 = 0;
	var _g = arr[0].length;
	while(_g1 < _g) {
		var i = _g1++;
		var row = [];
		result.push(row);
		var _g3 = 0;
		var _g2 = arr.length;
		while(_g3 < _g2) {
			var j = _g3++;
			row.push(arr[j][i]);
		}
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g1 = 0;
		var _g = arr.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b ? a : b;
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g1 = 0;
	var a = ax.length;
	var b = fx.length;
	var _g = a < b ? a : b;
	while(_g1 < _g) {
		var i = _g1++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	return thx_Arrays.zipAp(bx,ax.map(thx_Functions2.curry(f)));
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays["with"] = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tuple = arr[i];
		if(thx_Options.isNone(thx_fp__$Map_Map_$Impl_$.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp__$Map_Map_$Impl_$.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx__$Nel_Nel_$Impl_$.fromArray(collisions),m);
};
thx_Arrays.toStringMap = function(arr) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Arrays.partition = function(arr,f) {
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(f(b)) {
			a._0.push(b);
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.partitionWhile = function(arr,f) {
	var partitioning = true;
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(partitioning) {
			if(f(b)) {
				a._0.push(b);
			} else {
				partitioning = false;
				a._1.push(b);
			}
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.dropLeft = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(n);
	}
};
thx_Arrays.dropRight = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(0,a.length - n);
	}
};
thx_Arrays.dropWhile = function(a,p) {
	var r = [].concat(a);
	var _g = 0;
	while(_g < a.length) {
		var e = a[_g];
		++_g;
		if(p(e)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
thx_Arrays.pad = function(arr,len,def) {
	var len0 = len - arr.length;
	var arr0 = [];
	var _g1 = 0;
	var _g = len0;
	while(_g1 < _g) {
		var i = _g1++;
		arr0.push(def);
	}
	return arr.concat(arr0);
};
thx_Arrays.fill = function(arr,def) {
	return arr.map(function(x) {
		if(x == null) {
			return def;
		} else {
			return x;
		}
	});
};
var thx_ArrayFloats = function() { };
thx_ArrayFloats.__name__ = ["thx","ArrayFloats"];
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	return arr.filter(function(v) {
		if(null != v) {
			return isFinite(v);
		} else {
			return false;
		}
	});
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	array = array.slice();
	return thx_ArrayFloats.resize(array,length,fill);
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	var variance = thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1);
	return Math.sqrt(variance);
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
thx_ArrayInts.__name__ = ["thx","ArrayInts"];
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	array = array.slice();
	return thx_ArrayInts.resize(array,length,fill);
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
thx_ArrayStrings.__name__ = ["thx","ArrayStrings"];
thx_ArrayStrings.compact = function(arr) {
	return arr.filter(function(v) {
		return !thx_Strings.isEmpty(v);
	});
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx__$BigInt_BigInt_$Impl_$ = {};
thx__$BigInt_BigInt_$Impl_$.__name__ = ["thx","_BigInt","BigInt_Impl_"];
thx__$BigInt_BigInt_$Impl_$.fromInt = function(value) {
	return thx_bigint_Bigs.fromInt(value);
};
thx__$BigInt_BigInt_$Impl_$.fromFloat = function(value) {
	return thx_bigint_Bigs.fromFloat(value);
};
thx__$BigInt_BigInt_$Impl_$.fromInt64 = function(value) {
	return thx_bigint_Bigs.fromInt64(value);
};
thx__$BigInt_BigInt_$Impl_$.fromString = function(value) {
	return thx_bigint_Bigs.parseBase(value,10);
};
thx__$BigInt_BigInt_$Impl_$.fromStringWithBase = function(value,base) {
	return thx_bigint_Bigs.parseBase(value,base);
};
thx__$BigInt_BigInt_$Impl_$.randomBetween = function(a,b) {
	var low = thx__$BigInt_BigInt_$Impl_$.less(a,b) ? a : b;
	var high = thx__$BigInt_BigInt_$Impl_$.greater(a,b) ? a : b;
	var range = high.subtract(low);
	return low.add(range.random());
};
thx__$BigInt_BigInt_$Impl_$.compare = function(a,b) {
	return a.compareTo(b);
};
thx__$BigInt_BigInt_$Impl_$.isZero = function(this1) {
	return this1.isZero();
};
thx__$BigInt_BigInt_$Impl_$.abs = function(this1) {
	return this1.abs();
};
thx__$BigInt_BigInt_$Impl_$.compareTo = function(this1,that) {
	return this1.compareTo(that);
};
thx__$BigInt_BigInt_$Impl_$.compareToAbs = function(this1,that) {
	return this1.compareToAbs(that);
};
thx__$BigInt_BigInt_$Impl_$.next = function(this1) {
	return this1.next();
};
thx__$BigInt_BigInt_$Impl_$.prev = function(this1) {
	return this1.prev();
};
thx__$BigInt_BigInt_$Impl_$.square = function(this1) {
	return this1.square();
};
thx__$BigInt_BigInt_$Impl_$.pow = function(this1,exp) {
	return this1.pow(exp);
};
thx__$BigInt_BigInt_$Impl_$.isEven = function(this1) {
	return this1.isEven();
};
thx__$BigInt_BigInt_$Impl_$.isOdd = function(this1) {
	return this1.isOdd();
};
thx__$BigInt_BigInt_$Impl_$.isNegative = function(this1) {
	return this1.sign;
};
thx__$BigInt_BigInt_$Impl_$.isPositive = function(this1) {
	return this1.compareTo(thx__$BigInt_BigInt_$Impl_$.zero) > 0;
};
thx__$BigInt_BigInt_$Impl_$.isUnit = function(this1) {
	return this1.isUnit();
};
thx__$BigInt_BigInt_$Impl_$.isDivisibleBy = function(this1,that) {
	if(that.isZero()) {
		return false;
	}
	if(that.isUnit()) {
		return true;
	}
	if(thx__$BigInt_BigInt_$Impl_$.equals(that,thx__$BigInt_BigInt_$Impl_$.two)) {
		return this1.isEven();
	}
	return this1.modulo(that).isZero();
};
thx__$BigInt_BigInt_$Impl_$.isPrime = function(this1) {
	var n = this1.abs();
	var nPrev = n.prev();
	if(n.isUnit()) {
		return false;
	}
	if(thx__$BigInt_BigInt_$Impl_$.equals(n,thx_bigint_Bigs.fromInt(2)) || thx__$BigInt_BigInt_$Impl_$.equals(n,thx_bigint_Bigs.fromInt(3)) || thx__$BigInt_BigInt_$Impl_$.equals(n,thx_bigint_Bigs.fromInt(5))) {
		return true;
	}
	if(n.isEven() || thx__$BigInt_BigInt_$Impl_$.isDivisibleBy(n,thx_bigint_Bigs.fromInt(3)) || thx__$BigInt_BigInt_$Impl_$.isDivisibleBy(n,thx_bigint_Bigs.fromInt(5))) {
		return false;
	}
	if(thx__$BigInt_BigInt_$Impl_$.less(n,thx_bigint_Bigs.fromInt(25))) {
		return true;
	}
	var a = [2,3,5,7,11,13,17,19];
	var b = nPrev;
	var d;
	var t;
	var i;
	var x;
	while(b.isEven()) b = b.divide(thx_bigint_Bigs.fromInt(2));
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i1 = _g1++;
		x = thx__$BigInt_BigInt_$Impl_$.modPow(thx_bigint_Bigs.fromInt(a[i1]),b,n);
		if(thx__$BigInt_BigInt_$Impl_$.equals(x,thx__$BigInt_BigInt_$Impl_$.one) || thx__$BigInt_BigInt_$Impl_$.equals(x,nPrev)) {
			continue;
		}
		t = true;
		d = b;
		while(t && thx__$BigInt_BigInt_$Impl_$.less(d,nPrev)) {
			x = x.square().modulo(n);
			if(thx__$BigInt_BigInt_$Impl_$.equals(x,nPrev)) {
				t = false;
			}
			d = d.multiply(thx_bigint_Bigs.fromInt(2));
		}
		if(t) {
			return false;
		}
	}
	return false;
};
thx__$BigInt_BigInt_$Impl_$.modPow = function(this1,exp,mod) {
	if(mod.isZero()) {
		throw new thx_Error("Cannot take modPow with modulus 0",null,{ fileName : "BigInt.hx", lineNumber : 126, className : "thx._BigInt.BigInt_Impl_", methodName : "modPow"});
	}
	var r = thx_bigint_Small.one;
	var base = this1.modulo(mod);
	if(base.isZero()) {
		return thx_bigint_Small.zero;
	}
	while(exp.compareTo(thx__$BigInt_BigInt_$Impl_$.zero) > 0) {
		if(exp.isOdd()) {
			r = r.multiply(base).modulo(mod);
		}
		exp = exp.divide(thx_bigint_Small.two);
		base = base.square().modulo(mod);
	}
	return r;
};
thx__$BigInt_BigInt_$Impl_$.euclideanModPow = function(this1,exp,mod) {
	var x = thx__$BigInt_BigInt_$Impl_$.modPow(this1,exp,mod);
	if(x.sign) {
		return x.add(mod);
	} else {
		return x;
	}
};
thx__$BigInt_BigInt_$Impl_$.max = function(this1,that) {
	if(thx__$BigInt_BigInt_$Impl_$.greater(this1,that)) {
		return this1;
	} else {
		return that;
	}
};
thx__$BigInt_BigInt_$Impl_$.min = function(this1,that) {
	if(thx__$BigInt_BigInt_$Impl_$.less(this1,that)) {
		return this1;
	} else {
		return that;
	}
};
thx__$BigInt_BigInt_$Impl_$.gcd = function(this1,that) {
	var a = this1.abs();
	var b = that.abs();
	if(thx__$BigInt_BigInt_$Impl_$.equals(a,b) || a.isZero()) {
		return b;
	}
	if(b.isZero()) {
		return a;
	}
	if(a.isEven()) {
		if(b.isOdd()) {
			return thx__$BigInt_BigInt_$Impl_$.gcd(a.divide(thx_bigint_Small.two),b);
		}
		return thx__$BigInt_BigInt_$Impl_$.gcd(a.divide(thx_bigint_Small.two),b.divide(thx_bigint_Small.two)).multiply(thx_bigint_Small.two);
	}
	if(b.isEven()) {
		return thx__$BigInt_BigInt_$Impl_$.gcd(a,b.divide(thx_bigint_Small.two));
	}
	if(thx__$BigInt_BigInt_$Impl_$.greater(a,b)) {
		return thx__$BigInt_BigInt_$Impl_$.gcd(a.subtract(b).divide(thx_bigint_Small.two),b);
	}
	return thx__$BigInt_BigInt_$Impl_$.gcd(b.subtract(a).divide(thx_bigint_Small.two),a);
};
thx__$BigInt_BigInt_$Impl_$.lcm = function(this1,that) {
	var a = this1.abs();
	var b = that.abs();
	return a.multiply(b).divide(thx__$BigInt_BigInt_$Impl_$.gcd(a,b));
};
thx__$BigInt_BigInt_$Impl_$.greaterThan = function(this1,that) {
	return this1.compareTo(that) > 0;
};
thx__$BigInt_BigInt_$Impl_$.greater = function(self,that) {
	return self.compareTo(that) > 0;
};
thx__$BigInt_BigInt_$Impl_$.greaterEqualsTo = function(this1,that) {
	return this1.compareTo(that) >= 0;
};
thx__$BigInt_BigInt_$Impl_$.greaterEquals = function(self,that) {
	return self.compareTo(that) >= 0;
};
thx__$BigInt_BigInt_$Impl_$.lessThan = function(this1,that) {
	return this1.compareTo(that) < 0;
};
thx__$BigInt_BigInt_$Impl_$.less = function(self,that) {
	return self.compareTo(that) < 0;
};
thx__$BigInt_BigInt_$Impl_$.lessEqualsTo = function(this1,that) {
	return this1.compareTo(that) <= 0;
};
thx__$BigInt_BigInt_$Impl_$.lessEquals = function(self,that) {
	return self.compareTo(that) <= 0;
};
thx__$BigInt_BigInt_$Impl_$.equalsTo = function(this1,that) {
	return this1.compareTo(that) == 0;
};
thx__$BigInt_BigInt_$Impl_$.equals = function(self,that) {
	return self.compareTo(that) == 0;
};
thx__$BigInt_BigInt_$Impl_$.notEqualsTo = function(this1,that) {
	return this1.compareTo(that) != 0;
};
thx__$BigInt_BigInt_$Impl_$.notEquals = function(self,that) {
	return self.compareTo(that) != 0;
};
thx__$BigInt_BigInt_$Impl_$.add = function(this1,that) {
	return this1.add(that);
};
thx__$BigInt_BigInt_$Impl_$.subtract = function(this1,that) {
	return this1.subtract(that);
};
thx__$BigInt_BigInt_$Impl_$.preIncrement = function(this1) {
	this1 = this1.add(thx_bigint_Small.one);
	return this1;
};
thx__$BigInt_BigInt_$Impl_$.postIncrement = function(this1) {
	var v = this1;
	this1 = this1.add(thx_bigint_Small.one);
	return v;
};
thx__$BigInt_BigInt_$Impl_$.preDecrement = function(this1) {
	this1 = this1.subtract(thx_bigint_Small.one);
	return this1;
};
thx__$BigInt_BigInt_$Impl_$.postDecrement = function(this1) {
	var v = this1;
	this1 = this1.subtract(thx_bigint_Small.one);
	return v;
};
thx__$BigInt_BigInt_$Impl_$.negate = function(this1) {
	return this1.negate();
};
thx__$BigInt_BigInt_$Impl_$.multiply = function(this1,that) {
	return this1.multiply(that);
};
thx__$BigInt_BigInt_$Impl_$.divide = function(this1,that) {
	return this1.divide(that);
};
thx__$BigInt_BigInt_$Impl_$.modulo = function(this1,that) {
	return this1.modulo(that);
};
thx__$BigInt_BigInt_$Impl_$.shiftLeft = function(this1,that) {
	return this1.shiftLeft(that);
};
thx__$BigInt_BigInt_$Impl_$.shiftRight = function(this1,that) {
	return this1.shiftRight(that);
};
thx__$BigInt_BigInt_$Impl_$.not = function(this1) {
	return this1.not();
};
thx__$BigInt_BigInt_$Impl_$.and = function(this1,that) {
	return this1.and(that);
};
thx__$BigInt_BigInt_$Impl_$.or = function(this1,that) {
	return this1.or(that);
};
thx__$BigInt_BigInt_$Impl_$.xor = function(this1,that) {
	return this1.xor(that);
};
thx__$BigInt_BigInt_$Impl_$.divMod = function(this1,that) {
	return this1.divMod(that);
};
thx__$BigInt_BigInt_$Impl_$.toInt = function(this1) {
	return this1.toInt();
};
thx__$BigInt_BigInt_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
thx__$BigInt_BigInt_$Impl_$.toInt64 = function(this1) {
	return thx_bigint_Bigs.toInt64(this1);
};
thx__$BigInt_BigInt_$Impl_$.toString = function(this1) {
	return this1.toString();
};
thx__$BigInt_BigInt_$Impl_$.toStringWithBase = function(this1,base) {
	return this1.toStringWithBase(base);
};
var thx_Bools = function() { };
thx_Bools.__name__ = ["thx","Bools"];
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			var v1 = _g;
			throw new js__$Boot_HaxeError("unable to parse \"" + v1 + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx__$Char_Char_$Impl_$ = {};
thx__$Char_Char_$Impl_$.__name__ = ["thx","_Char","Char_Impl_"];
thx__$Char_Char_$Impl_$.at = function(s,index) {
	var i = HxOverrides.cca(s,index);
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this1 = i;
	return this1;
};
thx__$Char_Char_$Impl_$.fromInt = function(i) {
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this1 = i;
	return this1;
};
thx__$Char_Char_$Impl_$.fromString = function(s) {
	var i = HxOverrides.cca(s,0);
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this1 = i;
	return this1;
};
thx__$Char_Char_$Impl_$.compare = function(a,b) {
	return haxe_Utf8.compare(String.fromCharCode(a),String.fromCharCode(b));
};
thx__$Char_Char_$Impl_$._new = function(i) {
	var this1 = i;
	return this1;
};
thx__$Char_Char_$Impl_$.compareTo = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other));
};
thx__$Char_Char_$Impl_$.isBreakingWhitespace = function(this1) {
	if(!(this1 == 32 || this1 == 9 || this1 == 10)) {
		return this1 == 13;
	} else {
		return true;
	}
};
thx__$Char_Char_$Impl_$.isControl = function(this1) {
	if(!(this1 >= 0 && this1 <= 31 || this1 == 127)) {
		if(this1 >= 128) {
			return this1 <= 159;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
thx__$Char_Char_$Impl_$.isUnicode = function(this1) {
	return this1 <= 65533;
};
thx__$Char_Char_$Impl_$.next = function(this1) {
	var i = this1 + 1;
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this2 = i;
	return this2;
};
thx__$Char_Char_$Impl_$.prev = function(this1) {
	var i = this1 - 1;
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this2 = i;
	return this2;
};
thx__$Char_Char_$Impl_$.toUpperCase = function(this1) {
	var i = HxOverrides.cca(String.fromCharCode(this1).toUpperCase(),0);
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this2 = i;
	return this2;
};
thx__$Char_Char_$Impl_$.toLowerCase = function(this1) {
	var i = HxOverrides.cca(String.fromCharCode(this1).toLowerCase(),0);
	thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
	var this2 = i;
	return this2;
};
thx__$Char_Char_$Impl_$.equalsTo = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other)) == 0;
};
thx__$Char_Char_$Impl_$.equals = function(self,other) {
	return haxe_Utf8.compare(String.fromCharCode(self),String.fromCharCode(other)) == 0;
};
thx__$Char_Char_$Impl_$.greaterThan = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other)) > 0;
};
thx__$Char_Char_$Impl_$.greater = function(self,other) {
	return haxe_Utf8.compare(String.fromCharCode(self),String.fromCharCode(other)) > 0;
};
thx__$Char_Char_$Impl_$.greaterEqualsThan = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other)) >= 0;
};
thx__$Char_Char_$Impl_$.greaterEquals = function(self,other) {
	return haxe_Utf8.compare(String.fromCharCode(self),String.fromCharCode(other)) >= 0;
};
thx__$Char_Char_$Impl_$.lessEqualsTo = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other)) <= 0;
};
thx__$Char_Char_$Impl_$.lessEquals = function(self,other) {
	return haxe_Utf8.compare(String.fromCharCode(self),String.fromCharCode(other)) <= 0;
};
thx__$Char_Char_$Impl_$.lessThan = function(this1,other) {
	return haxe_Utf8.compare(String.fromCharCode(this1),String.fromCharCode(other)) < 0;
};
thx__$Char_Char_$Impl_$.less = function(self,other) {
	return haxe_Utf8.compare(String.fromCharCode(self),String.fromCharCode(other)) < 0;
};
thx__$Char_Char_$Impl_$.toInt = function(this1) {
	return this1;
};
thx__$Char_Char_$Impl_$.toString = function(this1) {
	return String.fromCharCode(this1);
};
thx__$Char_Char_$Impl_$.arrayToString = function(arr) {
	return arr.map(function(c) {
		return String.fromCharCode(c);
	}).join("");
};
var thx__$Chars_Chars_$Impl_$ = {};
thx__$Chars_Chars_$Impl_$.__name__ = ["thx","_Chars","Chars_Impl_"];
thx__$Chars_Chars_$Impl_$.fromString = function(s) {
	var this1 = thx_Strings.map(s,function(s1) {
		var i = HxOverrides.cca(s1,0);
		thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
		var this2 = i;
		return this2;
	});
	return this1;
};
thx__$Chars_Chars_$Impl_$.fromArray = function(arr) {
	var this1 = arr;
	return this1;
};
thx__$Chars_Chars_$Impl_$.fromChars = function(arr) {
	var this1 = arr;
	return this1;
};
thx__$Chars_Chars_$Impl_$._new = function(chars) {
	var this1 = chars;
	return this1;
};
thx__$Chars_Chars_$Impl_$.toString = function(this1) {
	return this1.map(function(c) {
		return String.fromCharCode(c);
	}).join("");
};
var thx_Conditions = function() { };
thx_Conditions.__name__ = ["thx","Conditions"];
var thx_DateConst = function() { };
thx_DateConst.__name__ = ["thx","DateConst"];
var thx__$DateTime_DateTime_$Impl_$ = {};
thx__$DateTime_DateTime_$Impl_$.__name__ = ["thx","_DateTime","DateTime_Impl_"];
thx__$DateTime_DateTime_$Impl_$.localOffset = function() {
	var now = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now();
	var local = new Date(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) - 1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(now,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(now),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(now),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(now));
	var a = now;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var delta = Math.floor(thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient) / 1000) * 1000 - local.getTime();
	var a1 = thx_Int64s.fromFloat(delta);
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a1.low & mask;
	var ah = a1.low >>> 16;
	var bl = b1.low & mask;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low1 = p00;
	var high1 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low1 = low1 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p01) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	p10 = p10 << 16;
	low1 = low1 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p10) < 0) {
		var ret2 = high1++;
		high1 = high1 | 0;
	}
	high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this3 = this2;
	return this3;
};
thx__$DateTime_DateTime_$Impl_$.now = function() {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now(),thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.nowUtc = function() {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now(),thx__$Time_Time_$Impl_$.zero];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromDate = function(date) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime()),thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromDateWithOffset = function(date,offset) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime()),offset];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromTime = function(timestamp) {
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(timestamp),thx__$Time_Time_$Impl_$.zero];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.fromString = function(s) {
	if(s == null) {
		throw new thx_Error("null String cannot be parsed to DateTime",null,{ fileName : "DateTime.hx", lineNumber : 97, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var pattern = new EReg("^([-])?(\\d+)[-](\\d{2})[-](\\d{2})(?:[T ](\\d{2})[:](\\d{2})[:](\\d{2})(?:\\.(\\d+))?(Z|([+-]\\d{2})[:](\\d{2}))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse DateTime string: \"" + s + "\"",null,{ fileName : "DateTime.hx", lineNumber : 100, className : "thx._DateTime.DateTime_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(8);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var time = thx__$Time_Time_$Impl_$.zero;
	var timepart = pattern.matched(9);
	if(null != timepart && "Z" != timepart) {
		var hours = pattern.matched(10);
		if(hours.substring(0,1) == "+") {
			hours = hours.substring(1);
		}
		time = thx__$Time_Time_$Impl_$.create(Std.parseInt(hours),Std.parseInt(pattern.matched(11)),0);
	}
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(Std.parseInt(pattern.matched(2)),Std.parseInt(pattern.matched(3)),Std.parseInt(pattern.matched(4)),Std.parseInt(pattern.matched(5)),Std.parseInt(pattern.matched(6)),Std.parseInt(pattern.matched(7)),0),time];
	var this2 = this1;
	var this3 = this2[0];
	var a = this3;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this4);
	var this5 = this2[1];
	var this6 = [dateTime,this5];
	var this7 = this6;
	var this8 = new haxe__$Int64__$_$_$Int64(mticks >> 31,mticks);
	var ticks = this8;
	var this9 = this7[0];
	var a1 = this9;
	var high1 = a1.high + ticks.high | 0;
	var low1 = a1.low + ticks.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this10 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var dateTime1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this10);
	var this11 = this7[1];
	var this12 = [dateTime1,this11];
	var date = this12;
	if(pattern.matched(1) == "-") {
		var this13 = date[0];
		var x = this13;
		var high2 = ~x.high;
		var low2 = -x.low;
		if(low2 == 0) {
			var ret2 = high2++;
			high2 = high2 | 0;
		}
		var this14 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this15 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this14),time];
		return this15;
	}
	return date;
};
thx__$DateTime_DateTime_$Impl_$.parse = function(s) {
	try {
		return thx_Either.Right(thx__$DateTime_DateTime_$Impl_$.fromString(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "DateTime.hx", lineNumber : 145, className : "thx._DateTime.DateTime_Impl_", methodName : "parse"}).message);
	}
};
thx__$DateTime_DateTime_$Impl_$.daysRange = function(start,end) {
	if(thx__$DateTime_DateTime_$Impl_$.compareTo(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx__$DateTime_DateTime_$Impl_$.sameDay(start,end)) {
		days.push(start);
		start = thx__$DateTime_DateTime_$Impl_$.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx__$DateTime_DateTime_$Impl_$.compare = function(a,b) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(a,b);
};
thx__$DateTime_DateTime_$Impl_$.ord = function() {
	return thx__$Ord_Ord_$Impl_$.fromIntComparison(thx__$DateTime_DateTime_$Impl_$.compare);
};
thx__$DateTime_DateTime_$Impl_$.create = function(year,month,day,hour,minute,second,millisecond,offset) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	var this1 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this2 = this1;
	var this3 = this2[0];
	var a = this3;
	var b = offset;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this4);
	var this5 = this2[1];
	var this6 = [dateTime,this5];
	return this6;
};
thx__$DateTime_DateTime_$Impl_$._new = function(dateTime,offset) {
	var this1 = [dateTime,offset];
	return this1;
};
thx__$DateTime_DateTime_$Impl_$.min = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this2,this3) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTime_DateTime_$Impl_$.max = function(this1,other) {
	var this2 = this1[0];
	var this3 = other[0];
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this2,this3) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTime_DateTime_$Impl_$.jump = function(this1,period,amount) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var sec = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this5);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var min = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this9);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var hr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this13);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this17,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var mon = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this21,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var yr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this25,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	var this26 = this1[0];
	var a6 = this26;
	var this27 = this1[1];
	var b6 = this27;
	var high6 = a6.high + b6.high | 0;
	var low6 = a6.low + b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,a6.low) < 0) {
		var ret6 = high6++;
		high6 = high6 | 0;
	}
	var this28 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var this29 = this28;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this29);
	var this30 = this1[1];
	var offset = this30;
	var this31 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(yr,mon,day,hr,min,sec,millisecond),offset];
	var this32 = this31;
	var this33 = this32[0];
	var a7 = this33;
	var b7 = offset;
	var high7 = a7.high - b7.high | 0;
	var low7 = a7.low - b7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a7.low,b7.low) < 0) {
		var ret7 = high7--;
		high7 = high7 | 0;
	}
	var this34 = new haxe__$Int64__$_$_$Int64(high7,low7);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this34);
	var this35 = this32[1];
	var this36 = [dateTime,this35];
	return this36;
};
thx__$DateTime_DateTime_$Impl_$.daysInThisMonth = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(tmp,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTime_DateTime_$Impl_$.prevYear = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Year,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextYear = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Year,1);
};
thx__$DateTime_DateTime_$Impl_$.prevMonth = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Month,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextMonth = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Month,1);
};
thx__$DateTime_DateTime_$Impl_$.prevWeek = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Week,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextWeek = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Week,1);
};
thx__$DateTime_DateTime_$Impl_$.prevDay = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextDay = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,1);
};
thx__$DateTime_DateTime_$Impl_$.prevHour = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Hour,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextHour = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Hour,1);
};
thx__$DateTime_DateTime_$Impl_$.prevMinute = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Minute,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextMinute = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Minute,1);
};
thx__$DateTime_DateTime_$Impl_$.prevSecond = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Second,-1);
};
thx__$DateTime_DateTime_$Impl_$.nextSecond = function(this1) {
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Second,1);
};
thx__$DateTime_DateTime_$Impl_$.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this5);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapNextWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this5);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapPrevWeekDay = function(this1,weekday) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this5);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx__$DateTime_DateTime_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTime_DateTime_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divCeil(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		var this5 = this1[1];
		var this6 = [this4,this5];
		return this6;
	case 1:
		var this7 = this1[0];
		var a1 = thx_Int64s.divCeil(this7,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		var this10 = this1[1];
		var this11 = [this9,this10];
		return this11;
	case 2:
		var this12 = this1[0];
		var a2 = thx_Int64s.divCeil(this12,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this13 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this14 = this13;
		var this15 = this1[1];
		var this16 = [this14,this15];
		return this16;
	case 3:
		var this17 = this1[0];
		var a3 = this17;
		var this18 = this1[1];
		var b3 = this18;
		var high3 = a3.high + b3.high | 0;
		var low3 = a3.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
			var ret6 = high3++;
			high3 = high3 | 0;
		}
		var this19 = new haxe__$Int64__$_$_$Int64(high3,low3);
		var this20 = this19;
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this20,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this21 = this1[0];
		var a4 = this21;
		var this22 = this1[1];
		var b4 = this22;
		var high4 = a4.high + b4.high | 0;
		var low4 = a4.low + b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high4,low4);
		var this24 = this23;
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this24,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this25 = this1[0];
		var a5 = this25;
		var this26 = this1[1];
		var b5 = this26;
		var high5 = a5.high + b5.high | 0;
		var low5 = a5.low + b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
			var ret8 = high5++;
			high5 = high5 | 0;
		}
		var this27 = new haxe__$Int64__$_$_$Int64(high5,low5);
		var this28 = this27;
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this28,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 1;
		var this29 = this1[1];
		var offset = this29;
		var this30 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0),offset];
		var this31 = this30;
		var this32 = this31[0];
		var a6 = this32;
		var b6 = offset;
		var high6 = a6.high - b6.high | 0;
		var low6 = a6.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
			var ret9 = high6--;
			high6 = high6 | 0;
		}
		var this33 = new haxe__$Int64__$_$_$Int64(high6,low6);
		var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this33);
		var this34 = this31[1];
		var this35 = [dateTime,this34];
		return this35;
	case 4:
		var this36 = this1[0];
		var a7 = this36;
		var this37 = this1[1];
		var b7 = this37;
		var high7 = a7.high + b7.high | 0;
		var low7 = a7.low + b7.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,a7.low) < 0) {
			var ret10 = high7++;
			high7 = high7 | 0;
		}
		var this38 = new haxe__$Int64__$_$_$Int64(high7,low7);
		var this39 = this38;
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this39);
		var this40 = this1[0];
		var a8 = this40;
		var this41 = this1[1];
		var b8 = this41;
		var high8 = a8.high + b8.high | 0;
		var low8 = a8.low + b8.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,a8.low) < 0) {
			var ret11 = high8++;
			high8 = high8 | 0;
		}
		var this42 = new haxe__$Int64__$_$_$Int64(high8,low8);
		var this43 = this42;
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this43,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this44 = this1[0];
		var a9 = this44;
		var this45 = this1[1];
		var b9 = this45;
		var high9 = a9.high + b9.high | 0;
		var low9 = a9.low + b9.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,a9.low) < 0) {
			var ret12 = high9++;
			high9 = high9 | 0;
		}
		var this46 = new haxe__$Int64__$_$_$Int64(high9,low9);
		var this47 = this46;
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this47,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this48 = this1[0];
		var a10 = this48;
		var this49 = this1[1];
		var b10 = this49;
		var high10 = a10.high + b10.high | 0;
		var low10 = a10.low + b10.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,a10.low) < 0) {
			var ret13 = high10++;
			high10 = high10 | 0;
		}
		var this50 = new haxe__$Int64__$_$_$Int64(high10,low10);
		var this51 = this50;
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this51,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 7 - wd;
		var this52 = this1[1];
		var offset1 = this52;
		var this53 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0),offset1];
		var this54 = this53;
		var this55 = this54[0];
		var a11 = this55;
		var b11 = offset1;
		var high11 = a11.high - b11.high | 0;
		var low11 = a11.low - b11.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a11.low,b11.low) < 0) {
			var ret14 = high11--;
			high11 = high11 | 0;
		}
		var this56 = new haxe__$Int64__$_$_$Int64(high11,low11);
		var dateTime1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this56);
		var this57 = this54[1];
		var this58 = [dateTime1,this57];
		return this58;
	case 5:
		var this59 = this1[0];
		var a12 = this59;
		var this60 = this1[1];
		var b12 = this60;
		var high12 = a12.high + b12.high | 0;
		var low12 = a12.low + b12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,a12.low) < 0) {
			var ret15 = high12++;
			high12 = high12 | 0;
		}
		var this61 = new haxe__$Int64__$_$_$Int64(high12,low12);
		var this62 = this61;
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this62,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this63 = this1[0];
		var a13 = this63;
		var this64 = this1[1];
		var b13 = this64;
		var high13 = a13.high + b13.high | 0;
		var low13 = a13.low + b13.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low13,a13.low) < 0) {
			var ret16 = high13++;
			high13 = high13 | 0;
		}
		var this65 = new haxe__$Int64__$_$_$Int64(high13,low13);
		var this66 = this65;
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this66,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + 1;
		var this67 = this1[1];
		var offset2 = this67;
		var this68 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0),offset2];
		var this69 = this68;
		var this70 = this69[0];
		var a14 = this70;
		var b14 = offset2;
		var high14 = a14.high - b14.high | 0;
		var low14 = a14.low - b14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a14.low,b14.low) < 0) {
			var ret17 = high14--;
			high14 = high14 | 0;
		}
		var this71 = new haxe__$Int64__$_$_$Int64(high14,low14);
		var dateTime2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this71);
		var this72 = this69[1];
		var this73 = [dateTime2,this72];
		return this73;
	case 6:
		var this74 = this1[0];
		var a15 = this74;
		var this75 = this1[1];
		var b15 = this75;
		var high15 = a15.high + b15.high | 0;
		var low15 = a15.low + b15.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,a15.low) < 0) {
			var ret18 = high15++;
			high15 = high15 | 0;
		}
		var this76 = new haxe__$Int64__$_$_$Int64(high15,low15);
		var this77 = this76;
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this77,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + 1;
		var this78 = this1[1];
		var offset3 = this78;
		var this79 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,1,1,0,0,0,0),offset3];
		var this80 = this79;
		var this81 = this80[0];
		var a16 = this81;
		var b16 = offset3;
		var high16 = a16.high - b16.high | 0;
		var low16 = a16.low - b16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a16.low,b16.low) < 0) {
			var ret19 = high16--;
			high16 = high16 | 0;
		}
		var this82 = new haxe__$Int64__$_$_$Int64(high16,low16);
		var dateTime3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this82);
		var this83 = this80[1];
		var this84 = [dateTime3,this83];
		return this84;
	}
};
thx__$DateTime_DateTime_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divFloor(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		var this5 = this1[1];
		var this6 = [this4,this5];
		return this6;
	case 1:
		var this7 = this1[0];
		var a1 = thx_Int64s.divFloor(this7,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		var this10 = this1[1];
		var this11 = [this9,this10];
		return this11;
	case 2:
		var this12 = this1[0];
		var a2 = thx_Int64s.divFloor(this12,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this13 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this14 = this13;
		var this15 = this1[1];
		var this16 = [this14,this15];
		return this16;
	case 3:
		var this17 = this1[0];
		var a3 = this17;
		var this18 = this1[1];
		var b3 = this18;
		var high3 = a3.high + b3.high | 0;
		var low3 = a3.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
			var ret6 = high3++;
			high3 = high3 | 0;
		}
		var this19 = new haxe__$Int64__$_$_$Int64(high3,low3);
		var this20 = this19;
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this20,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this21 = this1[0];
		var a4 = this21;
		var this22 = this1[1];
		var b4 = this22;
		var high4 = a4.high + b4.high | 0;
		var low4 = a4.low + b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high4,low4);
		var this24 = this23;
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this24,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this25 = this1[0];
		var a5 = this25;
		var this26 = this1[1];
		var b5 = this26;
		var high5 = a5.high + b5.high | 0;
		var low5 = a5.low + b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
			var ret8 = high5++;
			high5 = high5 | 0;
		}
		var this27 = new haxe__$Int64__$_$_$Int64(high5,low5);
		var this28 = this27;
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this28,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this29 = this1[1];
		var offset = this29;
		var this30 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0),offset];
		var this31 = this30;
		var this32 = this31[0];
		var a6 = this32;
		var b6 = offset;
		var high6 = a6.high - b6.high | 0;
		var low6 = a6.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
			var ret9 = high6--;
			high6 = high6 | 0;
		}
		var this33 = new haxe__$Int64__$_$_$Int64(high6,low6);
		var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this33);
		var this34 = this31[1];
		var this35 = [dateTime,this34];
		return this35;
	case 4:
		var this36 = this1[0];
		var a7 = this36;
		var this37 = this1[1];
		var b7 = this37;
		var high7 = a7.high + b7.high | 0;
		var low7 = a7.low + b7.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,a7.low) < 0) {
			var ret10 = high7++;
			high7 = high7 | 0;
		}
		var this38 = new haxe__$Int64__$_$_$Int64(high7,low7);
		var this39 = this38;
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this39);
		var this40 = this1[0];
		var a8 = this40;
		var this41 = this1[1];
		var b8 = this41;
		var high8 = a8.high + b8.high | 0;
		var low8 = a8.low + b8.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,a8.low) < 0) {
			var ret11 = high8++;
			high8 = high8 | 0;
		}
		var this42 = new haxe__$Int64__$_$_$Int64(high8,low8);
		var this43 = this42;
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this43,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this44 = this1[0];
		var a9 = this44;
		var this45 = this1[1];
		var b9 = this45;
		var high9 = a9.high + b9.high | 0;
		var low9 = a9.low + b9.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,a9.low) < 0) {
			var ret12 = high9++;
			high9 = high9 | 0;
		}
		var this46 = new haxe__$Int64__$_$_$Int64(high9,low9);
		var this47 = this46;
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this47,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this48 = this1[0];
		var a10 = this48;
		var this49 = this1[1];
		var b10 = this49;
		var high10 = a10.high + b10.high | 0;
		var low10 = a10.low + b10.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,a10.low) < 0) {
			var ret13 = high10++;
			high10 = high10 | 0;
		}
		var this50 = new haxe__$Int64__$_$_$Int64(high10,low10);
		var this51 = this50;
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this51,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) - wd;
		var this52 = this1[1];
		var offset1 = this52;
		var this53 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0),offset1];
		var this54 = this53;
		var this55 = this54[0];
		var a11 = this55;
		var b11 = offset1;
		var high11 = a11.high - b11.high | 0;
		var low11 = a11.low - b11.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a11.low,b11.low) < 0) {
			var ret14 = high11--;
			high11 = high11 | 0;
		}
		var this56 = new haxe__$Int64__$_$_$Int64(high11,low11);
		var dateTime1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this56);
		var this57 = this54[1];
		var this58 = [dateTime1,this57];
		return this58;
	case 5:
		var this59 = this1[0];
		var a12 = this59;
		var this60 = this1[1];
		var b12 = this60;
		var high12 = a12.high + b12.high | 0;
		var low12 = a12.low + b12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,a12.low) < 0) {
			var ret15 = high12++;
			high12 = high12 | 0;
		}
		var this61 = new haxe__$Int64__$_$_$Int64(high12,low12);
		var this62 = this61;
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this62,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this63 = this1[0];
		var a13 = this63;
		var this64 = this1[1];
		var b13 = this64;
		var high13 = a13.high + b13.high | 0;
		var low13 = a13.low + b13.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low13,a13.low) < 0) {
			var ret16 = high13++;
			high13 = high13 | 0;
		}
		var this65 = new haxe__$Int64__$_$_$Int64(high13,low13);
		var this66 = this65;
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this66,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this67 = this1[1];
		var offset2 = this67;
		var this68 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0),offset2];
		var this69 = this68;
		var this70 = this69[0];
		var a14 = this70;
		var b14 = offset2;
		var high14 = a14.high - b14.high | 0;
		var low14 = a14.low - b14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a14.low,b14.low) < 0) {
			var ret17 = high14--;
			high14 = high14 | 0;
		}
		var this71 = new haxe__$Int64__$_$_$Int64(high14,low14);
		var dateTime2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this71);
		var this72 = this69[1];
		var this73 = [dateTime2,this72];
		return this73;
	case 6:
		var this74 = this1[0];
		var a15 = this74;
		var this75 = this1[1];
		var b15 = this75;
		var high15 = a15.high + b15.high | 0;
		var low15 = a15.low + b15.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,a15.low) < 0) {
			var ret18 = high15++;
			high15 = high15 | 0;
		}
		var this76 = new haxe__$Int64__$_$_$Int64(high15,low15);
		var this77 = this76;
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this77,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this78 = this1[1];
		var offset3 = this78;
		var this79 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,1,1,0,0,0,0),offset3];
		var this80 = this79;
		var this81 = this80[0];
		var a16 = this81;
		var b16 = offset3;
		var high16 = a16.high - b16.high | 0;
		var low16 = a16.low - b16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a16.low,b16.low) < 0) {
			var ret19 = high16--;
			high16 = high16 | 0;
		}
		var this82 = new haxe__$Int64__$_$_$Int64(high16,low16);
		var dateTime3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this82);
		var this83 = this80[1];
		var this84 = [dateTime3,this83];
		return this84;
	}
};
thx__$DateTime_DateTime_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		var this2 = this1[0];
		var a = thx_Int64s.divRound(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		var this5 = this1[1];
		var this6 = [this4,this5];
		return this6;
	case 1:
		var this7 = this1[0];
		var a1 = thx_Int64s.divRound(this7,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		var this10 = this1[1];
		var this11 = [this9,this10];
		return this11;
	case 2:
		var this12 = this1[0];
		var a2 = thx_Int64s.divRound(this12,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this13 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this14 = this13;
		var this15 = this1[1];
		var this16 = [this14,this15];
		return this16;
	case 3:
		var mod;
		var this17 = this1[0];
		var a3 = this17;
		var this18 = this1[1];
		var b3 = this18;
		var high3 = a3.high + b3.high | 0;
		var low3 = a3.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
			var ret6 = high3++;
			high3 = high3 | 0;
		}
		var this19 = new haxe__$Int64__$_$_$Int64(high3,low3);
		var this20 = this19;
		if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this20) >= 12) {
			mod = 1;
		} else {
			mod = 0;
		}
		var this21 = this1[0];
		var a4 = this21;
		var this22 = this1[1];
		var b4 = this22;
		var high4 = a4.high + b4.high | 0;
		var low4 = a4.low + b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high4,low4);
		var this24 = this23;
		var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this24,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this25 = this1[0];
		var a5 = this25;
		var this26 = this1[1];
		var b5 = this26;
		var high5 = a5.high + b5.high | 0;
		var low5 = a5.low + b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
			var ret8 = high5++;
			high5 = high5 | 0;
		}
		var this27 = new haxe__$Int64__$_$_$Int64(high5,low5);
		var this28 = this27;
		var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this28,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this29 = this1[0];
		var a6 = this29;
		var this30 = this1[1];
		var b6 = this30;
		var high6 = a6.high + b6.high | 0;
		var low6 = a6.low + b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,a6.low) < 0) {
			var ret9 = high6++;
			high6 = high6 | 0;
		}
		var this31 = new haxe__$Int64__$_$_$Int64(high6,low6);
		var this32 = this31;
		var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this32,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod;
		var this33 = this1[1];
		var offset = this33;
		var this34 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,0,0,0,0),offset];
		var this35 = this34;
		var this36 = this35[0];
		var a7 = this36;
		var b7 = offset;
		var high7 = a7.high - b7.high | 0;
		var low7 = a7.low - b7.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a7.low,b7.low) < 0) {
			var ret10 = high7--;
			high7 = high7 | 0;
		}
		var this37 = new haxe__$Int64__$_$_$Int64(high7,low7);
		var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this37);
		var this38 = this35[1];
		var this39 = [dateTime,this38];
		return this39;
	case 4:
		var this40 = this1[0];
		var a8 = this40;
		var this41 = this1[1];
		var b8 = this41;
		var high8 = a8.high + b8.high | 0;
		var low8 = a8.low + b8.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,a8.low) < 0) {
			var ret11 = high8++;
			high8 = high8 | 0;
		}
		var this42 = new haxe__$Int64__$_$_$Int64(high8,low8);
		var this43 = this42;
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this43);
		var mod1;
		if(wd < 3) {
			mod1 = -wd;
		} else if(wd > 3) {
			mod1 = 7 - wd;
		} else {
			var this44 = this1[0];
			var a9 = this44;
			var this45 = this1[1];
			var b9 = this45;
			var high9 = a9.high + b9.high | 0;
			var low9 = a9.low + b9.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,a9.low) < 0) {
				var ret12 = high9++;
				high9 = high9 | 0;
			}
			var this46 = new haxe__$Int64__$_$_$Int64(high9,low9);
			var this47 = this46;
			if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this47) < 12) {
				mod1 = -wd;
			} else {
				mod1 = 7 - wd;
			}
		}
		var this48 = this1[0];
		var a10 = this48;
		var this49 = this1[1];
		var b10 = this49;
		var high10 = a10.high + b10.high | 0;
		var low10 = a10.low + b10.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,a10.low) < 0) {
			var ret13 = high10++;
			high10 = high10 | 0;
		}
		var this50 = new haxe__$Int64__$_$_$Int64(high10,low10);
		var this51 = this50;
		var year1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this51,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this52 = this1[0];
		var a11 = this52;
		var this53 = this1[1];
		var b11 = this53;
		var high11 = a11.high + b11.high | 0;
		var low11 = a11.low + b11.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low11,a11.low) < 0) {
			var ret14 = high11++;
			high11 = high11 | 0;
		}
		var this54 = new haxe__$Int64__$_$_$Int64(high11,low11);
		var this55 = this54;
		var month1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this55,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this56 = this1[0];
		var a12 = this56;
		var this57 = this1[1];
		var b12 = this57;
		var high12 = a12.high + b12.high | 0;
		var low12 = a12.low + b12.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,a12.low) < 0) {
			var ret15 = high12++;
			high12 = high12 | 0;
		}
		var this58 = new haxe__$Int64__$_$_$Int64(high12,low12);
		var this59 = this58;
		var day1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this59,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod1;
		var this60 = this1[1];
		var offset1 = this60;
		var this61 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year1,month1,day1,0,0,0,0),offset1];
		var this62 = this61;
		var this63 = this62[0];
		var a13 = this63;
		var b13 = offset1;
		var high13 = a13.high - b13.high | 0;
		var low13 = a13.low - b13.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a13.low,b13.low) < 0) {
			var ret16 = high13--;
			high13 = high13 | 0;
		}
		var this64 = new haxe__$Int64__$_$_$Int64(high13,low13);
		var dateTime1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this64);
		var this65 = this62[1];
		var this66 = [dateTime1,this65];
		return this66;
	case 5:
		var mod2;
		var this67 = this1[0];
		var a14 = this67;
		var this68 = this1[1];
		var b14 = this68;
		var high14 = a14.high + b14.high | 0;
		var low14 = a14.low + b14.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low14,a14.low) < 0) {
			var ret17 = high14++;
			high14 = high14 | 0;
		}
		var this69 = new haxe__$Int64__$_$_$Int64(high14,low14);
		var this70 = this69;
		var mod3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this70,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this71 = this1[0];
		var a15 = this71;
		var this72 = this1[1];
		var b15 = this72;
		var high15 = a15.high + b15.high | 0;
		var low15 = a15.low + b15.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,a15.low) < 0) {
			var ret18 = high15++;
			high15 = high15 | 0;
		}
		var this73 = new haxe__$Int64__$_$_$Int64(high15,low15);
		var this74 = this73;
		var mod4 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this74,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this75 = this1[0];
		var a16 = this75;
		var this76 = this1[1];
		var b16 = this76;
		var high16 = a16.high + b16.high | 0;
		var low16 = a16.low + b16.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low16,a16.low) < 0) {
			var ret19 = high16++;
			high16 = high16 | 0;
		}
		var this77 = new haxe__$Int64__$_$_$Int64(high16,low16);
		var this78 = this77;
		if(mod3 > Math.round(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(mod4,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this78,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH)) / 2)) {
			mod2 = 1;
		} else {
			mod2 = 0;
		}
		var this79 = this1[0];
		var a17 = this79;
		var this80 = this1[1];
		var b17 = this80;
		var high17 = a17.high + b17.high | 0;
		var low17 = a17.low + b17.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low17,a17.low) < 0) {
			var ret20 = high17++;
			high17 = high17 | 0;
		}
		var this81 = new haxe__$Int64__$_$_$Int64(high17,low17);
		var this82 = this81;
		var year2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this82,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this83 = this1[0];
		var a18 = this83;
		var this84 = this1[1];
		var b18 = this84;
		var high18 = a18.high + b18.high | 0;
		var low18 = a18.low + b18.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low18,a18.low) < 0) {
			var ret21 = high18++;
			high18 = high18 | 0;
		}
		var this85 = new haxe__$Int64__$_$_$Int64(high18,low18);
		var this86 = this85;
		var month2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this86,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + mod2;
		var this87 = this1[1];
		var offset2 = this87;
		var this88 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year2,month2,1,0,0,0,0),offset2];
		var this89 = this88;
		var this90 = this89[0];
		var a19 = this90;
		var b19 = offset2;
		var high19 = a19.high - b19.high | 0;
		var low19 = a19.low - b19.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a19.low,b19.low) < 0) {
			var ret22 = high19--;
			high19 = high19 | 0;
		}
		var this91 = new haxe__$Int64__$_$_$Int64(high19,low19);
		var dateTime2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this91);
		var this92 = this89[1];
		var this93 = [dateTime2,this92];
		return this93;
	case 6:
		var this94 = this1[0];
		var a20 = this94;
		var this95 = this1[1];
		var b20 = this95;
		var high20 = a20.high + b20.high | 0;
		var low20 = a20.low + b20.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low20,a20.low) < 0) {
			var ret23 = high20++;
			high20 = high20 | 0;
		}
		var this96 = new haxe__$Int64__$_$_$Int64(high20,low20);
		var this97 = this96;
		var year3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this97,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
		var this98 = this1[1];
		var offset3 = this98;
		var this99 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year3,6,2,0,0,0,0),offset3];
		var this100 = this99;
		var this101 = this100[0];
		var a21 = this101;
		var b21 = offset3;
		var high21 = a21.high - b21.high | 0;
		var low21 = a21.low - b21.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a21.low,b21.low) < 0) {
			var ret24 = high21--;
			high21 = high21 | 0;
		}
		var this102 = new haxe__$Int64__$_$_$Int64(high21,low21);
		var dateTime3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this102);
		var this103 = this100[1];
		var this104 = [dateTime3,this103];
		var other = this104;
		var mod5 = thx__$DateTime_DateTime_$Impl_$.compareTo(this1,other) > 0 ? 1 : 0;
		var this105 = this1[0];
		var a22 = this105;
		var this106 = this1[1];
		var b22 = this106;
		var high22 = a22.high + b22.high | 0;
		var low22 = a22.low + b22.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low22,a22.low) < 0) {
			var ret25 = high22++;
			high22 = high22 | 0;
		}
		var this107 = new haxe__$Int64__$_$_$Int64(high22,low22);
		var this108 = this107;
		var year4 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this108,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + mod5;
		var this109 = this1[1];
		var offset4 = this109;
		var this110 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year4,1,1,0,0,0,0),offset4];
		var this111 = this110;
		var this112 = this111[0];
		var a23 = this112;
		var b23 = offset4;
		var high23 = a23.high - b23.high | 0;
		var low23 = a23.low - b23.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a23.low,b23.low) < 0) {
			var ret26 = high23--;
			high23 = high23 | 0;
		}
		var this113 = new haxe__$Int64__$_$_$Int64(high23,low23);
		var dateTime4 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this113);
		var this114 = this111[1];
		var this115 = [dateTime4,this114];
		return this115;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameYear = function(this1,other) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = other[0];
	var a1 = this6;
	var this7 = other[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameYear(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this3 = this1[1];
		var b = this3;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		var this5 = this4;
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
		var this6 = other[0];
		var a1 = this6;
		var this7 = other[1];
		var b1 = this7;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameDay = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameMonth(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this3 = this1[1];
		var b = this3;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		var this5 = this4;
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
		var this6 = other[0];
		var a1 = this6;
		var this7 = other[1];
		var b1 = this7;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameHour = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameDay(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this3 = this1[1];
		var b = this3;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		var this5 = this4;
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this5);
		var this6 = other[0];
		var a1 = this6;
		var this7 = other[1];
		var b1 = this7;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this9);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameMinute = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameHour(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this3 = this1[1];
		var b = this3;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		var this5 = this4;
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this5);
		var this6 = other[0];
		var a1 = this6;
		var this7 = other[1];
		var b1 = this7;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this9);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.sameSecond = function(this1,other) {
	if(thx__$DateTime_DateTime_$Impl_$.sameMinute(this1,other)) {
		var this2 = this1[0];
		var a = this2;
		var this3 = this1[1];
		var b = this3;
		var high = a.high + b.high | 0;
		var low = a.low + b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		var this5 = this4;
		var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this5);
		var this6 = other[0];
		var a1 = this6;
		var this7 = other[1];
		var b1 = this7;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this9 = this8;
		return tmp == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this9);
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.withYear = function(this1,year) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this13);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withMonth = function(this1,month) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this13);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withDay = function(this1,day) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this13);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withHour = function(this1,hour) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this13,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withMinute = function(this1,minute) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this13,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withSecond = function(this1,second) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this13,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var millisecond = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withMillisecond = function(this1,millisecond) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var year = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	var month = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var this10 = this1[0];
	var a2 = this10;
	var this11 = this1[1];
	var b2 = this11;
	var high2 = a2.high + b2.high | 0;
	var low2 = a2.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a2.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this12 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this13 = this12;
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this13,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var this14 = this1[0];
	var a3 = this14;
	var this15 = this1[1];
	var b3 = this15;
	var high3 = a3.high + b3.high | 0;
	var low3 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a3.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this16 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this17 = this16;
	var hour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this17);
	var this18 = this1[0];
	var a4 = this18;
	var this19 = this1[1];
	var b4 = this19;
	var high4 = a4.high + b4.high | 0;
	var low4 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a4.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this20 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this21 = this20;
	var minute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this21);
	var this22 = this1[0];
	var a5 = this22;
	var this23 = this1[1];
	var b5 = this23;
	var high5 = a5.high + b5.high | 0;
	var low5 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a5.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this24 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this25 = this24;
	var second = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this25);
	var this26 = this1[1];
	var offset = this26;
	var this27 = [thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,month,day,hour,minute,second,millisecond),offset];
	var this28 = this27;
	var this29 = this28[0];
	var a6 = this29;
	var b6 = offset;
	var high6 = a6.high - b6.high | 0;
	var low6 = a6.low - b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a6.low,b6.low) < 0) {
		var ret6 = high6--;
		high6 = high6 | 0;
	}
	var this30 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this30);
	var this31 = this28[1];
	var this32 = [dateTime,this31];
	return this32;
};
thx__$DateTime_DateTime_$Impl_$.withOffset = function(this1,offset) {
	var this2 = this1[0];
	var this3 = [this2,offset];
	return this3;
};
thx__$DateTime_DateTime_$Impl_$.add = function(this1,time) {
	var this2 = this1[0];
	var a = this2;
	var b = time;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this3);
	var this4 = this1[1];
	var this5 = [dateTime,this4];
	return this5;
};
thx__$DateTime_DateTime_$Impl_$.addTicks = function(this1,ticks) {
	var this2 = this1[0];
	var a = this2;
	var high = a.high + ticks.high | 0;
	var low = a.low + ticks.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this3);
	var this4 = this1[1];
	var this5 = [dateTime,this4];
	return this5;
};
thx__$DateTime_DateTime_$Impl_$.subtract = function(this1,time) {
	var this2 = this1[0];
	var a = this2;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this3);
	var this4 = this1[1];
	var this5 = [dateTime,this4];
	return this5;
};
thx__$DateTime_DateTime_$Impl_$.subtractDate = function(this1,date) {
	var this2 = this1[0];
	var a = this2;
	var this3 = date[0];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var base = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(this4);
	var this5 = this1[1];
	var this6 = [base,this5];
	var date1 = this6;
	var this7 = date1[0];
	var this8 = this7;
	return this8;
};
thx__$DateTime_DateTime_$Impl_$.addDays = function(this1,days) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,days,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addHours = function(this1,hours) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,hours,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMilliseconds = function(this1,milliseconds) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,milliseconds,1);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMinutes = function(this1,minutes) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,minutes,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addMonths = function(this1,months) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this2,months);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addSeconds = function(this1,seconds) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this2,seconds,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.addYears = function(this1,years) {
	var this2 = this1[0];
	var dateTime = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this2,years * 12);
	var this3 = this1[1];
	var this4 = [dateTime,this3];
	return this4;
};
thx__$DateTime_DateTime_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	var this2 = this1[0];
	var this3 = other[0];
	return thx_Int64s.compare(this2,this3);
};
thx__$DateTime_DateTime_$Impl_$.equalsTo = function(this1,that) {
	var this2 = this1[0];
	var a = this2;
	var this3 = that[0];
	var b = this3;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.equals = function(self,that) {
	var this1 = self[0];
	var a = this1;
	var this2 = that[0];
	var b = this2;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTime_DateTime_$Impl_$.notEqualsTo = function(this1,that) {
	var this2 = this1[0];
	var a = this2;
	var this3 = that[0];
	var b = this3;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTime_DateTime_$Impl_$.notEquals = function(self,that) {
	var this1 = self[0];
	var a = this1;
	var this2 = that[0];
	var b = this2;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTime_DateTime_$Impl_$.nearEqualsTo = function(this1,other,span) {
	var this2 = other[0];
	var a = this2;
	var this3 = this1[0];
	var b = this3;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var ticks = thx_Int64s.abs(this4);
	var b1 = thx__$Time_Time_$Impl_$.abs(span);
	var v = ticks.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(ticks.low,b1.low);
	}
	return (ticks.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterThan = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) > 0;
};
thx__$DateTime_DateTime_$Impl_$.greater = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) > 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterEqualsTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) >= 0;
};
thx__$DateTime_DateTime_$Impl_$.greaterEquals = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) >= 0;
};
thx__$DateTime_DateTime_$Impl_$.lessTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) < 0;
};
thx__$DateTime_DateTime_$Impl_$.less = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) < 0;
};
thx__$DateTime_DateTime_$Impl_$.lessEqualsTo = function(this1,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(this1,that) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.lessEquals = function(self,that) {
	return thx__$DateTime_DateTime_$Impl_$.compareTo(self,that) <= 0;
};
thx__$DateTime_DateTime_$Impl_$.changeOffset = function(this1,newoffset) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var a1 = this5;
	var b1 = newoffset;
	var high1 = a1.high - b1.high | 0;
	var low1 = a1.low - b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b1.low) < 0) {
		var ret1 = high1--;
		high1 = high1 | 0;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this7 = this6;
	var this8 = [this7,newoffset];
	return this8;
};
thx__$DateTime_DateTime_$Impl_$.toUtc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.clockDateTime = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return this5;
};
thx__$DateTime_DateTime_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var this2 = this1[0];
	var this3 = thx_Int64s.abs(this2);
	var this4 = this1[1];
	var this5 = [this3,this4];
	var abs = this5;
	var decimals;
	var this6 = abs[0];
	var a = this6;
	var this7 = abs[1];
	var b = this7;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high,low);
	var this9 = this8;
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(this9) != 0) {
		var this10 = abs[0];
		var a1 = this10;
		var this11 = abs[1];
		var b1 = this11;
		var high1 = a1.high + b1.high | 0;
		var low1 = a1.low + b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this12 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this13 = this12;
		decimals = "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(this13),"0",7),")");
	} else {
		decimals = "";
	}
	var this14 = this1[0];
	var a2 = this14;
	var b2 = thx_Int64s.zero;
	var v = a2.high - b2.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a2.low,b2.low);
	}
	var isneg = (a2.high < 0 ? b2.high < 0 ? v : -1 : b2.high >= 0 ? v : 1) < 0;
	var this15 = abs[0];
	var a3 = this15;
	var this16 = abs[1];
	var b3 = this16;
	var high2 = a3.high + b3.high | 0;
	var low2 = a3.low + b3.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a3.low) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	var this17 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var this18 = this17;
	var tmp = "" + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this18,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + "-";
	var this19 = abs[0];
	var a4 = this19;
	var this20 = abs[1];
	var b4 = this20;
	var high3 = a4.high + b4.high | 0;
	var low3 = a4.low + b4.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a4.low) < 0) {
		var ret3 = high3++;
		high3 = high3 | 0;
	}
	var this21 = new haxe__$Int64__$_$_$Int64(high3,low3);
	var this22 = this21;
	var tmp1 = tmp + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this22,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),"0",2) + "-";
	var this23 = abs[0];
	var a5 = this23;
	var this24 = abs[1];
	var b5 = this24;
	var high4 = a5.high + b5.high | 0;
	var low4 = a5.low + b5.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,a5.low) < 0) {
		var ret4 = high4++;
		high4 = high4 | 0;
	}
	var this25 = new haxe__$Int64__$_$_$Int64(high4,low4);
	var this26 = this25;
	var tmp2 = tmp1 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this26,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),"0",2) + "T";
	var this27 = abs[0];
	var a6 = this27;
	var this28 = abs[1];
	var b6 = this28;
	var high5 = a6.high + b6.high | 0;
	var low5 = a6.low + b6.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,a6.low) < 0) {
		var ret5 = high5++;
		high5 = high5 | 0;
	}
	var this29 = new haxe__$Int64__$_$_$Int64(high5,low5);
	var this30 = this29;
	var tmp3 = tmp2 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this30),"0",2) + ":";
	var this31 = abs[0];
	var a7 = this31;
	var this32 = abs[1];
	var b7 = this32;
	var high6 = a7.high + b7.high | 0;
	var low6 = a7.low + b7.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,a7.low) < 0) {
		var ret6 = high6++;
		high6 = high6 | 0;
	}
	var this33 = new haxe__$Int64__$_$_$Int64(high6,low6);
	var this34 = this33;
	var tmp4 = tmp3 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this34),"0",2) + ":";
	var this35 = abs[0];
	var a8 = this35;
	var this36 = abs[1];
	var b8 = this36;
	var high7 = a8.high + b8.high | 0;
	var low7 = a8.low + b8.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,a8.low) < 0) {
		var ret7 = high7++;
		high7 = high7 | 0;
	}
	var this37 = new haxe__$Int64__$_$_$Int64(high7,low7);
	var this38 = this37;
	var tmp5 = tmp4 + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this38),"0",2) + decimals;
	var this39 = this1[1];
	return (isneg ? "-" : "") + (tmp5 + thx__$Time_Time_$Impl_$.toGmtString(this39));
};
thx__$DateTime_DateTime_$Impl_$.get_utc = function(this1) {
	var this2 = this1[0];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.get_offset = function(this1) {
	var this2 = this1[1];
	return this2;
};
thx__$DateTime_DateTime_$Impl_$.get_year = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.get_month = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
};
thx__$DateTime_DateTime_$Impl_$.get_day = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
};
thx__$DateTime_DateTime_$Impl_$.get_hour = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_minute = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_dayOfWeek = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_dayOfYear = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR);
};
thx__$DateTime_DateTime_$Impl_$.get_millisecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_microsecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_microsecond(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_tickInSecond = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_second = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this5);
};
thx__$DateTime_DateTime_$Impl_$.get_timeOfDay = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var this6 = haxe__$Int64_Int64_$Impl_$.divMod(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
	return this6;
};
thx__$DateTime_DateTime_$Impl_$.get_isInLeapYear = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR));
};
thx__$DateTime_DateTime_$Impl_$.get_monthDays = function(this1) {
	var this2 = this1[0];
	var a = this2;
	var this3 = this1[1];
	var b = this3;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	var this5 = this4;
	var tmp = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this5,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var this6 = this1[0];
	var a1 = this6;
	var this7 = this1[1];
	var b1 = this7;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this8 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this9 = this8;
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(tmp,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this9,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTime_DateTime_$Impl_$.self = function(this1) {
	return this1;
};
var thx__$DateTimeUtc_DateTimeUtc_$Impl_$ = {};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.__name__ = ["thx","_DateTimeUtc","DateTimeUtc_Impl_"];
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.now = function() {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromDate(new Date());
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64 = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromDate = function(date) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime(date.getTime());
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromTime = function(timestamp) {
	var a = thx_Int64s.fromFloat(timestamp);
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var a1 = this1;
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret2 = high1++;
		high1 = high1 | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromString = function(s) {
	var this1 = thx__$DateTime_DateTime_$Impl_$.fromString(s)[0];
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.parse = function(s) {
	try {
		return thx_Either.Right(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromString(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return thx_Either.Left(thx_Error.fromDynamic(e,{ fileName : "DateTimeUtc.hx", lineNumber : 101, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "parse"}).message);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compare = function(a,b) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(a,b);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create = function(year,month,day,hour,minute,second,millisecond) {
	if(millisecond == null) {
		millisecond = 0;
	}
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	second += Math.floor(millisecond / 1000);
	millisecond %= 1000;
	if(millisecond < 0) {
		millisecond += 1000;
	}
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks(year,month,day);
	var b = thx__$Time_Time_$Impl_$.timeToTicks(hour,minute,second);
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var a1 = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(millisecond >> 31,millisecond);
	var a2 = this2;
	var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a2.low & mask;
	var ah = a2.low >>> 16;
	var bl = b1.low & mask;
	var bh = b1.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low1 = p00;
	var high1 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low1 = low1 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p01) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	p10 = p10 << 16;
	low1 = low1 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p10) < 0) {
		var ret2 = high1++;
		high1 = high1 | 0;
	}
	high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b1.low) | 0) | 0;
	var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var b2 = this3;
	var high2 = a1.high + b2.high | 0;
	var low2 = a1.low + b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a1.low) < 0) {
		var ret3 = high2++;
		high2 = high2 | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high2,low2);
	var ticks = this4;
	var this5 = ticks;
	return this5;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear = function(year) {
	if(year % 4 == 0) {
		if(year % 100 == 0) {
			return year % 400 == 0;
		} else {
			return true;
		}
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks = function(year,month,day) {
	var fixMonthYear = function() {
		if(month == 0) {
			year -= 1;
			month = 12;
		} else if(month < 0) {
			month = -month;
			var years = Math.ceil(month / 12);
			year -= years;
			month = years * 12 - month;
		} else if(month > 12) {
			var years1 = Math.floor(month / 12);
			year += years1;
			month -= years1 * 12;
		}
	};
	while(day < 0) {
		month -= 1;
		fixMonthYear();
		day += thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	var days;
	while(true) {
		days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
		if(!(day > days)) {
			break;
		}
		month += 1;
		fixMonthYear();
		day -= days;
	}
	if(day == 0) {
		month -= 1;
		fixMonthYear();
		day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.rawDateToTicks(year,month,day);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.rawDateToTicks = function(year,month,day) {
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(year) ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	if(day >= 1 && day <= days[month] - days[month - 1]) {
		var y = year - 1;
		var n = y * 365 + (y / 4 | 0) - (y / 100 | 0) + (y / 400 | 0) + days[month - 1] + day - 1;
		var this1 = new haxe__$Int64__$_$_$Int64(n >> 31,n);
		var a = this1;
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		return this2;
	}
	throw new thx_Error("bad year/month/day " + year + "/" + month + "/" + day,null,{ fileName : "DateTimeUtc.hx", lineNumber : 179, className : "thx._DateTimeUtc.DateTimeUtc_Impl_", methodName : "rawDateToTicks"});
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth = function(year,month) {
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(year) ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	return days[month] - days[month - 1];
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysRange = function(start,end) {
	var a = end;
	var b = start;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		return [];
	}
	var days = [];
	while(!thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay(start,end)) {
		days.push(start);
		start = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart = function(this1,part) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var n = x.low;
	var y400 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years | 0;
	n -= y400 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years;
	var y100 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years | 0;
	if(y100 == 4) {
		y100 = 3;
	}
	n -= y100 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years;
	var y4 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years | 0;
	n -= y4 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years;
	var y1 = n / thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear | 0;
	if(y1 == 4) {
		y1 = 3;
	}
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) {
		return y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
	}
	n -= y1 * thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear;
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR) {
		return n + 1;
	}
	var leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
	var days = leapYear ? thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365;
	var m = n >> 6;
	while(n >= days[m]) ++m;
	if(part == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) {
		return m;
	}
	return n - days[m - 1] + 1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$._new = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.min = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this1,other) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.max = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo(this1,other) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump = function(this1,period,amount) {
	var sec = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1);
	var min = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1);
	var hr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1);
	var day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var mon = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var yr = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(yr,mon,day,hr,min,sec,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInThisMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Year,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Year,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Month,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Month,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevWeek = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Week,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextWeek = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Week,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevDay = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextDay = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevHour = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Hour,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextHour = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Hour,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevMinute = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Minute,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextMinute = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Minute,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.prevSecond = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Second,-1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nextSecond = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Second,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapNextWeekDay = function(this1,weekday) {
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapPrevWeekDay = function(this1,weekday) {
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		var a = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a1 = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this5 = this4;
		return this5;
	case 2:
		var a2 = thx_Int64s.divCeil(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this7 = this6;
		return this7;
	case 3:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 1,0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + 7 - wd,0,0,0);
	case 5:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + 1,1,0,0,0);
	case 6:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + 1,1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		var a = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a1 = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this5 = this4;
		return this5;
	case 2:
		var a2 = thx_Int64s.divFloor(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this7 = this6;
		return this7;
	case 3:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) - wd,0,0,0);
	case 5:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),1,0,0,0);
	case 6:
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		var a = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64);
		var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
		var mask = 65535;
		var al = a.low & mask;
		var ah = a.low >>> 16;
		var bl = b.low & mask;
		var bh = b.low >>> 16;
		var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
		var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
		var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
		var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
		var low = p00;
		var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
		p01 = p01 << 16;
		low = low + p01 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
			var ret = high++;
			high = high | 0;
		}
		p10 = p10 << 16;
		low = low + p10 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
			var ret1 = high++;
			high = high | 0;
		}
		high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return this3;
	case 1:
		var a1 = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64);
		var b1 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
		var mask1 = 65535;
		var al1 = a1.low & mask1;
		var ah1 = a1.low >>> 16;
		var bl1 = b1.low & mask1;
		var bh1 = b1.low >>> 16;
		var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
		var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
		var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
		var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
		var low1 = p001;
		var high1 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
		p011 = p011 << 16;
		low1 = low1 + p011 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p011) < 0) {
			var ret2 = high1++;
			high1 = high1 | 0;
		}
		p101 = p101 << 16;
		low1 = low1 + p101 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p101) < 0) {
			var ret3 = high1++;
			high1 = high1 | 0;
		}
		high1 = high1 + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b1.low) | 0) | 0;
		var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this5 = this4;
		return this5;
	case 2:
		var a2 = thx_Int64s.divRound(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64);
		var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
		var mask2 = 65535;
		var al2 = a2.low & mask2;
		var ah2 = a2.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low2 = p002;
		var high2 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low2 = low2 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p012) < 0) {
			var ret4 = high2++;
			high2 = high2 | 0;
		}
		p102 = p102 << 16;
		low2 = low2 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p102) < 0) {
			var ret5 = high2++;
			high2 = high2 | 0;
		}
		high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(a2.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(a2.high,b2.low) | 0) | 0;
		var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this7 = this6;
		return this7;
	case 3:
		var mod = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) >= 12 ? 1 : 0;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod,0,0,0);
	case 4:
		var wd = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek(this1);
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) < 12 ? -wd : 7 - wd;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) + mod1,0,0,0);
	case 5:
		var mod2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) > Math.round(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH)) / 2) ? 1 : 0;
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) + mod2,1,0,0,0);
	case 6:
		var mod3;
		var a3 = this1;
		var b3 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),6,2,0,0,0);
		var v = a3.high - b3.high | 0;
		if(v != 0) {
			v = v;
		} else {
			v = haxe__$Int32_Int32_$Impl_$.ucompare(a3.low,b3.low);
		}
		if((a3.high < 0 ? b3.high < 0 ? v : -1 : b3.high >= 0 ? v : 1) > 0) {
			mod3 = 1;
		} else {
			mod3 = 0;
		}
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + mod3,1,1,0,0,0);
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameYear = function(this1,other) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameYear(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMonth(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(other,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameHour = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameDay(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMinute = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameHour(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameSecond = function(this1,other) {
	if(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.sameMinute(this1,other)) {
		return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1) == thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(other);
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withYear = function(this1,year) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(year,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMonth = function(this1,month) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),month,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withDay = function(this1,day) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),day,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withHour = function(this1,hour) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),hour,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMinute = function(this1,minute) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),minute,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withSecond = function(this1,second) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),second,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond(this1));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.withMillisecond = function(this1,millisecond) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(this1),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(this1),millisecond);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.add = function(this1,time) {
	var a = this1;
	var b = time;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addTicks = function(this1,tickstoadd) {
	var a = this1;
	var high = a.high + tickstoadd.high | 0;
	var low = a.low + tickstoadd.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.subtract = function(this1,time) {
	var a = this1;
	var b = time;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.subtractDate = function(this1,date) {
	var a = this1;
	var b = date;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled = function(this1,value,scale) {
	var x = value * scale + (value >= 0 ? 0.5 : -0.5) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	var millis = this2;
	var a = this1;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var mask = 65535;
	var al = millis.low & mask;
	var ah = millis.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(millis.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(millis.high,b.low) | 0) | 0;
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var b1 = this3;
	var high1 = a.high + b1.high | 0;
	var low1 = a.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a.low) < 0) {
		var ret2 = high1++;
		high1 = high1 | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this5 = this4;
	return this5;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addDays = function(this1,days) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,days,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addHours = function(this1,hours) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,hours,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMilliseconds = function(this1,milliseconds) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,milliseconds,1);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMinutes = function(this1,minutes) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,minutes,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths = function(this1,months) {
	var y = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
	var m = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
	var d = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
	var i = m - 1 + months;
	if(i >= 0) {
		m = i % 12 + 1 | 0;
		y = y + i / 12 | 0;
	} else {
		m = 12 + (i + 1) % 12 | 0;
		y = y + (i - 11) / 12 | 0;
	}
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(y,m);
	if(d > days) {
		d = days;
	}
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.dateToTicks(y,m,d);
	var b = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addSeconds = function(this1,seconds) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addScaled(this1,seconds,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addYears = function(this1,years) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.addMonths(this1,years * 12);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	return thx_Int64s.compare(this1,other);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.equalsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.notEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.notEquals = function(self,that) {
	var a = self;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.nearEqualsTo = function(this1,other,span) {
	var a = other;
	var b = this1;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var ticks = thx_Int64s.abs(this2);
	var b1 = thx__$Time_Time_$Impl_$.abs(span);
	var v = ticks.high - b1.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(ticks.low,b1.low);
	}
	return (ticks.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterThan = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greater = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.greaterEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessThan = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.less = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessEqualsTo = function(this1,that) {
	var a = this1;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.lessEquals = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toTime = function(this1) {
	var a = this1;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	return thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toDate = function(this1) {
	var a = this1;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var t = thx_Int64s.toFloat(haxe__$Int64_Int64_$Impl_$.divMod(this2,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient);
	return new Date(t);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toDateTime = function(this1,offset) {
	var this2 = [this1,null == offset ? thx__$Time_Time_$Impl_$.zero : offset];
	return this2;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toLocalDateTime = function(this1) {
	var this2 = [this1,thx__$DateTime_DateTime_$Impl_$.localOffset()];
	return this2;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var abs = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.fromInt64(thx_Int64s.abs(this1));
	var decimals = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(abs) != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond(abs),"0",7),")") : "";
	var a = this1;
	var b = thx_Int64s.zero;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	var isneg = (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
	return (isneg ? "-" : "") + ("" + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR) + "-" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH),"0",2) + "-" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(abs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY),"0",2) + "T" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour(abs),"0",2) + ":" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute(abs),"0",2) + ":" + thx_Ints.lpad(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second(abs),"0",2) + decimals + "Z");
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_ticks = function(this1) {
	return this1;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_year = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_month = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_day = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_hour = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_minute = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfWeek = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,1);
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var this4 = new haxe__$Int64__$_$_$Int64(0,7);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this3,this4).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_dayOfYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR);
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_millisecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_microsecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millionI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_tickInSecond = function(this1) {
	var this2 = new haxe__$Int64__$_$_$Int64(0,10000000);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_second = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_timeOfDay = function(this1) {
	var this2 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).modulus;
	return this2;
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_isInLeapYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.get_monthDays = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.getDatePart(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH));
};
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.self = function(this1) {
	return this1;
};
var thx_Dates = function() { };
thx_Dates.__name__ = ["thx","Dates"];
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapPrev = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapTo = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
thx_Dynamics.__name__ = ["thx","Dynamics"];
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		var tmp;
		t = thx_Iterators.isIterator(a);
		if(!t) {
			tmp = thx_Iterables.isIterable(a);
		} else {
			tmp = true;
		}
		if(tmp) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($iterator(a)());
			var ab = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($iterator(b)());
			if(aa.length != ab.length) {
				return false;
			}
			var _g11 = 0;
			var _g2 = aa.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g[2];
		var ca = Type.getClassName(c);
		var cb = Type.getClassName(b == null ? null : js_Boot.getClass(b));
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if((a instanceof Array) && a.__enum__ == null) {
			var aa1 = a;
			var ab1 = b;
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g12 = 0;
			var _g3 = aa1.length;
			while(_g12 < _g3) {
				var i1 = _g12++;
				if(!thx_Dynamics.equals(aa1[i1],ab1[i1])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(a,Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__instanceof(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g4 = 0;
			while(_g4 < ka.length) {
				var key = ka[_g4];
				++_g4;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t1 = false;
		var tmp1;
		t1 = thx_Iterators.isIterator(a);
		if(!t1) {
			tmp1 = thx_Iterables.isIterable(a);
		} else {
			tmp1 = true;
		}
		if(tmp1) {
			var va1 = t1 ? thx_Iterators.toArray(a) : thx_Iterators.toArray($iterator(a)());
			var vb1 = t1 ? thx_Iterators.toArray(b) : thx_Iterators.toArray($iterator(b)());
			if(va1.length != vb1.length) {
				return false;
			}
			var _g13 = 0;
			var _g5 = va1.length;
			while(_g13 < _g5) {
				var i2 = _g13++;
				if(!thx_Dynamics.equals(va1[i2],vb1[i2])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp2;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp2 = Reflect.isFunction(f);
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(a == null ? null : js_Boot.getClass(a));
		var _g6 = 0;
		while(_g6 < fields.length) {
			var field1 = fields[_g6];
			++_g6;
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g[2];
		var ea = Type.getEnumName(e);
		var teb = Type.getEnum(b);
		var eb = Type.getEnumName(teb);
		if(ea != eb) {
			return false;
		}
		if(a[1] != b[1]) {
			return false;
		}
		var pa = a.slice(2);
		var pb = b.slice(2);
		var _g14 = 0;
		var _g7 = pa.length;
		while(_g14 < _g7) {
			var i3 = _g14++;
			if(!thx_Dynamics.equals(pa[i3],pb[i3])) {
				return false;
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
		break;
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return null;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 1:case 2:case 3:case 5:case 7:case 8:
		return v;
	case 6:
		var c = _g[2];
		var name = Type.getClassName(c);
		switch(name) {
		case "Array":
			return v.map(function(v1) {
				return thx_Dynamics.clone(v1,cloneInstances);
			});
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Type.createEmptyInstance(c);
				var _g1 = 0;
				var _g11 = Type.getInstanceFields(c);
				while(_g1 < _g11.length) {
					var field = _g11[_g1];
					++_g1;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		return haxe_Utf8.compare(thx_Types.toString(Type["typeof"](a)),thx_Types.toString(Type["typeof"](b)));
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 1:
		return thx_Ints.compare(a,b);
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		var c = _g[2];
		var name = Type.getClassName(c);
		switch(name) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			return haxe_Utf8.compare(a,b);
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				return haxe_Utf8.compare(Std.string(a),Std.string(b));
			}
		}
		break;
	case 7:
		var e = _g[2];
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		var c = _g[2];
		var _g1 = Type.getClassName(c);
		switch(_g1) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__instanceof(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		var e = _g[2];
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
thx_DynamicsT.__name__ = ["thx","DynamicsT"];
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_DynamicsT.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		return this1;
	});
};
var thx_ERegs = function() { };
thx_ERegs.__name__ = ["thx","ERegs"];
thx_ERegs.escape = function(text) {
	return thx_ERegs.ESCAPE_PATTERN.map(text,function(ereg) {
		return "\\" + ereg.matched(1);
	});
};
var thx_Either = { __ename__ : ["thx","Either"], __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; return $x; };
var thx_Eithers = function() { };
thx_Eithers.__name__ = ["thx","Eithers"];
thx_Eithers.isLeft = function(either) {
	switch(either[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either[1]) {
	case 0:
		return false;
	case 1:
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return haxe_ds_Option.Some(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var v = either[2];
		return haxe_ds_Option.Some(v);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return v;
	case 1:
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return null;
	case 1:
		var v = either[2];
		return v;
	}
};
thx_Eithers.map = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(v);
	case 1:
		var v1 = either[2];
		return thx_Either.Right(f(v1));
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(v);
	case 1:
		var v1 = either[2];
		return f(v1);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		return thx_Either.Left(f(v));
	case 1:
		var v1 = either[2];
		return thx_Either.Right(v1);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either[1]) {
	case 0:
		var v = either[2];
		throw new thx_Error("" + message + ": " + Std.string(v),null,{ fileName : "Eithers.hx", lineNumber : 93, className : "thx.Eithers", methodName : "orThrow"});
		break;
	case 1:
		var v1 = either[2];
		return v1;
	}
};
thx_Eithers.toVNel = function(either) {
	switch(either[1]) {
	case 0:
		var e = either[2];
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	case 1:
		var v = either[2];
		return thx_Either.Right(v);
	}
};
thx_Eithers.cata = function(either,l,r) {
	switch(either[1]) {
	case 0:
		var l0 = either[2];
		return l(l0);
	case 1:
		var r0 = either[2];
		return r(r0);
	}
};
thx_Eithers.orElse = function(e0,e1) {
	if(e0[1] == 0) {
		var e = e0[2];
		return e1;
	} else {
		var right = e0;
		return right;
	}
};
var thx_Enums = function() { };
thx_Enums.__name__ = ["thx","Enums"];
thx_Enums.string = function(e) {
	var cons = e[0];
	var params = [];
	var _g = 0;
	var _g1 = e.slice(2);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0 ? "" : "(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = thx_Ints.compare(a[1],b[1]);
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(a.slice(2),b.slice(2));
};
thx_Enums.sameConstructor = function(a,b) {
	return a[1] == b[1];
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Floats = function() { };
thx_Floats.__name__ = ["thx","Floats"];
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	return thx_Floats.pattern_parse.match(s);
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	return parseFloat(s);
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
thx_Functions0.__name__ = ["thx","Functions0"];
thx_Functions0.after = function(callback,n) {
	return function() {
		if((n -= 1) == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(_) {
			return callback();
		});
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(i) {
			return callback(i);
		});
	};
};
var thx_Functions1 = function() { };
thx_Functions1.__name__ = ["thx","Functions1"];
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		var tmp = fb(v);
		return fa(tmp);
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(_) {
			return callback(value);
		});
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(i) {
			return callback(value,i);
		});
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
thx_Functions2.__name__ = ["thx","Functions2"];
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.join = function(fa,fb) {
	return function(v1,v2) {
		fa(v1,v2);
		fb(v1,v2);
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
thx_Functions3.__name__ = ["thx","Functions3"];
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
thx_Functions4.__name__ = ["thx","Functions4"];
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
thx_Functions5.__name__ = ["thx","Functions5"];
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
thx_Functions6.__name__ = ["thx","Functions6"];
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
thx_Functions7.__name__ = ["thx","Functions7"];
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
thx_Functions8.__name__ = ["thx","Functions8"];
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
thx_Functions9.__name__ = ["thx","Functions9"];
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx_Functions10 = function() { };
thx_Functions10.__name__ = ["thx","Functions10"];
thx_Functions10.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
};
var thx_Functions11 = function() { };
thx_Functions11.__name__ = ["thx","Functions11"];
thx_Functions11.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
};
var thx_Functions12 = function() { };
thx_Functions12.__name__ = ["thx","Functions12"];
thx_Functions12.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
thx__$Functions_Reader_$Impl_$.__name__ = ["thx","_Functions","Reader_Impl_"];
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		return (f(tmp))(a);
	};
};
var thx_Functions = function() { };
thx_Functions.__name__ = ["thx","Functions"];
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
thx_Functions.lift = function(t,f) {
	return f(t);
};
var thx__$HashSet_HashSet_$Impl_$ = {};
thx__$HashSet_HashSet_$Impl_$.__name__ = ["thx","_HashSet","HashSet_Impl_"];
thx__$HashSet_HashSet_$Impl_$._new = function(map) {
	var this1 = map;
	return this1;
};
thx__$HashSet_HashSet_$Impl_$.create = function(arr) {
	var this1 = new haxe_ds__$HashMap_HashMapData();
	var map = this1;
	var this2 = map;
	var hashSet = this2;
	if(null != arr) {
		thx__$HashSet_HashSet_$Impl_$.pushMany(hashSet,arr);
	}
	return hashSet;
};
thx__$HashSet_HashSet_$Impl_$.add = function(this1,v) {
	var _this = this1.values;
	var key = v.hashCode();
	if(_this.h.hasOwnProperty(key)) {
		return false;
	} else {
		var _this1 = this1.keys;
		var key1 = v.hashCode();
		_this1.h[key1] = v;
		var _this2 = this1.values;
		var key2 = v.hashCode();
		_this2.h[key2] = true;
		return true;
	}
};
thx__$HashSet_HashSet_$Impl_$.copy = function(this1) {
	var inst = thx__$HashSet_HashSet_$Impl_$.empty(this1);
	var k = this1.keys.iterator();
	while(k.hasNext()) {
		var k1 = k.next();
		var _this = inst.keys;
		var key = k1.hashCode();
		_this.h[key] = k1;
		var _this1 = inst.values;
		var key1 = k1.hashCode();
		_this1.h[key1] = true;
	}
	return inst;
};
thx__$HashSet_HashSet_$Impl_$.empty = function(this1) {
	var map = Type.createInstance(this1 == null ? null : js_Boot.getClass(this1),[]);
	var this2 = map;
	return this2;
};
thx__$HashSet_HashSet_$Impl_$.difference = function(this1,set) {
	var result = thx__$HashSet_HashSet_$Impl_$.copy(this1);
	var item = $iterator(thx__$HashSet_HashSet_$Impl_$)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.values.remove(item1.hashCode());
		result.keys.remove(item1.hashCode());
	}
	return result;
};
thx__$HashSet_HashSet_$Impl_$.symmetricDifference = function(this1,set) {
	var self = thx__$HashSet_HashSet_$Impl_$.copy(this1);
	var newset = thx__$HashSet_HashSet_$Impl_$.copy(self);
	var k = $iterator(thx__$HashSet_HashSet_$Impl_$)(set);
	while(k.hasNext()) {
		var k1 = k.next();
		var _this = newset.keys;
		var key = k1.hashCode();
		_this.h[key] = k1;
		var _this1 = newset.values;
		var key1 = k1.hashCode();
		_this1.h[key1] = true;
	}
	var this2 = newset;
	var result = thx__$HashSet_HashSet_$Impl_$.empty(self);
	var item = $iterator(thx__$HashSet_HashSet_$Impl_$)(self);
	while(item.hasNext()) {
		var item1 = item.next();
		var _this2 = set.values;
		var key2 = item1.hashCode();
		if(_this2.h.hasOwnProperty(key2)) {
			var _this3 = result.keys;
			var key3 = item1.hashCode();
			_this3.h[key3] = item1;
			var _this4 = result.values;
			var key4 = item1.hashCode();
			_this4.h[key4] = true;
		}
	}
	var result1 = thx__$HashSet_HashSet_$Impl_$.copy(this2);
	var item2 = $iterator(thx__$HashSet_HashSet_$Impl_$)(result);
	while(item2.hasNext()) {
		var item3 = item2.next();
		result1.values.remove(item3.hashCode());
		result1.keys.remove(item3.hashCode());
	}
	return result1;
};
thx__$HashSet_HashSet_$Impl_$.exists = function(this1,v) {
	var _this = this1.values;
	var key = v.hashCode();
	return _this.h.hasOwnProperty(key);
};
thx__$HashSet_HashSet_$Impl_$.remove = function(this1,v) {
	this1.values.remove(v.hashCode());
	return this1.keys.remove(v.hashCode());
};
thx__$HashSet_HashSet_$Impl_$.intersection = function(this1,set) {
	var result = thx__$HashSet_HashSet_$Impl_$.empty(this1);
	var item = $iterator(thx__$HashSet_HashSet_$Impl_$)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		var _this = set.values;
		var key = item1.hashCode();
		if(_this.h.hasOwnProperty(key)) {
			var _this1 = result.keys;
			var key1 = item1.hashCode();
			_this1.h[key1] = item1;
			var _this2 = result.values;
			var key2 = item1.hashCode();
			_this2.h[key2] = true;
		}
	}
	return result;
};
thx__$HashSet_HashSet_$Impl_$.push = function(this1,v) {
	var _this = this1.keys;
	var key = v.hashCode();
	_this.h[key] = v;
	var _this1 = this1.values;
	var key1 = v.hashCode();
	_this1.h[key1] = true;
};
thx__$HashSet_HashSet_$Impl_$.pushMany = function(this1,values) {
	var value = $iterator(values)();
	while(value.hasNext()) {
		var value1 = value.next();
		var _this = this1.keys;
		var key = value1.hashCode();
		_this.h[key] = value1;
		var _this1 = this1.values;
		var key1 = value1.hashCode();
		_this1.h[key1] = true;
	}
};
thx__$HashSet_HashSet_$Impl_$.iterator = function(this1) {
	return this1.keys.iterator();
};
thx__$HashSet_HashSet_$Impl_$.union = function(this1,set) {
	var newset = thx__$HashSet_HashSet_$Impl_$.copy(this1);
	var k = $iterator(thx__$HashSet_HashSet_$Impl_$)(set);
	while(k.hasNext()) {
		var k1 = k.next();
		var _this = newset.keys;
		var key = k1.hashCode();
		_this.h[key] = k1;
		var _this1 = newset.values;
		var key1 = k1.hashCode();
		_this1.h[key1] = true;
	}
	return newset;
};
thx__$HashSet_HashSet_$Impl_$.toArray = function(this1) {
	var arr = [];
	var k = this1.keys.iterator();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx__$HashSet_HashSet_$Impl_$.toString = function(this1) {
	return "{" + thx__$HashSet_HashSet_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$HashSet_HashSet_$Impl_$.get_length = function(this1) {
	var l = 0;
	var i = this1.values.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		++l;
	}
	return l;
};
var thx_Int64s = function() { };
thx_Int64s.__name__ = ["thx","Int64s"];
thx_Int64s.abs = function(value) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	if(thx_Int64s.compare(value,this1) > 0) {
		return value;
	} else {
		var high = ~value.high;
		var low = -value.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		return this2;
	}
};
thx_Int64s.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1;
};
thx_Int64s.parse = function(s) {
	var sIsNegative = false;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var multiplier = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var current = this2;
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw new thx_Error("String should only contain digits (and an optional - sign)",null,{ fileName : "Int64s.hx", lineNumber : 70, className : "thx.Int64s", methodName : "parse"});
		}
		var this3 = new haxe__$Int64__$_$_$Int64(digitInt >> 31,digitInt);
		var digit = this3;
		if(sIsNegative) {
			var mask = 65535;
			var al = multiplier.low & mask;
			var ah = multiplier.low >>> 16;
			var bl = digit.low & mask;
			var bh = digit.low >>> 16;
			var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
			var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
			var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
			var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
			var low = p00;
			var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
			p01 = p01 << 16;
			low = low + p01 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
				var ret = high++;
				high = high | 0;
			}
			p10 = p10 << 16;
			low = low + p10 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
				var ret1 = high++;
				high = high | 0;
			}
			high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this4 = new haxe__$Int64__$_$_$Int64(high,low);
			var b = this4;
			var high1 = current.high - b.high | 0;
			var low1 = current.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(current.low,b.low) < 0) {
				var ret2 = high1--;
				high1 = high1 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
			current = this5;
			if(!(current.high < 0)) {
				throw new thx_Error("Int64 parsing error: Underflow",null,{ fileName : "Int64s.hx", lineNumber : 76, className : "thx.Int64s", methodName : "parse"});
			}
		} else {
			var mask1 = 65535;
			var al1 = multiplier.low & mask1;
			var ah1 = multiplier.low >>> 16;
			var bl1 = digit.low & mask1;
			var bh1 = digit.low >>> 16;
			var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1,bl1);
			var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bl1);
			var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1,bh1);
			var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1,bh1);
			var low2 = p001;
			var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
			p011 = p011 << 16;
			low2 = low2 + p011 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p011) < 0) {
				var ret3 = high2++;
				high2 = high2 | 0;
			}
			p101 = p101 << 16;
			low2 = low2 + p101 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p101) < 0) {
				var ret4 = high2++;
				high2 = high2 | 0;
			}
			high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,digit.low) | 0) | 0;
			var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var b1 = this6;
			var high3 = current.high + b1.high | 0;
			var low3 = current.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,current.low) < 0) {
				var ret5 = high3++;
				high3 = high3 | 0;
			}
			var this7 = new haxe__$Int64__$_$_$Int64(high3,low3);
			current = this7;
			if(current.high < 0) {
				throw new thx_Error("Int64 parsing error: Overflow",null,{ fileName : "Int64s.hx", lineNumber : 80, className : "thx.Int64s", methodName : "parse"});
			}
		}
		var b2 = thx_Int64s.ten;
		var mask2 = 65535;
		var al2 = multiplier.low & mask2;
		var ah2 = multiplier.low >>> 16;
		var bl2 = b2.low & mask2;
		var bh2 = b2.low >>> 16;
		var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2,bl2);
		var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bl2);
		var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2,bh2);
		var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 = p012 << 16;
		low4 = low4 + p012 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p012) < 0) {
			var ret6 = high4++;
			high4 = high4 | 0;
		}
		p102 = p102 << 16;
		low4 = low4 + p102 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p102) < 0) {
			var ret7 = high4++;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high,b2.low) | 0) | 0;
		var this8 = new haxe__$Int64__$_$_$Int64(high4,low4);
		multiplier = this8;
	}
	return current;
};
thx_Int64s.toInt64 = function(s) {
	return thx_Int64s.parse(s);
};
thx_Int64s.divRound = function(num,div) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(num.high == b.high && num.low == b.low) {
		return thx_Int64s.zero;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b1 = this2;
	if(div.high == b1.high && div.low == b1.low) {
		throw new thx_Error("Int64s.divRound division by zero",null,{ fileName : "Int64s.hx", lineNumber : 97, className : "thx.Int64s", methodName : "divRound"});
	}
	if(num.high < 0 == div.high < 0) {
		var b2 = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high = num.high + b2.high | 0;
		var low = num.low + b2.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,num.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		return haxe__$Int64_Int64_$Impl_$.divMod(this3,div).quotient;
	} else if(div.high < 0) {
		var high1 = ~num.high;
		var low1 = -num.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var a = this4;
		var b3 = thx_Int64s.one;
		var high2 = a.high + b3.high | 0;
		var low2 = a.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,a.low) < 0) {
			var ret2 = high2++;
			high2 = high2 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var a1 = this5;
		var b4 = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high3 = a1.high + b4.high | 0;
		var low3 = a1.low + b4.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,a1.low) < 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this6 = new haxe__$Int64__$_$_$Int64(high3,low3);
		var high4 = ~div.high;
		var low4 = -div.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this7 = new haxe__$Int64__$_$_$Int64(high4,low4);
		return haxe__$Int64_Int64_$Impl_$.divMod(this6,this7).quotient;
	} else {
		var b5 = thx_Int64s.one;
		var high5 = num.high + b5.high | 0;
		var low5 = num.low + b5.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,num.low) < 0) {
			var ret5 = high5++;
			high5 = high5 | 0;
		}
		var this8 = new haxe__$Int64__$_$_$Int64(high5,low5);
		var a2 = this8;
		var b6 = haxe__$Int64_Int64_$Impl_$.divMod(div,thx_Int64s.two).quotient;
		var high6 = a2.high - b6.high | 0;
		var low6 = a2.low - b6.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(a2.low,b6.low) < 0) {
			var ret6 = high6--;
			high6 = high6 | 0;
		}
		var this9 = new haxe__$Int64__$_$_$Int64(high6,low6);
		return haxe__$Int64_Int64_$Impl_$.divMod(this9,div).quotient;
	}
};
thx_Int64s.divFloor = function(num,div) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(num.high == b.high && num.low == b.low) {
		return thx_Int64s.zero;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b1 = this2;
	if(div.high == b1.high && div.low == b1.low) {
		throw new thx_Error("Int64s.divFloor division by zero",null,{ fileName : "Int64s.hx", lineNumber : 111, className : "thx.Int64s", methodName : "divFloor"});
	}
	var a = haxe__$Int64_Int64_$Impl_$.divMod(num,div).quotient;
	var x = num.high < 0 != div.high < 0 ? 1 : 0;
	var this3 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	var b2 = this3;
	var high = a.high - b2.high | 0;
	var low = a.low - b2.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b2.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this4 = new haxe__$Int64__$_$_$Int64(high,low);
	return this4;
};
thx_Int64s.divCeil = function(num,div) {
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	if(num.high == b.high && num.low == b.low) {
		return thx_Int64s.zero;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b1 = this2;
	if(div.high == b1.high && div.low == b1.low) {
		throw new thx_Error("Int64s.divCeil division by zero",null,{ fileName : "Int64s.hx", lineNumber : 119, className : "thx.Int64s", methodName : "divCeil"});
	}
	var r = haxe__$Int64_Int64_$Impl_$.divMod(num,div);
	var q = r.quotient;
	var m = r.modulus;
	var tmp;
	if(num.high < 0 == div.high < 0) {
		var this3 = new haxe__$Int64__$_$_$Int64(0,0);
		var b2 = this3;
		tmp = !(m.high == b2.high && m.low == b2.low);
	} else {
		tmp = false;
	}
	if(tmp) {
		var b3 = thx_Int64s.one;
		var high = q.high + b3.high | 0;
		var low = q.low + b3.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,q.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(high,low);
		return this4;
	} else {
		return q;
	}
};
thx_Int64s.toFloat = function(i) {
	var isNegative = false;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this1;
	var v = i.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(i.low,b.low);
	}
	if((i.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		var b1 = thx_Int64s.min;
		var v1 = i.high - b1.high | 0;
		if(v1 != 0) {
			v1 = v1;
		} else {
			v1 = haxe__$Int32_Int32_$Impl_$.ucompare(i.low,b1.low);
		}
		if((i.high < 0 ? b1.high < 0 ? v1 : -1 : b1.high >= 0 ? v1 : 1) < 0) {
			return -9223372036854775808.0;
		}
		isNegative = true;
		var high = ~i.high;
		var low = -i.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		i = this2;
	}
	var multiplier = 1.0;
	var ret1 = 0.0;
	var _g = 0;
	while(_g < 64) {
		var _ = _g++;
		var b2 = thx_Int64s.one;
		var this3 = new haxe__$Int64__$_$_$Int64(i.high & b2.high,i.low & b2.low);
		var a = this3;
		var b3 = thx_Int64s.zero;
		if(a.high != b3.high || a.low != b3.low) {
			ret1 += multiplier;
		}
		multiplier *= 2.0;
		var b4 = 1;
		b4 &= 63;
		if(b4 == 0) {
			var this4 = new haxe__$Int64__$_$_$Int64(i.high,i.low);
			i = this4;
		} else if(b4 < 32) {
			var this5 = new haxe__$Int64__$_$_$Int64(i.high >> b4,i.high << 32 - b4 | i.low >>> b4);
			i = this5;
		} else {
			var this6 = new haxe__$Int64__$_$_$Int64(i.high >> 31,i.high >> b4 - 32);
			i = this6;
		}
	}
	return (isNegative ? -1 : 1) * ret1;
};
thx_Int64s.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw new thx_Error("Conversion to Int64 failed. Number is NaN or Infinite",null,{ fileName : "Int64s.hx", lineNumber : 162, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion overflow",null,{ fileName : "Int64s.hx", lineNumber : 168, className : "thx.Int64s", methodName : "fromFloat"});
	}
	if(noFractions < -9007199254740991.0) {
		throw new thx_Error("Conversion to Int64 failed. Conversion underflow",null,{ fileName : "Int64s.hx", lineNumber : 170, className : "thx.Int64s", methodName : "fromFloat"});
	}
	var result = thx_Int64s.zero;
	var neg = noFractions < 0.0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	var curr;
	while(rest >= 1) {
		curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var this1 = new haxe__$Int64__$_$_$Int64(0,1);
			var a = this1;
			var b = i;
			b &= 63;
			var b1;
			if(b == 0) {
				var this2 = new haxe__$Int64__$_$_$Int64(a.high,a.low);
				b1 = this2;
			} else if(b < 32) {
				var this3 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
				b1 = this3;
			} else {
				var this4 = new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
				b1 = this4;
			}
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high,low);
			result = this5;
		}
		++i;
	}
	if(neg) {
		var high1 = ~result.high;
		var low1 = -result.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this6 = new haxe__$Int64__$_$_$Int64(high1,low1);
		return this6;
	} else {
		return result;
	}
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
thx_RangeIterator.__name__ = ["thx","RangeIterator"];
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
thx_Iterables.__name__ = ["thx","Iterables"];
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($iterator(it)(),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($iterator(it)(),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($iterator(it)(),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($iterator(a)(),$iterator(b)(),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($iterator(it)(),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($iterator(it)(),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($iterator(it)(),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($iterator(it)());
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($iterator(it)(),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($iterator(it)(),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($iterator(it)());
};
thx_Iterables.hasElements = function(it) {
	return $iterator(it)().hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($iterator(it)(),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$iterator(it)().hasNext();
};
thx_Iterables.isIterable = function(v) {
	var fields;
	var fields1;
	if(Reflect.isObject(v)) {
		var o = v;
		fields1 = null == (o == null ? null : js_Boot.getClass(o));
	} else {
		fields1 = false;
	}
	if(fields1) {
		fields = Reflect.fields(v);
	} else {
		var o1 = v;
		fields = Type.getInstanceFields(o1 == null ? null : js_Boot.getClass(o1));
	}
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($iterator(it)(),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($iterator(it)(),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($iterator(it)(),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($iterator(it)(),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($iterator(it)(),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($iterator(it)(),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($iterator(it)(),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($iterator(it)());
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $iterator(it)();
	while(a.hasNext()) {
		var a1 = a.next();
		var a2 = [a1];
		if(thx_Options.any(found,(function(a3) {
			return function(a0) {
				var found1 = f(a0);
				var found2 = f(a3[0]);
				return ord(found1,found2) == thx_OrderingImpl.LT;
			};
		})(a2))) {
			found = found;
		} else {
			found = haxe_ds_Option.Some(a2[0]);
		}
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $iterator(it)();
	while(a.hasNext()) {
		var a1 = a.next();
		switch(found[1]) {
		case 0:
			var t = found[2];
			if(ord(f(a1),f(t._0)) == thx_OrderingImpl.LT) {
				var this1 = { _0 : a1, _1 : t._1};
				found = haxe_ds_Option.Some(this1);
			} else {
				var t1 = found[2];
				if(ord(f(a1),f(t1._1)) == thx_OrderingImpl.GT) {
					var this2 = { _0 : t1._0, _1 : a1};
					found = haxe_ds_Option.Some(this2);
				} else {
					found = found;
				}
			}
			break;
		case 1:
			var this3 = { _0 : a1, _1 : a1};
			found = haxe_ds_Option.Some(this3);
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.takeUntil = function(it,fn) {
	return thx_Iterators.takeUntil($iterator(it)(),fn);
};
thx_Iterables.dropLeft = function(itr,n) {
	return { iterator : function() {
		var itr1 = $iterator(itr)();
		var count = n;
		while(count > 0) if(itr1.hasNext()) {
			itr1.next();
		}
		return { next : $bind(itr1,itr1.next), hasNext : $bind(itr1,itr1.hasNext)};
	}};
};
thx_Iterables.dropUntil = function(it,fn) {
	return thx_Iterators.dropUntil($iterator(it)(),fn);
};
thx_Iterables.unionBy = function(a,b,eq) {
	var res = [];
	var e = $iterator(a)();
	while(e.hasNext()) {
		var e1 = e.next();
		res.push(e1);
	}
	var e2 = $iterator(b)();
	while(e2.hasNext()) {
		var e3 = e2.next();
		var e4 = [e3];
		if(!thx_Iterables.any(res,(function(e5) {
			return function(x) {
				return eq(x,e5[0]);
			};
		})(e4))) {
			res.push(e4[0]);
		}
	}
	return res;
};
thx_Iterables.differenceBy = function(a,b,eq) {
	var res = [];
	var e = $iterator(a)();
	while(e.hasNext()) {
		var e1 = e.next();
		var e2 = [e1];
		if(!thx_Iterables.any(b,(function(e3) {
			return function(x) {
				return eq(x,e3[0]);
			};
		})(e2))) {
			res.push(e2[0]);
		}
	}
	return res;
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($iterator(it)());
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($iterator(it)());
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($iterator(it)());
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($iterator(it)());
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($iterator(it1)(),$iterator(it2)());
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($iterator(it1)(),$iterator(it2)(),$iterator(it3)());
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)());
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)(),$iterator(it5)());
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = ["thx","Iterators"];
thx_Iterators.all = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(!predicate(element1)) {
			return false;
		}
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return true;
		}
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var ae;
	var be;
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	var i = it;
	while(i.hasNext()) {
		var i1 = i.next();
		if(pos++ == index) {
			return i1;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(f(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(element == v1) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields;
	var fields1;
	if(Reflect.isObject(v)) {
		var o = v;
		fields1 = null == (o == null ? null : js_Boot.getClass(o));
	} else {
		fields1 = false;
	}
	if(fields1) {
		fields = Reflect.fields(v);
	} else {
		var o1 = v;
		fields = Type.getInstanceFields(o1 == null ? null : js_Boot.getClass(o1));
	}
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1));
	}
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1,i++));
	}
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Iterators.foldLeft(thx_Iterators.fmap(it,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Iterators.takeUntil = function(it,f) {
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			out.push(v1);
		} else {
			break;
		}
	}
	return out;
};
thx_Iterators.dropUntil = function(it,f) {
	var done = false;
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(!done) {
			if(!f(v1)) {
				done = true;
				out.push(v1);
			}
		} else {
			out.push(v1);
		}
	}
	return out;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		elements.push(element1);
	}
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()};
		array.push(this1);
	}
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
thx_MapIterator.__name__ = ["thx","MapIterator"];
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
thx_MapIIterator.__name__ = ["thx","MapIIterator"];
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx__$LocalDate_LocalDate_$Impl_$ = {};
thx__$LocalDate_LocalDate_$Impl_$.__name__ = ["thx","_LocalDate","LocalDate_Impl_"];
thx__$LocalDate_LocalDate_$Impl_$.now = function() {
	return thx__$LocalDate_LocalDate_$Impl_$.fromDate(new Date());
};
thx__$LocalDate_LocalDate_$Impl_$.fromInt = function(days) {
	var this1 = days;
	return this1;
};
thx__$LocalDate_LocalDate_$Impl_$.fromDate = function(date) {
	return thx__$LocalDate_LocalDate_$Impl_$.fromTime(date.getTime());
};
thx__$LocalDate_LocalDate_$Impl_$.fromTime = function(timestamp) {
	var this1 = (timestamp / 86400000. | 0) + 719162;
	return this1;
};
thx__$LocalDate_LocalDate_$Impl_$.fromString = function(s) {
	var _g = thx__$LocalDate_LocalDate_$Impl_$.parse(s);
	switch(_g[1]) {
	case 0:
		var error = _g[2];
		throw new thx_Error(error,null,{ fileName : "LocalDate.hx", lineNumber : 52, className : "thx._LocalDate.LocalDate_Impl_", methodName : "fromString"});
		break;
	case 1:
		var d = _g[2];
		return d;
	}
};
thx__$LocalDate_LocalDate_$Impl_$.parse = function(s) {
	if(s == null) {
		return thx_Either.Left("null String cannot be parsed to LocalDate");
	} else {
		var pattern = new EReg("^([-])?(\\d+)[-](\\d{2})[-](\\d{2})$","");
		if(!pattern.match(s)) {
			return thx_Either.Left("unable to parse DateTime string: \"" + s + "\"");
		} else {
			var date = thx__$LocalDate_LocalDate_$Impl_$.create(Std.parseInt(pattern.matched(2)),Std.parseInt(pattern.matched(3)),Std.parseInt(pattern.matched(4)));
			var tmp;
			if(pattern.matched(1) == "-") {
				var this1 = -date;
				tmp = this1;
			} else {
				tmp = date;
			}
			return thx_Either.Right(tmp);
		}
	}
};
thx__$LocalDate_LocalDate_$Impl_$.compare = function(a,b) {
	return thx_Ints.compare(a,b);
};
thx__$LocalDate_LocalDate_$Impl_$.create = function(year,month,day) {
	var days = thx__$LocalDate_LocalDate_$Impl_$.dateToDays(year,month,day);
	var this1 = days;
	return this1;
};
thx__$LocalDate_LocalDate_$Impl_$.dateToDays = function(year,month,day) {
	var fixMonthYear = function() {
		if(month == 0) {
			year -= 1;
			month = 12;
		} else if(month < 0) {
			month = -month;
			var years = Math.ceil(month / 12);
			year -= years;
			month = years * 12 - month;
		} else if(month > 12) {
			var years1 = Math.floor(month / 12);
			year += years1;
			month -= years1 * 12;
		}
	};
	while(day < 0) {
		month -= 1;
		fixMonthYear();
		day += thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	var days;
	while(true) {
		days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
		if(!(day > days)) {
			break;
		}
		month += 1;
		fixMonthYear();
		day -= days;
	}
	if(day == 0) {
		month -= 1;
		fixMonthYear();
		day = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(year,month);
	}
	fixMonthYear();
	return thx__$LocalDate_LocalDate_$Impl_$.rawDateToDays(year,month,day);
};
thx__$LocalDate_LocalDate_$Impl_$.rawDateToDays = function(year,month,day) {
	var days = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(year) ? thx_DateConst.daysToMonth366 : thx_DateConst.daysToMonth365;
	if(day >= 1 && day <= days[month] - days[month - 1]) {
		var y = year - 1;
		var n = y * 365 + (y / 4 | 0) - (y / 100 | 0) + (y / 400 | 0) + days[month - 1] + day - 1;
		return n;
	}
	throw new thx_Error("bad year-month-day " + year + "-" + month + "-" + day,null,{ fileName : "LocalDate.hx", lineNumber : 136, className : "thx._LocalDate.LocalDate_Impl_", methodName : "rawDateToDays"});
};
thx__$LocalDate_LocalDate_$Impl_$.daysRange = function(start,end) {
	if(thx_Ints.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(start != end) {
		days.push(start);
		start = thx__$LocalDate_LocalDate_$Impl_$.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx__$LocalDate_LocalDate_$Impl_$.getDatePart = function(this1,part) {
	var n = this1;
	var y400 = n / 146097 | 0;
	n -= y400 * 146097;
	var y100 = n / 36524 | 0;
	if(y100 == 4) {
		y100 = 3;
	}
	n -= y100 * 36524;
	var y4 = n / 1461 | 0;
	n -= y4 * 1461;
	var y1 = n / 365 | 0;
	if(y1 == 4) {
		y1 = 3;
	}
	if(part == 0) {
		return y400 * 400 + y100 * 100 + y4 * 4 + y1 + 1;
	}
	n -= y1 * 365;
	if(part == 1) {
		return n + 1;
	}
	var leapYear = y1 == 3 && (y4 != 24 || y100 == 3);
	var adays = leapYear ? thx_DateConst.daysToMonth366 : thx_DateConst.daysToMonth365;
	var m = n >> 6;
	while(n >= adays[m]) ++m;
	if(part == 2) {
		return m;
	}
	return n - adays[m - 1] + 1;
};
thx__$LocalDate_LocalDate_$Impl_$._new = function(days) {
	var this1 = days;
	return this1;
};
thx__$LocalDate_LocalDate_$Impl_$.min = function(this1,other) {
	if(thx__$LocalDate_LocalDate_$Impl_$.compareTo(this1,other) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$LocalDate_LocalDate_$Impl_$.max = function(this1,other) {
	if(thx__$LocalDate_LocalDate_$Impl_$.compareTo(this1,other) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$LocalDate_LocalDate_$Impl_$.jump = function(this1,period,amount) {
	var sec = 0;
	var min = 0;
	var hr = 0;
	var day = thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3);
	var mon = thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2);
	var yr = thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0);
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hr += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		mon += amount;
		break;
	case 6:
		yr += amount;
		break;
	}
	var time = thx__$Time_Time_$Impl_$.create(hr,min,sec);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(time,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var extraDays = Math.floor(x.low / 7);
	return thx__$LocalDate_LocalDate_$Impl_$.create(yr,mon,day + extraDays);
};
thx__$LocalDate_LocalDate_$Impl_$.daysInThisMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2));
};
thx__$LocalDate_LocalDate_$Impl_$.prevYear = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Year,-1);
};
thx__$LocalDate_LocalDate_$Impl_$.nextYear = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Year,1);
};
thx__$LocalDate_LocalDate_$Impl_$.prevMonth = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Month,-1);
};
thx__$LocalDate_LocalDate_$Impl_$.nextMonth = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Month,1);
};
thx__$LocalDate_LocalDate_$Impl_$.prevWeek = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Week,-1);
};
thx__$LocalDate_LocalDate_$Impl_$.nextWeek = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Week,1);
};
thx__$LocalDate_LocalDate_$Impl_$.prevDay = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Day,-1);
};
thx__$LocalDate_LocalDate_$Impl_$.nextDay = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Day,1);
};
thx__$LocalDate_LocalDate_$Impl_$.snapToWeekDay = function(this1,weekday,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$LocalDate_LocalDate_$Impl_$.snapNextWeekDay = function(this1,weekday) {
	var d = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s < d) {
		s += 7;
	}
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$LocalDate_LocalDate_$Impl_$.snapPrevWeekDay = function(this1,weekday) {
	var d = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
	var s = weekday;
	if(s > d) {
		s -= 7;
	}
	return thx__$LocalDate_LocalDate_$Impl_$.jump(this1,thx_TimePeriod.Day,s - d);
};
thx__$LocalDate_LocalDate_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:
		return this1;
	case 3:
		var this2 = this1 + 1;
		return this2;
	case 4:
		var wd = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
		var this3 = this1 + 7 - wd;
		return this3;
	case 5:
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2) + 1,1);
	case 6:
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0) + 1,1,1);
	}
};
thx__$LocalDate_LocalDate_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:case 3:
		var this2 = this1 - 1;
		return this2;
	case 4:
		var wd = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
		var this3 = this1 - wd;
		return this3;
	case 5:
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2),1);
	case 6:
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),1,1);
	}
};
thx__$LocalDate_LocalDate_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:case 3:
		return this1;
	case 4:
		var wd = thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek(this1);
		var mod = wd <= 3 ? -wd : 7 - wd;
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3) + mod);
	case 5:
		var mod1 = thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3) > Math.round(thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2)) / 2) ? 1 : 0;
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2) + mod1,1);
	case 6:
		var mod2 = thx_Ints.compare(this1,thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),6,2)) > 0 ? 1 : 0;
		return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0) + mod2,1,1);
	}
};
thx__$LocalDate_LocalDate_$Impl_$.sameYear = function(this1,other) {
	return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0) == thx__$LocalDate_LocalDate_$Impl_$.getDatePart(other,0);
};
thx__$LocalDate_LocalDate_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$LocalDate_LocalDate_$Impl_$.sameYear(this1,other)) {
		return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2) == thx__$LocalDate_LocalDate_$Impl_$.getDatePart(other,2);
	} else {
		return false;
	}
};
thx__$LocalDate_LocalDate_$Impl_$.withYear = function(this1,year) {
	return thx__$LocalDate_LocalDate_$Impl_$.create(year,thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3));
};
thx__$LocalDate_LocalDate_$Impl_$.withMonth = function(this1,month) {
	return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),month,thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3));
};
thx__$LocalDate_LocalDate_$Impl_$.withDay = function(this1,day) {
	return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2),day);
};
thx__$LocalDate_LocalDate_$Impl_$.add = function(this1,days) {
	var this2 = this1 + days;
	return this2;
};
thx__$LocalDate_LocalDate_$Impl_$.subtract = function(this1,days) {
	var this2 = this1 - days;
	return this2;
};
thx__$LocalDate_LocalDate_$Impl_$.subtractDate = function(this1,date) {
	return this1 - date;
};
thx__$LocalDate_LocalDate_$Impl_$.addDays = function(this1,days) {
	var this2 = this1 + days;
	return this2;
};
thx__$LocalDate_LocalDate_$Impl_$.addMonths = function(this1,months) {
	return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2) + months,thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3));
};
thx__$LocalDate_LocalDate_$Impl_$.addYears = function(this1,years) {
	return thx__$LocalDate_LocalDate_$Impl_$.addMonths(this1,years * 12);
};
thx__$LocalDate_LocalDate_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	return thx_Ints.compare(this1,other);
};
thx__$LocalDate_LocalDate_$Impl_$.equalsTo = function(this1,that) {
	return this1 == that;
};
thx__$LocalDate_LocalDate_$Impl_$.equals = function(self,that) {
	return self == that;
};
thx__$LocalDate_LocalDate_$Impl_$.notEqualsTo = function(this1,that) {
	return this1 != that;
};
thx__$LocalDate_LocalDate_$Impl_$.notEquals = function(self,that) {
	return self != that;
};
thx__$LocalDate_LocalDate_$Impl_$.nearEqualsTo = function(this1,other,span) {
	var v = other - this1;
	var days = v < 0 ? -v : v;
	var x = haxe__$Int64_Int64_$Impl_$.divMod(thx__$Time_Time_$Impl_$.abs(span),thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return days <= x.low;
};
thx__$LocalDate_LocalDate_$Impl_$.greaterThan = function(this1,that) {
	return thx_Ints.compare(this1,that) > 0;
};
thx__$LocalDate_LocalDate_$Impl_$.greater = function(self,that) {
	return thx_Ints.compare(self,that) > 0;
};
thx__$LocalDate_LocalDate_$Impl_$.greaterEqualsTo = function(this1,that) {
	return thx_Ints.compare(this1,that) >= 0;
};
thx__$LocalDate_LocalDate_$Impl_$.greaterEquals = function(self,that) {
	return thx_Ints.compare(self,that) >= 0;
};
thx__$LocalDate_LocalDate_$Impl_$.lessThan = function(this1,that) {
	return thx_Ints.compare(this1,that) < 0;
};
thx__$LocalDate_LocalDate_$Impl_$.less = function(self,that) {
	return thx_Ints.compare(self,that) < 0;
};
thx__$LocalDate_LocalDate_$Impl_$.lessEqualsTo = function(this1,that) {
	return thx_Ints.compare(this1,that) <= 0;
};
thx__$LocalDate_LocalDate_$Impl_$.lessEquals = function(self,that) {
	return thx_Ints.compare(self,that) <= 0;
};
thx__$LocalDate_LocalDate_$Impl_$.toDate = function(this1) {
	return new Date(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2) - 1,thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3),0,0,0);
};
thx__$LocalDate_LocalDate_$Impl_$.toLocalYearMonth = function(this1) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2));
};
thx__$LocalDate_LocalDate_$Impl_$.toDateTimeUtc = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3),0,0,0);
};
thx__$LocalDate_LocalDate_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	var this2;
	var v = this1;
	if(v < 0) {
		this2 = -v;
	} else {
		this2 = v;
	}
	var abs = this2;
	var isneg = this1 < 0;
	return (isneg ? "-" : "") + ("" + thx__$LocalDate_LocalDate_$Impl_$.getDatePart(abs,0) + "-" + thx_Ints.lpad(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(abs,2),"0",2) + "-" + thx_Ints.lpad(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(abs,3),"0",2));
};
thx__$LocalDate_LocalDate_$Impl_$.get_days = function(this1) {
	return this1;
};
thx__$LocalDate_LocalDate_$Impl_$.get_year = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0);
};
thx__$LocalDate_LocalDate_$Impl_$.get_month = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2);
};
thx__$LocalDate_LocalDate_$Impl_$.get_day = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,3);
};
thx__$LocalDate_LocalDate_$Impl_$.get_dayOfWeek = function(this1) {
	return (this1 + 1) % 7;
};
thx__$LocalDate_LocalDate_$Impl_$.get_dayOfYear = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,1);
};
thx__$LocalDate_LocalDate_$Impl_$.get_isInLeapYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0));
};
thx__$LocalDate_LocalDate_$Impl_$.get_monthDays = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this1,2));
};
thx__$LocalDate_LocalDate_$Impl_$.self = function(this1) {
	return this1;
};
var thx__$LocalYearMonth_LocalYearMonth_$Impl_$ = {};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.__name__ = ["thx","_LocalYearMonth","LocalYearMonth_Impl_"];
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.now = function() {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromDate(new Date());
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromInt = function(months) {
	var this1 = months;
	return this1;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromDate = function(date) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(date.getFullYear(),date.getMonth() + 1);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromTime = function(timestamp) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromDate(new Date(timestamp));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.fromString = function(s) {
	var _g = thx__$LocalYearMonth_LocalYearMonth_$Impl_$.parse(s);
	switch(_g[1]) {
	case 0:
		var error = _g[2];
		throw new thx_Error(error,null,{ fileName : "LocalYearMonth.hx", lineNumber : 47, className : "thx._LocalYearMonth.LocalYearMonth_Impl_", methodName : "fromString"});
		break;
	case 1:
		var v = _g[2];
		return v;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.parse = function(s) {
	if(s == null) {
		return thx_Either.Left("null String cannot be parsed to LocalYearMonth");
	} else {
		var pattern = new EReg("^([-])?(\\d+)[-](\\d{2})$","");
		if(!pattern.match(s)) {
			return thx_Either.Left("unable to parse LocalYearMonth string: \"" + s + "\"");
		} else {
			var years = Std.parseInt(pattern.matched(2));
			var months = Std.parseInt(pattern.matched(3));
			return thx_Either.Right(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create((pattern.matched(1) == "-" ? -1 : 1) * years,months));
		}
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.compare = function(a,b) {
	return thx_Ints.compare(a,b);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create = function(year,month) {
	var months = thx__$LocalYearMonth_LocalYearMonth_$Impl_$.dateToMonth(year,month);
	var this1 = months;
	return this1;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.dateToMonth = function(year,month) {
	if(month == 0) {
		--year;
		month = 12;
	} else if(month < 0) {
		month = -month;
		var years = Math.ceil(month / 12);
		year -= years;
		month = years * 12 - month;
	} else if(month > 12) {
		var years1 = Math.floor(month / 12);
		year += years1;
		month -= years1 * 12;
	}
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.rawDateToMonths(year,month);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.rawDateToMonths = function(year,month) {
	if(year == 0) {
		return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.dateToMonth(-1,month + 1);
	} else if(year < 0) {
		return (year + 1) * 12 - (13 - month);
	} else {
		return (year - 1) * 12 + month - 1;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.monthsRange = function(start,end) {
	if(thx_Ints.compare(end,start) < 0) {
		return [];
	}
	var month = [];
	while(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(start) != thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(end)) {
		month.push(start);
		start = thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(start),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(start) + 1);
	}
	month.push(end);
	return month;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$._new = function(months) {
	var this1 = months;
	return this1;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.min = function(this1,other) {
	if(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.compareTo(this1,other) <= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.max = function(this1,other) {
	if(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.compareTo(this1,other) >= 0) {
		return this1;
	} else {
		return other;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.jump = function(this1,period,amount) {
	var this2 = thx__$LocalDate_LocalDate_$Impl_$.jump(thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1),1),period,amount);
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this2,0),thx__$LocalDate_LocalDate_$Impl_$.getDatePart(this2,2));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.daysInThisMonth = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.prevYear = function(this1) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) - 1,thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.nextYear = function(this1) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) + 1,thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.prevMonth = function(this1) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1) - 1);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.nextMonth = function(this1) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1) + 1);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:case 3:case 4:
		return this1;
	case 5:
		var this2 = this1 + 1;
		return this2;
	case 6:
		return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) + 1,1);
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:case 3:case 4:case 5:
		var this2 = this1 - 1;
		return this2;
	case 6:
		return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) - 1,1);
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:case 1:case 2:case 3:case 4:case 5:
		return this1;
	case 6:
		if(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1) <= 6) {
			return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),1);
		} else {
			return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) + 1,1);
		}
		break;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.sameYear = function(this1,other) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) == thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(other);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.sameMonth = function(this1,other) {
	if(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.sameYear(this1,other)) {
		return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1) == thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(other);
	} else {
		return false;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.withYear = function(this1,year) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(year,thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.withMonth = function(this1,month) {
	return thx__$LocalYearMonth_LocalYearMonth_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),month);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.add = function(this1,months) {
	var this2 = this1 + months;
	return this2;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.subtract = function(this1,months) {
	var this2 = this1 - months;
	return this2;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.subtractDate = function(this1,date) {
	return this1 - date;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.addYears = function(this1,years) {
	var this2 = this1 + years * 12;
	return this2;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.addMonths = function(this1,months) {
	var this2 = this1 + months;
	return this2;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.compareTo = function(this1,other) {
	if(null == other && this1 == null) {
		return 0;
	}
	if(null == this1) {
		return -1;
	} else if(null == other) {
		return 1;
	}
	return thx_Ints.compare(this1,other);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.equalsTo = function(this1,that) {
	return this1 == that;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.equals = function(self,that) {
	return self == that;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.notEqualsTo = function(this1,that) {
	return this1 != that;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.notEquals = function(self,that) {
	return self != that;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.greaterThan = function(this1,that) {
	return thx_Ints.compare(this1,that) > 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.greater = function(self,that) {
	return thx_Ints.compare(self,that) > 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.greaterEqualsTo = function(this1,that) {
	return thx_Ints.compare(this1,that) >= 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.greaterEquals = function(self,that) {
	return thx_Ints.compare(self,that) >= 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.lessThan = function(this1,that) {
	return thx_Ints.compare(this1,that) < 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.less = function(self,that) {
	return thx_Ints.compare(self,that) < 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.lessEqualsTo = function(this1,that) {
	return thx_Ints.compare(this1,that) <= 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.lessEquals = function(self,that) {
	return thx_Ints.compare(self,that) <= 0;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.toDate = function(this1) {
	return new Date(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1) - 1,1,0,0,0);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.toDateTimeUtc = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1),1,0,0,0);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.toLocalDate = function(this1) {
	return thx__$LocalDate_LocalDate_$Impl_$.create(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1),1);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.toString = function(this1) {
	if(null == this1) {
		return "";
	}
	return "" + thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1) + "-" + thx_Ints.lpad(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1),"0",2);
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_months = function(this1) {
	return this1;
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year = function(this1) {
	if(this1 < 0) {
		return Math.floor(this1 / 12);
	} else {
		return 1 + Math.floor(this1 / 12);
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month = function(this1) {
	if(this1 < 0) {
		return 12 + (this1 + 1) % 12;
	} else {
		return this1 % 12 + 1;
	}
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_isInLeapYear = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.isLeapYear(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_monthDays = function(this1) {
	return thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysInMonth(thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_year(this1),thx__$LocalYearMonth_LocalYearMonth_$Impl_$.get_month(this1));
};
thx__$LocalYearMonth_LocalYearMonth_$Impl_$.self = function(this1) {
	return this1;
};
var thx_Maps = function() { };
thx_Maps.__name__ = ["thx","Maps"];
thx_Maps.copyTo = function(src,dst) {
	var key = src.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		dst.set(key1,src.get(key1));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.foldLeftWithKeys = function(map,f,acc) {
	return thx_Iterators.reduce(map.keys(),function(acc1,k) {
		return f(acc1,k,map.get(k));
	},acc);
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.isMap = function(v) {
	return js_Boot.__instanceof(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	return "[" + thx_Maps.tuples(m).map(function(t) {
		return thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}).join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
thx__$Monoid_Monoid_$Impl_$.__name__ = ["thx","_Monoid","Monoid_Impl_"];
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
thx__$Nel_Nel_$Impl_$.__name__ = ["thx","_Nel","Nel_Impl_"];
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g[1]) {
	case 0:
		var nel = _g[2];
		return thx__$Nel_Nel_$Impl_$.cons(hd,nel);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var i = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(i.hasNext()) {
			var i1 = i.next();
			res = thx_NonEmptyList.ConsNel(arr[i1],res);
		}
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return f(x);
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.append(f(x1),thx__$Nel_Nel_$Impl_$.flatMap(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.fold = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return f(x1,thx__$Nel_Nel_$Impl_$.fold(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return thx_NonEmptyList.ConsNel(x,nel);
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx_NonEmptyList.ConsNel(x1,thx__$Nel_Nel_$Impl_$.append(xs,nel));
	}
};
thx__$Nel_Nel_$Impl_$.head = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return x1;
	}
};
thx__$Nel_Nel_$Impl_$.tail = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return [];
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.toArray(xs);
	}
};
thx__$Nel_Nel_$Impl_$.init = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return [];
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return [x1].concat(thx__$Nel_Nel_$Impl_$.init(xs));
	}
};
thx__$Nel_Nel_$Impl_$.last = function(this1) {
	switch(this1[1]) {
	case 0:
		var x = this1[2];
		return x;
	case 1:
		var xs = this1[3];
		var x1 = this1[2];
		return thx__$Nel_Nel_$Impl_$.last(xs);
	}
};
thx__$Nel_Nel_$Impl_$.push = function(this1,a) {
	return thx__$Nel_Nel_$Impl_$.append(this1,thx_NonEmptyList.Single(a));
};
thx__$Nel_Nel_$Impl_$.pop = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.last(this1), _1 : thx__$Nel_Nel_$Impl_$.init(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.unshift = function(this1,a) {
	return thx_NonEmptyList.ConsNel(a,this1);
};
thx__$Nel_Nel_$Impl_$.shift = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.head(this1), _1 : thx__$Nel_Nel_$Impl_$.tail(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs[1]) {
		case 0:
			var x = xs[2];
			return thx_Arrays.append(acc,x);
		case 1:
			var xs1 = xs[3];
			var x1 = xs[2];
			var go1 = thx_Arrays.append(acc,x1);
			return go(go1,xs1);
		}
	};
	var go2 = go;
	return go2([],this1);
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = { __ename__ : ["thx","NonEmptyList"], __constructs__ : ["Single","ConsNel"] };
thx_NonEmptyList.Single = function(x) { var $x = ["Single",0,x]; $x.__enum__ = thx_NonEmptyList; return $x; };
thx_NonEmptyList.ConsNel = function(x,xs) { var $x = ["ConsNel",1,x,xs]; $x.__enum__ = thx_NonEmptyList; return $x; };
var thx_Nil = { __ename__ : ["thx","Nil"], __constructs__ : ["nil"] };
thx_Nil.nil = ["nil",0];
thx_Nil.nil.__enum__ = thx_Nil;
var thx_Nothing = { __ename__ : ["thx","Nothing"], __constructs__ : [] };
var thx_Nulls = function() { };
thx_Nulls.__name__ = ["thx","Nulls"];
var thx_Objects = function() { };
thx_Objects.__name__ = ["thx","Objects"];
thx_Objects.compare = function(a,b) {
	var v;
	var fields = Reflect.fields(a);
	v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.deflate = function(o,flattenArrays) {
	if(flattenArrays == null) {
		flattenArrays = true;
	}
	var f = null;
	f = function(v) {
		if((v instanceof Array) && v.__enum__ == null) {
			if(flattenArrays) {
				var a = v;
				return thx_Either.Right(thx_Arrays.reducei(a,function(map,value,i) {
					var _g = f(value);
					switch(_g[1]) {
					case 0:
						var v1 = _g[2];
						var key = "" + i;
						if(__map_reserved[key] != null) {
							map.setReserved(key,v1);
						} else {
							map.h[key] = v1;
						}
						break;
					case 1:
						var m = _g[2];
						var k = m.keys();
						while(k.hasNext()) {
							var k1 = k.next();
							var key1 = "" + i + "." + k1;
							var value1 = __map_reserved[k1] != null ? m.getReserved(k1) : m.h[k1];
							if(__map_reserved[key1] != null) {
								map.setReserved(key1,value1);
							} else {
								map.h[key1] = value1;
							}
						}
						break;
					}
					return map;
				},new haxe_ds_StringMap()));
			} else {
				return thx_Either.Left(v);
			}
		} else {
			var f1;
			if(Reflect.isObject(v)) {
				var o1 = v;
				f1 = null == (o1 == null ? null : js_Boot.getClass(o1));
			} else {
				f1 = false;
			}
			if(f1) {
				return thx_Either.Right(thx_Arrays.reduce(Reflect.fields(v),function(map1,key2) {
					var _g1 = Reflect.field(v,key2);
					var _g2 = f(_g1);
					switch(_g2[1]) {
					case 0:
						var v2 = _g2[2];
						var key3 = "" + key2;
						if(__map_reserved[key3] != null) {
							map1.setReserved(key3,v2);
						} else {
							map1.h[key3] = v2;
						}
						break;
					case 1:
						var m1 = _g2[2];
						var k2 = m1.keys();
						while(k2.hasNext()) {
							var k3 = k2.next();
							var key4 = "" + key2 + "." + k3;
							var value2 = __map_reserved[k3] != null ? m1.getReserved(k3) : m1.h[k3];
							if(__map_reserved[key4] != null) {
								map1.setReserved(key4,value2);
							} else {
								map1.h[key4] = value2;
							}
						}
						break;
					}
					return map1;
				},new haxe_ds_StringMap()));
			} else {
				return thx_Either.Left(v);
			}
		}
	};
	var f2 = f;
	var _g3 = f2(o);
	switch(_g3[1]) {
	case 0:
		var v3 = _g3[2];
		return v3;
	case 1:
		var m2 = _g3[2];
		return thx_Maps.toObject(m2);
	}
};
thx_Objects.inflate = function(o) {
	return thx_Arrays.reduce(Reflect.fields(o),function(acc,field) {
		return thx_Objects.setPath(acc,field,Reflect.field(o,field));
	},{ });
};
thx_Objects.combine = function(first,second) {
	return thx_Objects.shallowCombine(first,second);
};
thx_Objects.shallowCombine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g11 = Reflect.fields(second);
	while(_g2 < _g11.length) {
		var field1 = _g11[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.deepCombine = function(first,second) {
	var deflatedSecond = thx_Objects.deflate(second);
	var _g = 0;
	var _g1 = Reflect.fields(deflatedSecond);
	while(_g < _g1.length) {
		var keyPath = _g1[_g];
		++_g;
		thx_Objects.setPath(first,keyPath,Reflect.field(deflatedSecond,keyPath));
	}
	return first;
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var tmp1;
		if(Reflect.isObject(sv)) {
			var o = sv;
			tmp1 = null == (o == null ? null : js_Boot.getClass(o));
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(Reflect.isObject(dv)) {
				var o1 = dv;
				tmp = null == (o1 == null ? null : js_Boot.getClass(o1));
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	return "{" + Reflect.fields(o).map(function(key) {
		var v = Reflect.field(o,key);
		var s = typeof(v) == "string" ? thx_Strings.quote(v) : thx_Dynamics.string(v);
		return "" + key + " : " + s;
	}).join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_Objects.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		return this1;
	});
};
thx_Objects.hasPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array) ? value : null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(current == null) {
			return null;
		} else if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = (value instanceof Array) ? value : null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.parsePath = function(o,path,parse) {
	var this1 = thx_Options.toSuccessNel(thx_Objects.getPathOption(o,path),"Object does not contain path " + path);
	switch(this1[1]) {
	case 0:
		var a = this1[2];
		return thx_Either.Left(a);
	case 1:
		var b = this1[2];
		return parse(b);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	return thx_Options.getOrElse(thx_Objects.getPathOption(o,path),alt);
};
thx_Objects.setPath = function(o,path,val) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g1 = 0;
	var _g = paths.length - 1;
	while(_g1 < _g) {
		var i = _g1++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*" ? current.length : Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var p = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(p)) {
		var index1 = Std.parseInt(p);
		current[index1] = val;
	} else if(p == "*") {
		current.push(val);
	} else {
		current[p] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				var current = existing;
				var index = Std.parseInt(nextPath);
				return current[index];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	return o;
};
thx_Objects.normalizePath = function(path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	return path.replace(_this_r,".$1");
};
var thx_Options = function() { };
thx_Options.__name__ = ["thx","Options"];
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a[1]) {
	case 0:
		if(b[1] == 0) {
			var a1 = a[2];
			var b1 = b[2];
			if(null == eq) {
				eq = function(a2,b2) {
					return a2 == b2;
				};
			}
			return eq(a1,b1);
		} else {
			return false;
		}
		break;
	case 1:
		if(b[1] == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b ? haxe_ds_Option.None : haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return haxe_ds_Option.Some(callback(v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return callback(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone();
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(b,v);
	case 1:
		return b;
	}
};
thx_Options.foldLeftf = function(option,b,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(b(),v);
	case 1:
		return b();
	}
};
thx_Options.foldMap = function(option,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Options.foldLeft(thx_Options.map(option,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Options.filter = function(option,f) {
	if(option[1] == 0) {
		var v = option[2];
		if(f(v)) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return [v];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return alt;
	}
};
thx_Options.getOrThrow = function(option,err,posInfo) {
	if(null == err) {
		err = new thx_Error("Could not extract value from option",null,posInfo);
	}
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		throw err;
		break;
	}
};
thx_Options.getOrFail = function(option,msg,posInfo) {
	return thx_Options.getOrThrow(option,new thx_Error(msg,null,posInfo),{ fileName : "Options.hx", lineNumber : 199, className : "thx.Options", methodName : "getOrFail"});
};
thx_Options.orElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		return option;
	case 1:
		return alt;
	}
};
thx_Options.all = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx__$Validation_Validation_$Impl_$.map(f(v),function(v1) {
			return haxe_ds_Option.Some(v1);
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error[1]) {
	case 0:
		var e = error[2];
		return thx_Either.Left(e);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error[1]) {
	case 0:
		var e = error[2];
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toRight = function(opt,left) {
	switch(opt[1]) {
	case 0:
		var r = opt[2];
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left);
	}
};
thx_Options.toLeft = function(opt,right) {
	switch(opt[1]) {
	case 0:
		var l = opt[2];
		return thx_Either.Left(l);
	case 1:
		return thx_Either.Right(right);
	}
};
thx_Options.each = function(o,f) {
	switch(o[1]) {
	case 0:
		var v = o[2];
		f(v);
		return o;
	case 1:
		return o;
	}
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
thx_Options.combine = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine2 = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine3 = function(a,b,c) {
	var f = thx__$Tuple_Tuple3_$Impl_$.of;
	return thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f(a1,b1,c1);
		};
	}))));
};
thx_Options.combine4 = function(a,b,c,d) {
	var f = thx__$Tuple_Tuple4_$Impl_$.of;
	var f1 = function(a1,b1,c1) {
		return function(d1) {
			return f(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f1(a2,b2,c2);
		};
	})))));
};
thx_Options.combine5 = function(a,b,c,d,e) {
	var f = thx__$Tuple_Tuple5_$Impl_$.of;
	var f1 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f(a1,b1,c1,d1,e1);
		};
	};
	var f2 = function(a2,b2,c2) {
		return function(d2) {
			return f1(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f2(a3,b3,c3);
		};
	}))))));
};
thx_Options.combine6 = function(a,b,c,d,e,f) {
	var f1 = thx__$Tuple_Tuple6_$Impl_$.of;
	var f2 = function(a1,b1,c1,d1,e1) {
		return function(f0) {
			return f1(a1,b1,c1,d1,e1,f0);
		};
	};
	var f3 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f2(a2,b2,c2,d2,e2);
		};
	};
	var f4 = function(a3,b3,c3) {
		return function(d3) {
			return f3(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(f,thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f4(a4,b4,c4);
		};
	})))))));
};
thx_Options.spread2 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1);
	});
};
thx_Options.spread = function(v,f) {
	var f1 = f;
	return thx_Options.map(v,function(t) {
		return f1(t._0,t._1);
	});
};
thx_Options.spread3 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2);
	});
};
thx_Options.spread4 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3);
	});
};
thx_Options.spread5 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_Options.spread6 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_Orderings = function() { };
thx_Orderings.__name__ = ["thx","Orderings"];
thx_Orderings.negate = function(o) {
	switch(o[1]) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx__$OrderedMap_OrderedMap_$Impl_$ = {};
thx__$OrderedMap_OrderedMap_$Impl_$.__name__ = ["thx","_OrderedMap","OrderedMap_Impl_"];
thx__$OrderedMap_OrderedMap_$Impl_$.createString = function() {
	var this1 = new thx_StringOrderedMap();
	return this1;
};
thx__$OrderedMap_OrderedMap_$Impl_$.createInt = function() {
	var this1 = new thx_IntOrderedMap();
	return this1;
};
thx__$OrderedMap_OrderedMap_$Impl_$.createObject = function() {
	var this1 = new thx_ObjectOrderedMap();
	return this1;
};
thx__$OrderedMap_OrderedMap_$Impl_$.createEnum = function() {
	var this1 = new thx_EnumValueOrderedMap();
	return this1;
};
thx__$OrderedMap_OrderedMap_$Impl_$._new = function(inst) {
	var this1 = inst;
	return this1;
};
thx__$OrderedMap_OrderedMap_$Impl_$.getOption = function(this1,key) {
	var value = this1.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx__$OrderedMap_OrderedMap_$Impl_$.empty = function(this1) {
	var this2 = this1.empty();
	return this2;
};
thx__$OrderedMap_OrderedMap_$Impl_$.copyTo = function(this1,that) {
	var key = this1.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		that.set(key1,this1.get(key1));
	}
	return that;
};
thx__$OrderedMap_OrderedMap_$Impl_$.clone = function(this1) {
	var this2 = this1.empty();
	var that = this2;
	var key = this1.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		that.set(key1,this1.get(key1));
	}
	return that;
};
thx__$OrderedMap_OrderedMap_$Impl_$.get = function(this1,key) {
	return this1.get(key);
};
thx__$OrderedMap_OrderedMap_$Impl_$.at = function(this1,index) {
	return this1.at(index);
};
thx__$OrderedMap_OrderedMap_$Impl_$.arrayWrite = function(this1,k,v) {
	return this1.setValue(k,v);
};
thx__$OrderedMap_OrderedMap_$Impl_$.self = function(this1) {
	return this1;
};
var thx_OrderedMapImpl = function(map) {
	this.map = map;
	this.arr = [];
	this.length = 0;
};
thx_OrderedMapImpl.__name__ = ["thx","OrderedMapImpl"];
thx_OrderedMapImpl.__interfaces__ = [haxe_IMap];
thx_OrderedMapImpl.prototype = {
	map: null
	,arr: null
	,length: null
	,get: function(k) {
		return this.map.get(k);
	}
	,keyAt: function(index) {
		return this.arr[index];
	}
	,keyIndex: function(k) {
		var _g1 = 0;
		var _g = this.arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.arr[i] == k) {
				return i;
			}
		}
		return -1;
	}
	,valueIndex: function(v) {
		var _g1 = 0;
		var _g = this.arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.map.get(this.arr[i]) == v) {
				return i;
			}
		}
		return -1;
	}
	,at: function(index) {
		return this.map.get(this.keyAt(index));
	}
	,set: function(k,v) {
		if(!this.map.exists(k)) {
			this.arr.push(k);
			this.length++;
		}
		this.map.set(k,v);
	}
	,empty: function() {
		throw new thx_error_AbstractMethod({ fileName : "OrderedMap.hx", lineNumber : 142, className : "thx.OrderedMapImpl", methodName : "empty"});
	}
	,setValue: function(k,v) {
		this.set(k,v);
		return v;
	}
	,insert: function(index,k,v) {
		this.remove(k);
		this.arr.splice(index,0,k);
		this.map.set(k,v);
		this.length++;
	}
	,exists: function(k) {
		return this.map.exists(k);
	}
	,remove: function(k) {
		if(!this.map.exists(k)) {
			return false;
		}
		this.map.remove(k);
		HxOverrides.remove(this.arr,k);
		this.length--;
		return true;
	}
	,removeAt: function(index) {
		var key = this.arr[index];
		if(key == null) {
			return false;
		}
		this.map.remove(key);
		HxOverrides.remove(this.arr,key);
		this.length--;
		return true;
	}
	,keys: function() {
		return HxOverrides.iter(this.arr);
	}
	,iterator: function() {
		return HxOverrides.iter(this.toArray());
	}
	,tuples: function() {
		var _gthis = this;
		return this.arr.map(function(key) {
			var this1 = { _0 : key, _1 : _gthis.map.get(key)};
			return this1;
		});
	}
	,toString: function() {
		var s = "";
		s += "[";
		var it = this.keys();
		var k = it;
		while(k.hasNext()) {
			var k1 = k.next();
			s += Std.string(k1);
			s += " => ";
			s += Std.string(this.map.get(k1));
			if(it.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,toArray: function() {
		var values = [];
		var _g = 0;
		var _g1 = this.arr;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			values.push(this.map.get(k));
		}
		return values;
	}
	,__class__: thx_OrderedMapImpl
};
var thx_EnumValueOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_EnumValueMap());
};
thx_EnumValueOrderedMap.__name__ = ["thx","EnumValueOrderedMap"];
thx_EnumValueOrderedMap.__super__ = thx_OrderedMapImpl;
thx_EnumValueOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	empty: function() {
		return new thx_EnumValueOrderedMap();
	}
	,__class__: thx_EnumValueOrderedMap
});
var thx_IntOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_IntMap());
};
thx_IntOrderedMap.__name__ = ["thx","IntOrderedMap"];
thx_IntOrderedMap.__super__ = thx_OrderedMapImpl;
thx_IntOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	empty: function() {
		return new thx_IntOrderedMap();
	}
	,__class__: thx_IntOrderedMap
});
var thx_ObjectOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_ObjectMap());
};
thx_ObjectOrderedMap.__name__ = ["thx","ObjectOrderedMap"];
thx_ObjectOrderedMap.__super__ = thx_OrderedMapImpl;
thx_ObjectOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	empty: function() {
		return new thx_ObjectOrderedMap();
	}
	,__class__: thx_ObjectOrderedMap
});
var thx_StringOrderedMap = function() {
	thx_OrderedMapImpl.call(this,new haxe_ds_StringMap());
};
thx_StringOrderedMap.__name__ = ["thx","StringOrderedMap"];
thx_StringOrderedMap.fromArray = function(array,toKey,toVal) {
	var this1 = new thx_StringOrderedMap();
	return thx_Arrays.reduce(array,function(acc,curr) {
		acc.set(toKey(curr),toVal(curr));
		return acc;
	},this1);
};
thx_StringOrderedMap.fromValueArray = function(array,toKey) {
	return thx_StringOrderedMap.fromArray(array,toKey,function(val) {
		return val;
	});
};
thx_StringOrderedMap.fromTuples = function(array) {
	return thx_StringOrderedMap.fromArray(array,function(t) {
		return t._0;
	},function(t1) {
		return t1._1;
	});
};
thx_StringOrderedMap.__super__ = thx_OrderedMapImpl;
thx_StringOrderedMap.prototype = $extend(thx_OrderedMapImpl.prototype,{
	empty: function() {
		return new thx_StringOrderedMap();
	}
	,__class__: thx_StringOrderedMap
});
var thx__$OrderedSet_OrderedSet_$Impl_$ = {};
thx__$OrderedSet_OrderedSet_$Impl_$.__name__ = ["thx","_OrderedSet","OrderedSet_Impl_"];
thx__$OrderedSet_OrderedSet_$Impl_$.toOrderedSet = function(arr) {
	var this1 = [];
	var set = this1;
	var _g = 0;
	while(_g < arr.length) {
		var v = arr[_g];
		++_g;
		thx__$OrderedSet_OrderedSet_$Impl_$.push(set,v);
	}
	return set;
};
thx__$OrderedSet_OrderedSet_$Impl_$.arrayToOrderedSet = function(arr) {
	return thx__$OrderedSet_OrderedSet_$Impl_$.toOrderedSet(arr);
};
thx__$OrderedSet_OrderedSet_$Impl_$.create = function(arr) {
	if(null == arr) {
		var this1 = [];
		return this1;
	} else {
		return thx__$OrderedSet_OrderedSet_$Impl_$.toOrderedSet(arr);
	}
};
thx__$OrderedSet_OrderedSet_$Impl_$._new = function(arr) {
	var this1 = arr;
	return this1;
};
thx__$OrderedSet_OrderedSet_$Impl_$.add = function(this1,v) {
	if(thx__$OrderedSet_OrderedSet_$Impl_$.exists(this1,v)) {
		return false;
	} else {
		this1.push(v);
		return true;
	}
};
thx__$OrderedSet_OrderedSet_$Impl_$.copy = function(this1) {
	var this2 = this1.slice();
	return this2;
};
thx__$OrderedSet_OrderedSet_$Impl_$.difference = function(this1,set) {
	var result = this1.slice();
	var item = HxOverrides.iter(set);
	while(item.hasNext()) {
		var item1 = item.next();
		HxOverrides.remove(result,item1);
	}
	var this2 = result;
	return this2;
};
thx__$OrderedSet_OrderedSet_$Impl_$.exists = function(this1,v) {
	var _g = 0;
	while(_g < this1.length) {
		var t = this1[_g];
		++_g;
		if(t == v) {
			return true;
		}
	}
	return false;
};
thx__$OrderedSet_OrderedSet_$Impl_$.get = function(this1,index) {
	return this1[index];
};
thx__$OrderedSet_OrderedSet_$Impl_$.intersection = function(this1,set) {
	var result = [];
	var _g = 0;
	while(_g < this1.length) {
		var item = this1[_g];
		++_g;
		if(thx__$OrderedSet_OrderedSet_$Impl_$.exists(set,item)) {
			result.push(item);
		}
	}
	var this2 = result;
	return this2;
};
thx__$OrderedSet_OrderedSet_$Impl_$.push = function(this1,v) {
	thx__$OrderedSet_OrderedSet_$Impl_$.add(this1,v);
};
thx__$OrderedSet_OrderedSet_$Impl_$.pushMany = function(this1,values) {
	var value = $iterator(values)();
	while(value.hasNext()) {
		var value1 = value.next();
		thx__$OrderedSet_OrderedSet_$Impl_$.push(this1,value1);
	}
};
thx__$OrderedSet_OrderedSet_$Impl_$.slice = function(this1,pos,end) {
	var this2 = this1.slice(pos,end);
	return this2;
};
thx__$OrderedSet_OrderedSet_$Impl_$.splice = function(this1,pos,len) {
	var this2 = this1.splice(pos,len);
	return this2;
};
thx__$OrderedSet_OrderedSet_$Impl_$.union = function(this1,set) {
	return thx__$OrderedSet_OrderedSet_$Impl_$.toOrderedSet(this1.concat(thx__$OrderedSet_OrderedSet_$Impl_$.toArray(set)));
};
thx__$OrderedSet_OrderedSet_$Impl_$.unionArray = function(this1,set) {
	return thx__$OrderedSet_OrderedSet_$Impl_$.toOrderedSet(this1.concat(set));
};
thx__$OrderedSet_OrderedSet_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$OrderedSet_OrderedSet_$Impl_$.setToArray = function(this1) {
	return thx__$OrderedSet_OrderedSet_$Impl_$.toArray(this1);
};
thx__$OrderedSet_OrderedSet_$Impl_$.toString = function(this1) {
	return "{" + this1.join(", ") + "}";
};
var thx__$Path_Path_$Impl_$ = {};
thx__$Path_Path_$Impl_$.__name__ = ["thx","_Path","Path_Impl_"];
thx__$Path_Path_$Impl_$.isValidNix = function(path) {
	return thx_Arrays.any(path.slice(2),function(_) {
		return _.indexOf("/") < 0;
	});
};
thx__$Path_Path_$Impl_$.isValidWin32 = function(path) {
	return thx_Arrays.any(path.slice(2),function(_) {
		return !new EReg("[<>:/\\|?*\"]","g").match(_);
	});
};
thx__$Path_Path_$Impl_$.normalizeNix = function(path,replacement) {
	if(replacement == null) {
		replacement = "_";
	}
	return thx__$Path_Path_$Impl_$.map(path,function(_) {
		return StringTools.replace(_,"/",replacement);
	});
};
thx__$Path_Path_$Impl_$.normalizeWin32 = function(path,replacement) {
	if(replacement == null) {
		replacement = "_";
	}
	return thx__$Path_Path_$Impl_$.map(path,function(_) {
		var _this_r = new RegExp("[<>:\"/\\|?*]","g".split("u").join(""));
		return _.replace(_this_r,replacement);
	});
};
thx__$Path_Path_$Impl_$.fromString = function(s) {
	if(s.indexOf("\\") >= 0) {
		var re = new EReg("^([a-z]+[:][\\\\])","i");
		if(re.match(s)) {
			var root = re.matched(1);
			var this1 = ["\\",root].concat(thx__$Path_Path_$Impl_$.resolve(re.matchedRight().split("\\"),root != ""));
			return this1;
		} else {
			var this2 = ["\\",""].concat(thx__$Path_Path_$Impl_$.resolve(s.split("\\"),false));
			return this2;
		}
	} else {
		var root1 = StringTools.startsWith(s,"/") ? "/" : "";
		var this3 = ["/",root1].concat(thx__$Path_Path_$Impl_$.resolve(s.split("/"),root1 != ""));
		return this3;
	}
};
thx__$Path_Path_$Impl_$.resolve = function(path,isAbsolute) {
	path = thx_ArrayStrings.compact(path).filter(function(s) {
		return s != ".";
	});
	return thx_Arrays.reduce(path,function(acc,s1) {
		if(s1 == ".." && acc.length > 0 && acc[acc.length - 1] != "..") {
			return acc.slice(0,acc.length - 1);
		} else if(s1 == ".." && isAbsolute) {
			return acc;
		} else {
			return acc.concat([s1]);
		}
	},[]);
};
thx__$Path_Path_$Impl_$.create = function(root,path,sep) {
	var this1 = [sep,root].concat(thx__$Path_Path_$Impl_$.resolve(path,root != ""));
	return this1;
};
thx__$Path_Path_$Impl_$.raw = function(parts) {
	var this1 = parts;
	return this1;
};
thx__$Path_Path_$Impl_$._new = function(parts) {
	var this1 = parts;
	return this1;
};
thx__$Path_Path_$Impl_$.asAbsolute = function(this1,root) {
	if(root == null) {
		root = "C:\\";
	}
	var root1 = this1[0] == "/" ? "/" : root;
	var path = this1.slice(2);
	var this2 = [this1[0],root1].concat(thx__$Path_Path_$Impl_$.resolve(path,root1 != ""));
	return this2;
};
thx__$Path_Path_$Impl_$.asRelative = function(this1) {
	var path = this1.slice(2);
	var this2 = [this1[0],""].concat(thx__$Path_Path_$Impl_$.resolve(path,false));
	return this2;
};
thx__$Path_Path_$Impl_$.normalize = function(this1) {
	if(this1[0] == "\\") {
		return thx__$Path_Path_$Impl_$.normalizeWin32(this1);
	} else {
		return thx__$Path_Path_$Impl_$.normalizeNix(this1);
	}
};
thx__$Path_Path_$Impl_$.isAbsolute = function(this1) {
	return this1[1] != "";
};
thx__$Path_Path_$Impl_$.isRelative = function(this1) {
	return this1[1] == "";
};
thx__$Path_Path_$Impl_$.isRoot = function(this1) {
	if(this1[1] != "") {
		return this1.slice(2).length == 0;
	} else {
		return false;
	}
};
thx__$Path_Path_$Impl_$.isNix = function(this1) {
	return this1[0] == "/";
};
thx__$Path_Path_$Impl_$.isWin32 = function(this1) {
	return this1[0] == "\\";
};
thx__$Path_Path_$Impl_$.isValid = function(this1) {
	if(this1[0] == "\\") {
		return thx__$Path_Path_$Impl_$.isValidWin32(this1);
	} else {
		return thx__$Path_Path_$Impl_$.isValidNix(this1);
	}
};
thx__$Path_Path_$Impl_$.noext = function(this1) {
	var e = thx__$Path_Path_$Impl_$.ext(this1);
	if(e == "") {
		return thx__$Path_Path_$Impl_$.base(this1);
	} else {
		return thx__$Path_Path_$Impl_$.base(this1,"." + e);
	}
};
thx__$Path_Path_$Impl_$.base = function(this1,end) {
	if(this1.slice(2).length == 0) {
		return "";
	}
	var array = this1.slice(2);
	var name = array[array.length - 1];
	if(null != end && StringTools.endsWith(name,end)) {
		return name.substring(0,name.length - end.length);
	}
	return name;
};
thx__$Path_Path_$Impl_$.ext = function(this1) {
	if(this1.slice(2).length == 0) {
		return "";
	}
	var array = this1.slice(2);
	return thx_Strings.afterLast(array[array.length - 1],".");
};
thx__$Path_Path_$Impl_$.dir = function(this1) {
	return thx__$Path_Path_$Impl_$.toString(thx__$Path_Path_$Impl_$.up(this1));
};
thx__$Path_Path_$Impl_$.map = function(this1,handler) {
	var root = this1[1];
	var path = this1.slice(2).map(handler);
	var this2 = [this1[0],root].concat(thx__$Path_Path_$Impl_$.resolve(path,root != ""));
	return this2;
};
thx__$Path_Path_$Impl_$.hierarchy = function(this1) {
	var base = [];
	return thx_Arrays.reduce(this1.slice(2),function(acc,cur) {
		base.push(cur);
		var root = this1[1];
		var path = base.slice();
		var this2 = [this1[0],root].concat(thx__$Path_Path_$Impl_$.resolve(path,root != ""));
		acc.push(this2);
		return acc;
	},[]);
};
thx__$Path_Path_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter(thx__$Path_Path_$Impl_$.hierarchy(this1));
};
thx__$Path_Path_$Impl_$.pathTo = function(this1,destination) {
	var _g = destination[1] != "";
	var _g1 = this1[1] != "";
	switch(_g1) {
	case false:
		switch(_g) {
		case false:
			return thx__$Path_Path_$Impl_$.join(this1,destination);
		case true:
			return destination;
		}
		break;
	case true:
		switch(_g) {
		case false:
			return thx__$Path_Path_$Impl_$.join(this1,destination);
		case true:
			if(this1[1] == destination[1]) {
				var opath = destination.slice(2);
				var common = thx_Arrays.commonsFromStart(this1.slice(2),opath);
				var path = this1.slice(2).slice(0,this1.slice(2).length - common.length).map(function(_) {
					return "..";
				}).concat(opath.slice(common.length));
				var this2 = [this1[0],""].concat(thx__$Path_Path_$Impl_$.resolve(path,false));
				return this2;
			} else {
				return destination;
			}
			break;
		}
		break;
	}
};
thx__$Path_Path_$Impl_$.sibling = function(this1,path) {
	return thx__$Path_Path_$Impl_$.join(thx__$Path_Path_$Impl_$.up(this1),path);
};
thx__$Path_Path_$Impl_$.toNix = function(this1) {
	if(this1[0] == "/") {
		return this1;
	} else {
		var this2 = ["/",this1[1] != "" ? "/" : ""].concat(this1.slice(2));
		return this2;
	}
};
thx__$Path_Path_$Impl_$.toWin32 = function(this1,root) {
	if(root == null) {
		root = "C:\\";
	}
	if(this1[0] == "\\") {
		return this1;
	} else {
		var this2 = ["\\",this1[1] != "" ? root : ""].concat(this1.slice(2));
		return this2;
	}
};
thx__$Path_Path_$Impl_$.up = function(this1,n) {
	if(n == null) {
		n = 1;
	}
	if(thx__$Path_Path_$Impl_$.isRoot(this1)) {
		return this1;
	} else {
		var this2 = [this1[0],this1[1]].concat(this1.slice(2,this1.length - n));
		return this2;
	}
};
thx__$Path_Path_$Impl_$.withExt = function(this1,newextension) {
	var oext = thx__$Path_Path_$Impl_$.ext(this1);
	if(oext.length > 0) {
		oext = "." + oext;
	}
	if(newextension.substring(0,1) == ".") {
		newextension = newextension.substring(1);
	}
	return thx__$Path_Path_$Impl_$.sibling(this1,thx__$Path_Path_$Impl_$.fromString("" + thx__$Path_Path_$Impl_$.base(this1,oext) + "." + newextension));
};
thx__$Path_Path_$Impl_$.join = function(this1,other) {
	if(other[1] != "") {
		return other;
	}
	var root = this1[1];
	var path = this1.slice(2).concat(other.slice(2));
	var this2 = [this1[0],root].concat(thx__$Path_Path_$Impl_$.resolve(path,root != ""));
	return this2;
};
thx__$Path_Path_$Impl_$.toString = function(this1) {
	if(this1[1] == "" && this1.slice(2).length == 0) {
		return ".";
	} else {
		return this1[1] + this1.slice(2).join(this1[0]);
	}
};
thx__$Path_Path_$Impl_$.get_path = function(this1) {
	return this1.slice(2);
};
thx__$Path_Path_$Impl_$.get_root = function(this1) {
	return this1[1];
};
thx__$Path_Path_$Impl_$.get_sep = function(this1) {
	return this1[0];
};
thx__$Path_Path_$Impl_$.get_self = function(this1) {
	return this1;
};
var thx__$QueryString_QueryString_$Impl_$ = {};
thx__$QueryString_QueryString_$Impl_$.__name__ = ["thx","_QueryString","QueryString_Impl_"];
thx__$QueryString_QueryString_$Impl_$.encodeURIComponent = function(s) {
	return StringTools.replace(encodeURIComponent(s),"%20","+");
};
thx__$QueryString_QueryString_$Impl_$.decodeURIComponent = function(s) {
	return StringTools.replace(decodeURIComponent(s.split("+").join(" ")),"+"," ");
};
thx__$QueryString_QueryString_$Impl_$.empty = function() {
	return new haxe_ds_StringMap();
};
thx__$QueryString_QueryString_$Impl_$.parseWithSymbols = function(s,separator,assignment,decodeURIComponent) {
	if(null == s) {
		return new haxe_ds_StringMap();
	} else {
		if(null == decodeURIComponent) {
			decodeURIComponent = thx__$QueryString_QueryString_$Impl_$.decodeURIComponent;
		}
		if(StringTools.startsWith(s,"?") || StringTools.startsWith(s,"#")) {
			s = s.substring(1);
		}
		s = StringTools.ltrim(s);
		return thx_Arrays.reduce(s.split(separator),function(qs,v) {
			var parts = v.split(assignment);
			if(parts[0] != "") {
				thx__$QueryString_QueryString_$Impl_$.add(qs,decodeURIComponent(parts[0]),null == parts[1] ? null : decodeURIComponent(parts[1]));
			}
			return qs;
		},new haxe_ds_StringMap());
	}
};
thx__$QueryString_QueryString_$Impl_$.parse = function(s) {
	return thx__$QueryString_QueryString_$Impl_$.parseWithSymbols(s,thx__$QueryString_QueryString_$Impl_$.separator,thx__$QueryString_QueryString_$Impl_$.assignment,thx__$QueryString_QueryString_$Impl_$.decodeURIComponent);
};
thx__$QueryString_QueryString_$Impl_$.fromObject = function(o) {
	var qs = new haxe_ds_StringMap();
	if(!Reflect.isObject(o)) {
		throw new js__$Boot_HaxeError("unable to convert " + Std.string(o) + " to QueryString");
	}
	thx_Objects.tuples(o).map(function(t) {
		if((t._1 instanceof Array) && t._1.__enum__ == null) {
			var t1 = t._0;
			var tmp = t._1.map(function(_) {
				return "" + _;
			});
			thx__$QueryString_QueryString_$Impl_$.setMany(qs,t1,tmp);
		} else {
			thx__$QueryString_QueryString_$Impl_$.set(qs,t._0,"" + Std.string(t._1));
		}
	});
	return qs;
};
thx__$QueryString_QueryString_$Impl_$.toObject = function(this1) {
	return thx_Iterators.reduce(this1.keys(),function(o,key) {
		var v = __map_reserved[key] != null ? this1.getReserved(key) : this1.h[key];
		if(v.length == 0) {
			o[key] = null;
		} else if(v.length == 1) {
			o[key] = v[0];
		} else {
			o[key] = v;
		}
		return o;
	},{ });
};
thx__$QueryString_QueryString_$Impl_$.isEmpty = function(this1) {
	return !new haxe_ds__$StringMap_StringMapIterator(this1,this1.arrayKeys()).hasNext();
};
thx__$QueryString_QueryString_$Impl_$.isEmptyOrMono = function(this1) {
	var arr = thx_Iterators.toArray(this1.keys());
	if(arr.length == 0) {
		return true;
	}
	if(arr.length != 1) {
		return false;
	}
	var key = arr[0];
	return (__map_reserved[key] != null ? this1.getReserved(key) : this1.h[key]).length == 0;
};
thx__$QueryString_QueryString_$Impl_$.exist = function(this1,name) {
	if(__map_reserved[name] != null) {
		return this1.existsReserved(name);
	} else {
		return this1.h.hasOwnProperty(name);
	}
};
thx__$QueryString_QueryString_$Impl_$.remove = function(this1,name) {
	return this1.remove(name);
};
thx__$QueryString_QueryString_$Impl_$.removeValue = function(this1,name,value) {
	if(!(__map_reserved[name] != null ? this1.existsReserved(name) : this1.h.hasOwnProperty(name))) {
		return false;
	}
	return HxOverrides.remove(__map_reserved[name] != null ? this1.getReserved(name) : this1.h[name],value);
};
thx__$QueryString_QueryString_$Impl_$.get = function(this1,name) {
	return __map_reserved[name] != null ? this1.getReserved(name) : this1.h[name];
};
thx__$QueryString_QueryString_$Impl_$.set = function(this1,name,value) {
	var value1 = [value];
	if(__map_reserved[name] != null) {
		this1.setReserved(name,value1);
	} else {
		this1.h[name] = value1;
	}
	return this1;
};
thx__$QueryString_QueryString_$Impl_$.add = function(this1,name,value) {
	var arr = __map_reserved[name] != null ? this1.getReserved(name) : this1.h[name];
	if(null == arr) {
		if(value == null) {
			arr = [];
		} else {
			arr = [value];
		}
		if(__map_reserved[name] != null) {
			this1.setReserved(name,arr);
		} else {
			this1.h[name] = arr;
		}
	} else if(null != value) {
		arr.push(value);
	}
	return this1;
};
thx__$QueryString_QueryString_$Impl_$.clone = function(this1) {
	if(null == this1) {
		return null;
	}
	var map = new haxe_ds_StringMap();
	var key = this1.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var value = (__map_reserved[key1] != null ? this1.getReserved(key1) : this1.h[key1]).slice();
		if(__map_reserved[key1] != null) {
			map.setReserved(key1,value);
		} else {
			map.h[key1] = value;
		}
	}
	return map;
};
thx__$QueryString_QueryString_$Impl_$.setMany = function(this1,name,values) {
	if(__map_reserved[name] != null) {
		this1.setReserved(name,values);
	} else {
		this1.h[name] = values;
	}
	return this1;
};
thx__$QueryString_QueryString_$Impl_$.toStringWithSymbols = function(this1,separator,assignment,encodeURIComponent) {
	if(null == this1) {
		return null;
	}
	if(null == encodeURIComponent) {
		encodeURIComponent = thx__$QueryString_QueryString_$Impl_$.encodeURIComponent;
	}
	var array = thx_Iterators.map(this1.keys(),function(k) {
		var vs = __map_reserved[k] != null ? this1.getReserved(k) : this1.h[k];
		var ek = encodeURIComponent(k);
		if(vs.length == 0) {
			return [ek];
		} else {
			return vs.map(function(_) {
				return "" + ek + assignment + encodeURIComponent(_);
			});
		}
	});
	return Array.prototype.concat.apply([],array).join(separator);
};
thx__$QueryString_QueryString_$Impl_$.equals = function(this1,other) {
	var tuples = thx_Maps.tuples(other);
	var key = this1.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var key2 = [key1];
		var t = thx_Arrays.find(tuples,(function(key3) {
			return function(item) {
				return item._0 == key3[0];
			};
		})(key2));
		if(null == t) {
			return false;
		}
		if(!thx_Arrays.equals(__map_reserved[key2[0]] != null ? this1.getReserved(key2[0]) : this1.h[key2[0]],t._1)) {
			return false;
		}
		HxOverrides.remove(tuples,t);
	}
	return tuples.length == 0;
};
thx__$QueryString_QueryString_$Impl_$.toString = function(this1) {
	return thx__$QueryString_QueryString_$Impl_$.toStringWithSymbols(this1,thx__$QueryString_QueryString_$Impl_$.separator,thx__$QueryString_QueryString_$Impl_$.assignment,thx__$QueryString_QueryString_$Impl_$.encodeURIComponent);
};
var thx__$QueryString_QueryStringValue_$Impl_$ = {};
thx__$QueryString_QueryStringValue_$Impl_$.__name__ = ["thx","_QueryString","QueryStringValue_Impl_"];
thx__$QueryString_QueryStringValue_$Impl_$.toString = function(this1) {
	if(this1 == null || this1.length == 0) {
		return null;
	} else {
		return this1.join(",");
	}
};
var thx__$Rational_Rational_$Impl_$ = {};
thx__$Rational_Rational_$Impl_$.__name__ = ["thx","_Rational","Rational_Impl_"];
thx__$Rational_Rational_$Impl_$.fromString = function(s) {
	var parts = s.split("/").map(StringTools.trim);
	if(parts.length > 2) {
		throw new thx_Error("string \"" + s + "\" cannot be parsed to a Rational",null,{ fileName : "Rational.hx", lineNumber : 12, className : "thx._Rational.Rational_Impl_", methodName : "fromString"});
	}
	if(parts.length == 1) {
		return thx__$Rational_Rational_$Impl_$.create(thx_bigint_Bigs.parseBase(parts[0],10),thx__$BigInt_BigInt_$Impl_$.one);
	}
	return thx__$Rational_Rational_$Impl_$.create(thx_bigint_Bigs.parseBase(parts[0],10),thx_bigint_Bigs.parseBase(parts[1],10));
};
thx__$Rational_Rational_$Impl_$.fromBigInt = function(i) {
	return thx__$Rational_Rational_$Impl_$.create(i,thx__$BigInt_BigInt_$Impl_$.one);
};
thx__$Rational_Rational_$Impl_$.fromInt = function(i) {
	return thx__$Rational_Rational_$Impl_$.create(thx_bigint_Bigs.fromInt(i),thx__$BigInt_BigInt_$Impl_$.one);
};
thx__$Rational_Rational_$Impl_$.create = function(num,den) {
	if(thx__$BigInt_BigInt_$Impl_$.equals(den,thx_bigint_Bigs.fromInt(0))) {
		throw new thx_Error("division by zero",null,{ fileName : "Rational.hx", lineNumber : 26, className : "thx._Rational.Rational_Impl_", methodName : "create"});
	}
	var g = thx_Ints.gcd(num.toInt(),den.toInt());
	num = thx_bigint_Bigs.fromInt(num.divide(thx_bigint_Bigs.fromInt(g)).toInt() | 0);
	den = thx_bigint_Bigs.fromInt(den.divide(thx_bigint_Bigs.fromInt(g)).toInt() | 0);
	if(thx__$BigInt_BigInt_$Impl_$.less(den,thx_bigint_Bigs.fromInt(0))) {
		num = num.negate();
		den = den.negate();
	}
	if(thx__$BigInt_BigInt_$Impl_$.equals(num,thx_bigint_Bigs.fromInt(0))) {
		den = thx_bigint_Bigs.fromInt(1);
	}
	var num1 = num.toInt();
	var den1 = den.toInt();
	var this1 = { num : thx_bigint_Bigs.fromInt(num1), den : thx_bigint_Bigs.fromInt(den1)};
	return this1;
};
thx__$Rational_Rational_$Impl_$._new = function(num,den) {
	var this1 = { num : thx_bigint_Bigs.fromInt(num), den : thx_bigint_Bigs.fromInt(den)};
	return this1;
};
thx__$Rational_Rational_$Impl_$.abs = function(this1) {
	var num = this1.num.abs().toInt();
	var den = this1.den.toInt();
	var this2 = { num : thx_bigint_Bigs.fromInt(num), den : thx_bigint_Bigs.fromInt(den)};
	return this2;
};
thx__$Rational_Rational_$Impl_$.negate = function(this1) {
	var num = this1.num.negate().toInt();
	var den = this1.den.toInt();
	var this2 = { num : thx_bigint_Bigs.fromInt(num), den : thx_bigint_Bigs.fromInt(den)};
	return this2;
};
thx__$Rational_Rational_$Impl_$.add = function(this1,that) {
	if(thx__$Rational_Rational_$Impl_$.compareTo(this1,thx__$Rational_Rational_$Impl_$.zero) == 0) {
		return that;
	}
	if(thx__$Rational_Rational_$Impl_$.compareTo(that,thx__$Rational_Rational_$Impl_$.zero) == 0) {
		return this1;
	}
	var f = thx_Ints.gcd(this1.num.toInt(),that.num.toInt());
	var g = thx_Ints.gcd(this1.den.toInt(),that.den.toInt());
	var s = thx__$Rational_Rational_$Impl_$.create(thx_bigint_Bigs.fromInt((this1.num.divide(thx_bigint_Bigs.fromInt(f)).toInt() | 0) * (that.den.divide(thx_bigint_Bigs.fromInt(g)).toInt() | 0) + (that.num.divide(thx_bigint_Bigs.fromInt(f)).toInt() | 0) * (this1.den.divide(thx_bigint_Bigs.fromInt(g)).toInt() | 0)),thx_bigint_Bigs.fromInt(thx_Ints.lcm(this1.den.toInt(),that.den.toInt())));
	s.num = s.num.multiply(thx_bigint_Bigs.fromInt(f));
	return s;
};
thx__$Rational_Rational_$Impl_$.subtract = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.add(this1,thx__$Rational_Rational_$Impl_$.negate(that));
};
thx__$Rational_Rational_$Impl_$.multiply = function(this1,that) {
	var c = thx__$Rational_Rational_$Impl_$.create(this1.num,that.den);
	var d = thx__$Rational_Rational_$Impl_$.create(that.num,this1.den);
	return thx__$Rational_Rational_$Impl_$.create(c.num.multiply(d.num),c.den.multiply(d.den));
};
thx__$Rational_Rational_$Impl_$.divide = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.multiply(this1,thx__$Rational_Rational_$Impl_$.reciprocal(that));
};
thx__$Rational_Rational_$Impl_$.reciprocal = function(this1) {
	return thx__$Rational_Rational_$Impl_$.create(this1.den,this1.num);
};
thx__$Rational_Rational_$Impl_$.isZero = function(this1) {
	return this1.num.isZero();
};
thx__$Rational_Rational_$Impl_$.isNegative = function(this1) {
	return this1.num.sign;
};
thx__$Rational_Rational_$Impl_$.compareTo = function(this1,that) {
	var lhs = this1.num.multiply(that.den);
	var rhs = this1.den.multiply(that.num);
	return lhs.compareTo(rhs);
};
thx__$Rational_Rational_$Impl_$.greaterThan = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) > 0;
};
thx__$Rational_Rational_$Impl_$.greater = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) > 0;
};
thx__$Rational_Rational_$Impl_$.greaterEqualsTo = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) >= 0;
};
thx__$Rational_Rational_$Impl_$.greaterEquals = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) >= 0;
};
thx__$Rational_Rational_$Impl_$.lessThan = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) < 0;
};
thx__$Rational_Rational_$Impl_$.less = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) < 0;
};
thx__$Rational_Rational_$Impl_$.lessEqualsTo = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) <= 0;
};
thx__$Rational_Rational_$Impl_$.lessEquals = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) <= 0;
};
thx__$Rational_Rational_$Impl_$.equalsTo = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) == 0;
};
thx__$Rational_Rational_$Impl_$.equals = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) == 0;
};
thx__$Rational_Rational_$Impl_$.notEqualsTo = function(this1,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(this1,that) != 0;
};
thx__$Rational_Rational_$Impl_$.notEquals = function(self,that) {
	return thx__$Rational_Rational_$Impl_$.compareTo(self,that) != 0;
};
thx__$Rational_Rational_$Impl_$.toFloat = function(this1) {
	return this1.num.toFloat() / this1.den.toFloat();
};
thx__$Rational_Rational_$Impl_$.toDecimal = function(this1,extraScale) {
	if(extraScale == null) {
		extraScale = 0;
	}
	return thx__$Decimal_Decimal_$Impl_$.fromBigInt(this1.num).divide(thx__$Decimal_Decimal_$Impl_$.fromBigInt(this1.den));
};
thx__$Rational_Rational_$Impl_$.toString = function(this1) {
	if(thx__$BigInt_BigInt_$Impl_$.equals(this1.den,thx_bigint_Bigs.fromInt(1))) {
		return "" + this1.num.toString();
	} else {
		return "" + this1.num.toString() + "/" + this1.den.toString();
	}
};
thx__$Rational_Rational_$Impl_$.get_num = function(this1) {
	return this1.num;
};
thx__$Rational_Rational_$Impl_$.get_den = function(this1) {
	return this1.den;
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = ["thx","_ReadonlyArray","ReadonlyArray_Impl_"];
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get_length = function(this1) {
	return this1.length;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,i) {
	return this1[i];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reduce = function(this1,arr,f,initial) {
	var _g = 0;
	while(_g < arr.length) {
		var v = arr[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reducei = function(array,f,initial) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "ReadonlyArray.hx", lineNumber : 94, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.shift = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[0];
	var array = this1.slice(0,0).concat(this1.slice(1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.push = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.pop = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter(this1);
};
var thx__$Result_Result_$Impl_$ = {};
thx__$Result_Result_$Impl_$.__name__ = ["thx","_Result","Result_Impl_"];
thx__$Result_Result_$Impl_$.success = function(value) {
	return thx_Either.Right(value);
};
thx__$Result_Result_$Impl_$.failure = function(error) {
	return thx_Either.Left(error);
};
thx__$Result_Result_$Impl_$.optionValue = function(this1) {
	if(this1[1] == 1) {
		var v = this1[2];
		return haxe_ds_Option.Some(v);
	} else {
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.optionError = function(this1) {
	if(this1[1] == 0) {
		var v = this1[2];
		return haxe_ds_Option.Some(v);
	} else {
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.value = function(this1) {
	if(this1[1] == 1) {
		var v = this1[2];
		return v;
	} else {
		return null;
	}
};
thx__$Result_Result_$Impl_$.error = function(this1) {
	if(this1[1] == 0) {
		var v = this1[2];
		return v;
	} else {
		return null;
	}
};
thx__$Result_Result_$Impl_$.get_isSuccess = function(this1) {
	if(this1[1] == 1) {
		return true;
	} else {
		return false;
	}
};
thx__$Result_Result_$Impl_$.get_isFailure = function(this1) {
	if(this1[1] == 0) {
		return true;
	} else {
		return false;
	}
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
thx__$Semigroup_Semigroup_$Impl_$.__name__ = ["thx","_Semigroup","Semigroup_Impl_"];
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
thx__$Set_Set_$Impl_$.__name__ = ["thx","_Set","Set_Impl_"];
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var this1 = map;
	var set = this1;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	var this1 = map;
	return this1;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		inst.set(k1,true);
	}
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	var inst = Type.createInstance(this1 == null ? null : js_Boot.getClass(this1),[]);
	var this2 = inst;
	return this2;
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.remove(item1);
	}
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},thx__$Set_Set_$Impl_$.empty(this1));
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		if(set.exists(item1)) {
			result.set(item1,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var value = $iterator(values)();
	while(value.hasNext()) {
		var value1 = value.next();
		this1.set(value1,true);
	}
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var v = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(v.hasNext()) {
		var v1 = v.next();
		acc = handler(acc,v1);
	}
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var i = this1.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		++l;
	}
	return l;
};
var thx__$Time_Time_$Impl_$ = {};
thx__$Time_Time_$Impl_$.__name__ = ["thx","_Time","Time_Impl_"];
thx__$Time_Time_$Impl_$.fromDays = function(days) {
	return thx__$Time_Time_$Impl_$.create(24 * days,0,0,0);
};
thx__$Time_Time_$Impl_$.fromHours = function(hours) {
	return thx__$Time_Time_$Impl_$.create(hours,0,0,0);
};
thx__$Time_Time_$Impl_$.fromMinutes = function(minutes) {
	return thx__$Time_Time_$Impl_$.create(0,minutes,0,0);
};
thx__$Time_Time_$Impl_$.fromSeconds = function(seconds) {
	return thx__$Time_Time_$Impl_$.create(0,0,seconds,0);
};
thx__$Time_Time_$Impl_$.fromMilliseconds = function(milliseconds) {
	return thx__$Time_Time_$Impl_$.create(0,0,0,milliseconds);
};
thx__$Time_Time_$Impl_$.timeToTicks = function(hours,minutes,seconds) {
	var x = hours * 3600;
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	var a = this1;
	var x1 = minutes * 60;
	var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
	var b = this2;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var a1 = this3;
	var this4 = new haxe__$Int64__$_$_$Int64(seconds >> 31,seconds);
	var b1 = this4;
	var high1 = a1.high + b1.high | 0;
	var low1 = a1.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a1.low) < 0) {
		var ret1 = high1++;
		high1 = high1 | 0;
	}
	var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var totalSeconds = this5;
	var b2 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
	var mask = 65535;
	var al = totalSeconds.low & mask;
	var ah = totalSeconds.low >>> 16;
	var bl = b2.low & mask;
	var bh = b2.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low2 = p00;
	var high2 = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low2 = low2 + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p01) < 0) {
		var ret2 = high2++;
		high2 = high2 | 0;
	}
	p10 = p10 << 16;
	low2 = low2 + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p10) < 0) {
		var ret3 = high2++;
		high2 = high2 | 0;
	}
	high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(totalSeconds.low,b2.high) + haxe__$Int32_Int32_$Impl_$._mul(totalSeconds.high,b2.low) | 0) | 0;
	var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
	return this6;
};
thx__$Time_Time_$Impl_$.fromString = function(s) {
	var pattern = new EReg("^([-+])?(?:(\\d+)[.](\\d{1,2})|(\\d+))[:](\\d{2})(?:[:](\\d{2})(?:\\.(\\d+))?)?$","");
	if(!pattern.match(s)) {
		throw new thx_Error("unable to parse Time string: \"" + s + "\"",null,{ fileName : "Time.hx", lineNumber : 32, className : "thx._Time.Time_Impl_", methodName : "fromString"});
	}
	var smticks = pattern.matched(7);
	var mticks = 0;
	if(null != smticks) {
		smticks = "1" + thx_Strings.rpad(smticks,"0",7).substring(0,7);
		mticks = Std.parseInt(smticks) - 10000000;
	}
	var days = 0;
	var hours = 0;
	var minutes = Std.parseInt(pattern.matched(5));
	var seconds = Std.parseInt(pattern.matched(6));
	if(null != pattern.matched(2)) {
		days = Std.parseInt(pattern.matched(2));
		hours = Std.parseInt(pattern.matched(3));
	} else {
		hours = Std.parseInt(pattern.matched(4));
	}
	var this1 = thx__$Time_Time_$Impl_$.create(days * 24 + hours,minutes,seconds);
	var this2 = new haxe__$Int64__$_$_$Int64(mticks >> 31,mticks);
	var that = this2;
	var a = this1;
	var high = a.high + that.high | 0;
	var low = a.low + that.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high,low);
	var this4 = this3;
	var time = this4;
	if(pattern.matched(1) == "-") {
		var x = time;
		var high1 = ~x.high;
		var low1 = -x.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this6 = this5;
		return this6;
	} else {
		return time;
	}
};
thx__$Time_Time_$Impl_$.compare = function(a,b) {
	return thx_Int64s.compare(a,b);
};
thx__$Time_Time_$Impl_$.create = function(hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	var a = thx__$Time_Time_$Impl_$.timeToTicks(hours,minutes,seconds);
	var this1 = new haxe__$Int64__$_$_$Int64(milliseconds >> 31,milliseconds);
	var a1 = this1;
	var b = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var mask = 65535;
	var al = a1.low & mask;
	var ah = a1.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a1.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a1.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var b1 = this2;
	var high1 = a.high + b1.high | 0;
	var low1 = a.low + b1.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,a.low) < 0) {
		var ret2 = high1++;
		high1 = high1 | 0;
	}
	var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
	var this4 = this3;
	return this4;
};
thx__$Time_Time_$Impl_$.createDays = function(days,hours,minutes,seconds,milliseconds) {
	if(milliseconds == null) {
		milliseconds = 0;
	}
	if(seconds == null) {
		seconds = 0;
	}
	if(minutes == null) {
		minutes = 0;
	}
	if(hours == null) {
		hours = 0;
	}
	return thx__$Time_Time_$Impl_$.create(days * 24 + hours,minutes,seconds,milliseconds);
};
thx__$Time_Time_$Impl_$._new = function(ticks) {
	var this1 = ticks;
	return this1;
};
thx__$Time_Time_$Impl_$.abs = function(this1) {
	var a = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		var x = this1;
		var high = ~x.high;
		var low = -x.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		return this4;
	} else {
		var this5 = this1;
		return this5;
	}
};
thx__$Time_Time_$Impl_$.withHours = function(this1,hours) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(hours,tmp,tmp1,x2.low);
};
thx__$Time_Time_$Impl_$.withMinutes = function(this1,minutes) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,minutes,tmp1,x2.low);
};
thx__$Time_Time_$Impl_$.withSeconds = function(this1,seconds) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,tmp1,seconds,x2.low);
};
thx__$Time_Time_$Impl_$.withMilliseconds = function(this1,milliseconds) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp = x.low;
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp1 = x1.low;
	var a2 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this4 = new haxe__$Int64__$_$_$Int64(0,60);
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(a2,this4).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return thx__$Time_Time_$Impl_$.create(tmp,tmp1,x2.low,milliseconds);
};
thx__$Time_Time_$Impl_$.negate = function(this1) {
	var x = this1;
	var high = ~x.high;
	var low = -x.low;
	if(low == 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$Time_Time_$Impl_$.add = function(this1,that) {
	var a = this1;
	var b = that;
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$Time_Time_$Impl_$.addTicks = function(this1,that) {
	var a = this1;
	var high = a.high + that.high | 0;
	var low = a.low + that.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$Time_Time_$Impl_$.subtract = function(this1,that) {
	var a = this1;
	var b = that;
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
thx__$Time_Time_$Impl_$.compareTo = function(this1,that) {
	return thx_Int64s.compare(this1,that);
};
thx__$Time_Time_$Impl_$.equalsTo = function(this1,that) {
	var a = this1;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$Time_Time_$Impl_$.equals = function(self,that) {
	var a = self;
	var b = that;
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
thx__$Time_Time_$Impl_$.notEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$Time_Time_$Impl_$.notEquals = function(this1,that) {
	var a = this1;
	var b = that;
	if(!(a.high != b.high)) {
		return a.low != b.low;
	} else {
		return true;
	}
};
thx__$Time_Time_$Impl_$.greaterThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$Time_Time_$Impl_$.greater = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	}
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
thx__$Time_Time_$Impl_$.greaterEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$Time_Time_$Impl_$.greaterEquals = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	}
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
thx__$Time_Time_$Impl_$.lessThan = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$Time_Time_$Impl_$.less = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	}
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
thx__$Time_Time_$Impl_$.lessEqualsTo = function(self,that) {
	var a = self;
	var b = that;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$Time_Time_$Impl_$.lessEquals = function(this1,that) {
	var b = that;
	var v = this1.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low);
	}
	return (this1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
thx__$Time_Time_$Impl_$.toDateTimeUtc = function(this1) {
	var this2 = this1;
	return this2;
};
thx__$Time_Time_$Impl_$.toString = function(this1) {
	var timeAbs = thx__$Time_Time_$Impl_$.abs(this1);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var ticksInSecondAbs = x.low;
	var decimals = ticksInSecondAbs != 0 ? "." + thx_Strings.trimCharsRight(thx_Ints.lpad(ticksInSecondAbs,"0",7),"0") : "";
	var tmp;
	var a = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
		tmp = "-";
	} else {
		tmp = "";
	}
	var tmp1 = "" + haxe__$Int64_Int64_$Impl_$.toString(haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient) + ":";
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var tmp2 = tmp1 + thx_Ints.lpad(x1.low,"0",2) + ":";
	var a2 = haxe__$Int64_Int64_$Impl_$.divMod(timeAbs,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this4 = new haxe__$Int64__$_$_$Int64(0,60);
	var x2 = haxe__$Int64_Int64_$Impl_$.divMod(a2,this4).modulus;
	if(x2.high != x2.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return tmp + (tmp2 + thx_Ints.lpad(x2.low,"0",2)) + decimals;
};
thx__$Time_Time_$Impl_$.toGmtString = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	var h = thx_Ints.lpad(x.low,"0",2);
	var a = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0) {
		h = "+" + h;
	}
	var a1 = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this3 = new haxe__$Int64__$_$_$Int64(0,60);
	var x1 = haxe__$Int64_Int64_$Impl_$.divMod(a1,this3).modulus;
	if(x1.high != x1.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return "" + h + ":" + thx_Ints.lpad(x1.low,"0",2);
};
thx__$Time_Time_$Impl_$.get_ticks = function(this1) {
	return this1;
};
thx__$Time_Time_$Impl_$.get_days = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_hours = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,24);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_minutes = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_seconds = function(this1) {
	var a = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
	var this2 = new haxe__$Int64__$_$_$Int64(0,60);
	var x = haxe__$Int64_Int64_$Impl_$.divMod(a,this2).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_milliseconds = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_microseconds = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenThousandI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_ticksInSecond = function(this1) {
	var x = haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).modulus;
	if(x.high != x.low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x.low;
};
thx__$Time_Time_$Impl_$.get_totalDays = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalHours = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMinutes = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalSeconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMilliseconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_totalMicroseconds = function(this1) {
	return haxe__$Int64_Int64_$Impl_$.divMod(this1,thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64).quotient;
};
thx__$Time_Time_$Impl_$.get_isNegative = function(this1) {
	var a = this1;
	var this2 = new haxe__$Int64__$_$_$Int64(0,0);
	var b = this2;
	var v = a.high - b.high | 0;
	if(v != 0) {
		v = v;
	} else {
		v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
var thx_TimePeriod = { __ename__ : ["thx","TimePeriod"], __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"] };
thx_TimePeriod.Second = ["Second",0];
thx_TimePeriod.Second.__enum__ = thx_TimePeriod;
thx_TimePeriod.Minute = ["Minute",1];
thx_TimePeriod.Minute.__enum__ = thx_TimePeriod;
thx_TimePeriod.Hour = ["Hour",2];
thx_TimePeriod.Hour.__enum__ = thx_TimePeriod;
thx_TimePeriod.Day = ["Day",3];
thx_TimePeriod.Day.__enum__ = thx_TimePeriod;
thx_TimePeriod.Week = ["Week",4];
thx_TimePeriod.Week.__enum__ = thx_TimePeriod;
thx_TimePeriod.Month = ["Month",5];
thx_TimePeriod.Month.__enum__ = thx_TimePeriod;
thx_TimePeriod.Year = ["Year",6];
thx_TimePeriod.Year.__enum__ = thx_TimePeriod;
var thx_Timer = function() { };
thx_Timer.__name__ = ["thx","Timer"];
thx_Timer.debounce = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var cancel = thx_Functions.noop;
	var poll = function() {
		cancel();
		cancel = thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
		}
		poll();
	};
};
thx_Timer.throttle = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var waiting = false;
	var poll = function() {
		waiting = true;
		thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
			return;
		}
		if(waiting) {
			return;
		}
		poll();
	};
};
thx_Timer.repeat = function(callback,delayms) {
	var id = setInterval(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.frame = function(callback) {
	var cancelled = false;
	var f = thx_Functions.noop;
	var current = performance.now();
	var next;
	f = function() {
		if(cancelled) {
			return;
		}
		next = performance.now();
		callback(next - current);
		current = next;
		requestAnimationFrame(f);
	};
	requestAnimationFrame(f);
	return function() {
		cancelled = true;
	};
};
thx_Timer.nextFrame = function(callback) {
	var id = requestAnimationFrame(callback);
	return function() {
		cancelAnimationFrame(id);
	};
};
thx_Timer.immediate = function(callback) {
	var id = setImmediate(callback);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
thx_Timer.time = function() {
	return performance.now();
};
thx_Timer.resolution = function() {
	if(null != thx_Timer._resolution) {
		return thx_Timer._resolution;
	}
	var start = performance.now();
	var end;
	var loop = 0.0;
	while(true) {
		++loop;
		end = performance.now();
		if(!(end - start == 0)) {
			break;
		}
	}
	return thx_Timer._resolution = end - start;
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
thx__$Timestamp_Timestamp_$Impl_$.__name__ = ["thx","_Timestamp","Timestamp_Impl_"];
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12 ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : d1.getHours() < 12 ? -wd : 7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2) ? 1 : 0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime() ? 1 : 0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = ["thx","_Tuple","Tuple0_Impl_"];
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$["with"] = function(this1,v) {
	var this2 = v;
	return this2;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = ["thx","_Tuple","Tuple1_Impl_"];
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	var this1 = _0;
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = ["thx","_Tuple","Tuple2_Impl_"];
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	var this2 = this1._1;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	var this2 = this1._0;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = ["thx","_Tuple","Tuple3_Impl_"];
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = ["thx","_Tuple","Tuple4_Impl_"];
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = ["thx","_Tuple","Tuple5_Impl_"];
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$["with"] = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = ["thx","_Tuple","Tuple6_Impl_"];
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
var thx_Types = function() { };
thx_Types.__name__ = ["thx","Types"];
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		var o = v;
		return null == (o == null ? null : js_Boot.getClass(o));
	} else {
		return false;
	}
};
thx_Types.isObject = function(v) {
	if(Reflect.isObject(v)) {
		return !thx_Types.isPrimitive(v);
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 1:case 2:case 3:
		return true;
	case 0:case 4:case 5:case 7:case 8:
		return false;
	case 6:
		var c = _g[2];
		if(Type.getClassName(c) == "String") {
			return true;
		} else {
			var c1 = _g[2];
			if(Type.getClassName(c1) == "Date") {
				return true;
			} else {
				return false;
			}
		}
		break;
	}
};
thx_Types.isEnumValue = function(v) {
	var _g = Type["typeof"](v);
	if(_g[1] == 7) {
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = Type.getSuperClass(cls);
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type["typeof"](a)) == thx_Types.toString(Type["typeof"](b));
};
thx_Types.typeInheritance = function(type) {
	switch(type[1]) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type[2];
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = Type.getSuperClass(c);
		}
		return classes.map(Type.getClassName);
	case 7:
		var e = type[2];
		return [Type.getEnumName(e)];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type[1]) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		var c = type[2];
		return Type.getClassName(c);
	case 7:
		var e = type[2];
		return Type.getEnumName(e);
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type["typeof"](value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type["typeof"](value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return Type.getClassName(value);
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return Type.getEnumName(value);
	}
	return thx_Types.toString(Type["typeof"](value));
};
var thx_Unit = { __ename__ : ["thx","Unit"], __constructs__ : ["unit"] };
thx_Unit.unit = ["unit",0];
thx_Unit.unit.__enum__ = thx_Unit;
var thx__$Url_Url_$Impl_$ = {};
thx__$Url_Url_$Impl_$.__name__ = ["thx","_Url","Url_Impl_"];
thx__$Url_Url_$Impl_$.fromString = function(s) {
	return thx__$Url_Url_$Impl_$.parse(s,true);
};
thx__$Url_Url_$Impl_$.parse = function(s,parseQueryString) {
	if(!thx__$Url_Url_$Impl_$.pattern.match(s)) {
		throw new thx_Error("unable to parse \"" + s + "\" to Url",null,{ fileName : "Url.hx", lineNumber : 21, className : "thx._Url.Url_Impl_", methodName : "parse"});
	}
	var port = thx__$Url_Url_$Impl_$.pattern.matched(12);
	var o = { protocol : thx__$Url_Url_$Impl_$.pattern.matched(4), slashes : thx__$Url_Url_$Impl_$.pattern.matched(5) == "//", auth : thx__$Url_Url_$Impl_$.pattern.matched(7), hostName : thx__$Url_Url_$Impl_$.pattern.matched(11), port : null == port ? null : Std.parseInt(port), pathName : thx__$Url_Url_$Impl_$.pattern.matched(13), queryString : null, search : null, hash : thx__$Url_Url_$Impl_$.pattern.matched(17)};
	thx__$Url_Url_$Impl_$.set_search(o,thx__$Url_Url_$Impl_$.pattern.matched(16));
	return o;
};
thx__$Url_Url_$Impl_$.equals = function(self,that) {
	return thx__$Url_Url_$Impl_$.equalsTo(self,that);
};
thx__$Url_Url_$Impl_$.equalsTo = function(this1,that) {
	if(this1.protocol == that.protocol && this1.slashes == that.slashes && this1.auth == that.auth && this1.hostName == that.hostName && this1.port == that.port && this1.pathName == that.pathName && thx__$QueryString_QueryString_$Impl_$.equals(this1.queryString,that.queryString) && this1.search == thx__$Url_Url_$Impl_$.get_search(that)) {
		return this1.hash == that.hash;
	} else {
		return false;
	}
};
thx__$Url_Url_$Impl_$.concatString = function(this1,that) {
	var copy = thx__$Url_Url_$Impl_$.clone(this1);
	if(thx_Strings.isEmpty(this1.pathName)) {
		if(!StringTools.startsWith(that,"/")) {
			that = "/" + that;
		}
		copy.pathName = that;
	} else {
		if(StringTools.startsWith(that,"/")) {
			that = that.substring(1);
		}
		if(StringTools.endsWith(this1.pathName,"/")) {
			copy.pathName += that;
		} else {
			copy.pathName = copy.pathName + "/" + that;
		}
	}
	return copy;
};
thx__$Url_Url_$Impl_$.toString = function(this1) {
	if(this1.hostName != null) {
		var tmp = "" + (this1.protocol != null ? this1.protocol + ":" : "") + (this1.slashes ? "//" : "") + (this1.auth != null ? this1.auth + "@" : "") + (this1.hostName + (this1.port != null ? ":" + this1.port : ""));
		var this2 = this1.pathName;
		var tmp1;
		var tmp2;
		if(this1.search == null) {
			if(this1.queryString != null) {
				var _this = this1.queryString;
				tmp2 = !(!new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys()).hasNext());
			} else {
				tmp2 = false;
			}
		} else {
			tmp2 = true;
		}
		if(tmp2) {
			tmp1 = "?" + thx__$Url_Url_$Impl_$.get_search(this1);
		} else {
			tmp1 = "";
		}
		return tmp + (this2 + tmp1) + (this1.hash != null ? "#" + this1.hash : "");
	} else {
		var this3 = this1.pathName;
		var tmp3;
		var tmp4;
		if(this1.search == null) {
			if(this1.queryString != null) {
				var _this1 = this1.queryString;
				tmp4 = !(!new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys()).hasNext());
			} else {
				tmp4 = false;
			}
		} else {
			tmp4 = true;
		}
		if(tmp4) {
			tmp3 = "?" + thx__$Url_Url_$Impl_$.get_search(this1);
		} else {
			tmp3 = "";
		}
		return "" + (this3 + tmp3) + (this1.hash != null ? "#" + this1.hash : "");
	}
};
thx__$Url_Url_$Impl_$.clone = function(this1) {
	return { protocol : this1.protocol, slashes : this1.slashes, auth : this1.auth, hostName : this1.hostName, port : this1.port, pathName : this1.pathName, queryString : thx__$QueryString_QueryString_$Impl_$.clone(this1.queryString), search : thx__$Url_Url_$Impl_$.get_search(this1), hash : this1.hash};
};
thx__$Url_Url_$Impl_$.ensureQueryString = function(this1) {
	if(this1.queryString != null) {
		return this1.queryString;
	} else {
		var value = new haxe_ds_StringMap();
		if(null != value) {
			this1.search = null;
		}
		return this1.queryString = value;
	}
};
thx__$Url_Url_$Impl_$.get_auth = function(this1) {
	return this1.auth;
};
thx__$Url_Url_$Impl_$.set_auth = function(this1,value) {
	return this1.auth = value;
};
thx__$Url_Url_$Impl_$.get_hasAuth = function(this1) {
	return this1.auth != null;
};
thx__$Url_Url_$Impl_$.get_hasHash = function(this1) {
	return this1.hash != null;
};
thx__$Url_Url_$Impl_$.get_hasPort = function(this1) {
	return this1.port != null;
};
thx__$Url_Url_$Impl_$.get_hasProtocol = function(this1) {
	return this1.protocol != null;
};
thx__$Url_Url_$Impl_$.get_hasQueryString = function(this1) {
	if(this1.queryString != null) {
		var _this = this1.queryString;
		return !(!new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys()).hasNext());
	} else {
		return false;
	}
};
thx__$Url_Url_$Impl_$.get_hasSearch = function(this1) {
	if(this1.search == null) {
		if(this1.queryString != null) {
			var _this = this1.queryString;
			return !(!new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys()).hasNext());
		} else {
			return false;
		}
	} else {
		return true;
	}
};
thx__$Url_Url_$Impl_$.get_host = function(this1) {
	return this1.hostName + (this1.port != null ? ":" + this1.port : "");
};
thx__$Url_Url_$Impl_$.set_host = function(this1,host) {
	var p = host.indexOf(":");
	if(p < 0) {
		this1.hostName = host;
		this1.port = null;
	} else {
		this1.hostName = host.substring(0,p);
		this1.port = Std.parseInt(host.substring(p + 1));
	}
	return host;
};
thx__$Url_Url_$Impl_$.get_hostName = function(this1) {
	return this1.hostName;
};
thx__$Url_Url_$Impl_$.set_hostName = function(this1,hostName) {
	return this1.hostName = hostName;
};
thx__$Url_Url_$Impl_$.get_href = function(this1) {
	return thx__$Url_Url_$Impl_$.toString(this1);
};
thx__$Url_Url_$Impl_$.set_href = function(this1,value) {
	this1 = thx__$Url_Url_$Impl_$.parse(value,true);
	return value;
};
thx__$Url_Url_$Impl_$.get_isAbsolute = function(this1) {
	return this1.hostName != null;
};
thx__$Url_Url_$Impl_$.get_isRelative = function(this1) {
	return this1.hostName == null;
};
thx__$Url_Url_$Impl_$.get_path = function(this1) {
	var this2 = this1.pathName;
	var tmp;
	var tmp1;
	if(this1.search == null) {
		if(this1.queryString != null) {
			var _this = this1.queryString;
			tmp1 = !(!new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys()).hasNext());
		} else {
			tmp1 = false;
		}
	} else {
		tmp1 = true;
	}
	if(tmp1) {
		tmp = "?" + thx__$Url_Url_$Impl_$.get_search(this1);
	} else {
		tmp = "";
	}
	return this2 + tmp;
};
thx__$Url_Url_$Impl_$.set_path = function(this1,value) {
	var p = value.indexOf("?");
	if(p < 0) {
		this1.pathName = value;
		this1.search = null;
		this1.queryString = null;
	} else {
		this1.pathName = value.substring(0,p);
		thx__$Url_Url_$Impl_$.set_search(this1,value.substring(p + 1));
	}
	return value;
};
thx__$Url_Url_$Impl_$.get_pathName = function(this1) {
	return this1.pathName;
};
thx__$Url_Url_$Impl_$.set_pathName = function(this1,value) {
	return this1.pathName = value;
};
thx__$Url_Url_$Impl_$.get_port = function(this1) {
	return this1.port;
};
thx__$Url_Url_$Impl_$.set_port = function(this1,value) {
	return this1.port = value;
};
thx__$Url_Url_$Impl_$.get_protocol = function(this1) {
	return this1.protocol;
};
thx__$Url_Url_$Impl_$.set_protocol = function(this1,value) {
	return this1.protocol = null == value ? null : value.toLowerCase();
};
thx__$Url_Url_$Impl_$.get_hash = function(this1) {
	return this1.hash;
};
thx__$Url_Url_$Impl_$.set_hash = function(this1,value) {
	return this1.hash = value;
};
thx__$Url_Url_$Impl_$.get_slashes = function(this1) {
	return this1.slashes;
};
thx__$Url_Url_$Impl_$.set_slashes = function(this1,value) {
	return this1.slashes = value;
};
thx__$Url_Url_$Impl_$.get_queryString = function(this1) {
	return this1.queryString;
};
thx__$Url_Url_$Impl_$.set_queryString = function(this1,value) {
	if(null != value) {
		this1.search = null;
	}
	return this1.queryString = value;
};
thx__$Url_Url_$Impl_$.get_search = function(this1) {
	if(null != this1.search && "" != this1.search) {
		return this1.search;
	} else {
		return thx__$QueryString_QueryString_$Impl_$.toStringWithSymbols(this1.queryString,thx__$QueryString_QueryString_$Impl_$.separator,thx__$QueryString_QueryString_$Impl_$.assignment,thx__$QueryString_QueryString_$Impl_$.encodeURIComponent);
	}
};
thx__$Url_Url_$Impl_$.set_search = function(this1,value) {
	var qs;
	try {
		qs = thx__$QueryString_QueryString_$Impl_$.parseWithSymbols(value,thx__$QueryString_QueryString_$Impl_$.separator,thx__$QueryString_QueryString_$Impl_$.assignment,thx__$QueryString_QueryString_$Impl_$.decodeURIComponent);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		qs = null;
	}
	var tmp;
	if(qs != null) {
		var arr = thx_Iterators.toArray(qs.keys());
		if(arr.length == 0) {
			tmp = true;
		} else if(arr.length != 1) {
			tmp = false;
		} else {
			var _this = qs;
			var key = arr[0];
			tmp = (__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]).length == 0;
		}
	} else {
		tmp = true;
	}
	if(tmp) {
		this1.search = value;
		this1.queryString = null;
	} else {
		this1.queryString = qs;
		this1.search = null;
	}
	return value;
};
var thx_Uuid = function() { };
thx_Uuid.__name__ = ["thx","Uuid"];
thx_Uuid.random = function(max) {
	return Math.floor(Math.random() * max);
};
thx_Uuid.srandom = function() {
	return "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
};
thx_Uuid.create = function() {
	var s = [];
	var _g = 0;
	while(_g < 8) {
		var i = _g++;
		s[i] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[8] = "-";
	var _g1 = 9;
	while(_g1 < 13) {
		var i1 = _g1++;
		s[i1] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[13] = "-";
	s[14] = "4";
	var _g2 = 15;
	while(_g2 < 18) {
		var i2 = _g2++;
		s[i2] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[18] = "-";
	s[19] = "89AB".charAt(Math.floor(Math.random() * 3));
	var _g3 = 20;
	while(_g3 < 23) {
		var i3 = _g3++;
		s[i3] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	s[23] = "-";
	var _g4 = 24;
	while(_g4 < 36) {
		var i4 = _g4++;
		s[i4] = "0123456789abcdef".charAt(Math.floor(Math.random() * 16));
	}
	return s.join("");
};
thx_Uuid.isValid = function(uuid) {
	return new EReg("^[0123456789abcdef]{8}-[0123456789abcdef]{4}-4[0123456789abcdef]{3}-[89ab][0123456789abcdef]{3}-[0123456789abcdef]{12}$","i").match(uuid);
};
var thx__$Validation_Validation_$Impl_$ = {};
thx__$Validation_Validation_$Impl_$.__name__ = ["thx","_Validation","Validation_Impl_"];
thx__$Validation_Validation_$Impl_$.validation = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.liftVNel = function(e) {
	return thx_Eithers.leftMap(e,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Either.Right(f),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	});
};
thx__$Validation_Validation_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var a = this1[2];
		return f(b,a);
	}
};
thx__$Validation_Validation_$Impl_$.foldMap = function(this1,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx__$Validation_Validation_$Impl_$.foldLeft(thx_Eithers.map(this1,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1[1]) {
	case 0:
		var e0 = this1[2];
		var _g = v;
		switch(_g[1]) {
		case 0:
			var e1 = _g[2];
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e0,e1));
		case 1:
			var b = _g[2];
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1[2];
		var _g1 = v;
		switch(_g1[1]) {
		case 0:
			var e = _g1[2];
			return thx_Either.Left(e);
		case 1:
			var f = _g1[2];
			return thx_Either.Right(f(a));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.zip = function(this1,v,s) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Eithers.map(v,function(b) {
		var _1 = b;
		return function(_0) {
			return thx__$Tuple_Tuple2_$Impl_$.of(_0,_1);
		};
	}),s);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.ensure = function(this1,p,error) {
	if(this1[1] == 1) {
		var a = this1[2];
		if(p(a)) {
			return this1;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		var left = this1;
		return left;
	}
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1[1]) {
	case 0:
		var a = this1[2];
		return thx_Either.Left(a);
	case 1:
		var b = this1[2];
		return f(b);
	}
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(f)),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val9 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f1(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1) {
		return function(h1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02) {
		return function(g2) {
			return f3(a2,b2,c2,d2,e2,f02,g2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3) {
		return function(f03) {
			return f4(a3,b3,c3,d3,e3,f03);
		};
	};
	var f6 = function(a4,b4,c4,d4) {
		return function(e4) {
			return f5(a4,b4,c4,d4,e4);
		};
	};
	var f7 = function(a5,b5,c5) {
		return function(d5) {
			return f6(a5,b5,c5,d5);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a6,b6) {
		return function(c6) {
			return f7(a6,b6,c6);
		};
	})),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val10 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f1(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1) {
		return function(i1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2) {
		return function(h2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03) {
		return function(g3) {
			return f4(a3,b3,c3,d3,e3,f03,g3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4) {
		return function(f04) {
			return f5(a4,b4,c4,d4,e4,f04);
		};
	};
	var f7 = function(a5,b5,c5,d5) {
		return function(e5) {
			return f6(a5,b5,c5,d5,e5);
		};
	};
	var f8 = function(a6,b6,c6) {
		return function(d6) {
			return f7(a6,b6,c6,d6);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a7,b7) {
		return function(c7) {
			return f8(a7,b7,c7);
		};
	})),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val11 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1) {
		return function(j1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2) {
		return function(i2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3) {
		return function(h3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04) {
		return function(g4) {
			return f5(a4,b4,c4,d4,e4,f04,g4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5) {
		return function(f05) {
			return f6(a5,b5,c5,d5,e5,f05);
		};
	};
	var f8 = function(a6,b6,c6,d6) {
		return function(e6) {
			return f7(a6,b6,c6,d6,e6);
		};
	};
	var f9 = function(a7,b7,c7) {
		return function(d7) {
			return f8(a7,b7,c7,d7);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a8,b8) {
		return function(c8) {
			return f9(a8,b8,c8);
		};
	})),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val12 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1) {
		return function(k1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2) {
		return function(j2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3) {
		return function(i3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4) {
		return function(h4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05) {
		return function(g5) {
			return f6(a5,b5,c5,d5,e5,f05,g5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6) {
		return function(f06) {
			return f7(a6,b6,c6,d6,e6,f06);
		};
	};
	var f9 = function(a7,b7,c7,d7) {
		return function(e7) {
			return f8(a7,b7,c7,d7,e7);
		};
	};
	var f10 = function(a8,b8,c8) {
		return function(d8) {
			return f9(a8,b8,c8,d8);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a9,b9) {
		return function(c9) {
			return f10(a9,b9,c9);
		};
	})),s),s),s),s),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
thx_ValidationExtensions.__name__ = ["thx","ValidationExtensions"];
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n1) {
		return thx__$Nel_Nel_$Impl_$.map(n1,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v[1] == 1) {
		var a = v[2];
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
		}
	} else {
		var left = v;
		return left;
	}
};
thx_ValidationExtensions.appendVNel = function(target,item) {
	switch(target[1]) {
	case 0:
		switch(item[1]) {
		case 0:
			var errors1 = target[2];
			var errors2 = item[2];
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.append(errors1,errors2));
		case 1:
			var errors = target[2];
			var value = item[2];
			return thx_Either.Left(errors);
		}
		break;
	case 1:
		switch(item[1]) {
		case 0:
			var values = target[2];
			var errors3 = item[2];
			return thx_Either.Left(errors3);
		case 1:
			var values1 = target[2];
			var value1 = item[2];
			return thx_Either.Right(thx_Arrays.append(values1,value1));
		}
		break;
	}
};
thx_ValidationExtensions.appendValidation = function(target,item) {
	return thx_ValidationExtensions.appendVNel(target,thx__$Validation_Validation_$Impl_$.liftVNel(item));
};
thx_ValidationExtensions.appendVNels = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendVNel,target);
};
thx_ValidationExtensions.appendValidations = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendValidation,target);
};
var thx_error_AbstractMethod = function(posInfo) {
	thx_Error.call(this,"method " + posInfo.className + "." + posInfo.methodName + "() is abstract",null,posInfo);
};
thx_error_AbstractMethod.__name__ = ["thx","error","AbstractMethod"];
thx_error_AbstractMethod.__super__ = thx_Error;
thx_error_AbstractMethod.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_AbstractMethod
});
var thx_error_AssertError = function(msg,pos) {
	if(null == msg) {
		msg = "expected true";
	}
	thx_Error.call(this,msg,null,pos);
};
thx_error_AssertError.__name__ = ["thx","error","AssertError"];
thx_error_AssertError.__super__ = thx_Error;
thx_error_AssertError.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_AssertError
});
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = ["thx","error","ErrorWrapper"];
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_error_NotImplemented = function(posInfo) {
	thx_Error.call(this,"method " + posInfo.className + "." + posInfo.methodName + "() needs to be implemented",null,posInfo);
};
thx_error_NotImplemented.__name__ = ["thx","error","NotImplemented"];
thx_error_NotImplemented.__super__ = thx_Error;
thx_error_NotImplemented.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_NotImplemented
});
var thx_error_NullArgument = function(message,posInfo) {
	thx_Error.call(this,message,null,posInfo);
};
thx_error_NullArgument.__name__ = ["thx","error","NullArgument"];
thx_error_NullArgument.__super__ = thx_Error;
thx_error_NullArgument.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_NullArgument
});
var thx_fp__$Map_Map_$Impl_$ = {};
thx_fp__$Map_Map_$Impl_$.__name__ = ["thx","fp","_Map","Map_Impl_"];
thx_fp__$Map_Map_$Impl_$.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp__$Map_Map_$Impl_$.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp__$Map_Map_$Impl_$.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp__$Map_Map_$Impl_$.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		r = thx_fp__$Map_Map_$Impl_$.insert(r,key1,map.get(key1),comparator);
	}
	return r;
};
thx_fp__$Map_Map_$Impl_$.lookup = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		var xkey = this1[3];
		var size = this1[2];
		var c = comparator(key,xkey);
		switch(c[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookup(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookup(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some(xvalue);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.lookupTuple = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var xvalue = this1[4];
		var xkey = this1[3];
		var size = this1[2];
		var c = comparator(key,xkey);
		switch(c[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(rhs,key,comparator);
		case 2:
			var this2 = { _0 : xkey, _1 : xvalue};
			return haxe_ds_Option.Some(this2);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$["delete"] = function(this1,key,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var x = this1[4];
		var kx = this1[3];
		var size = this1[2];
		var _g = comparator(key,kx);
		switch(_g[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,thx_fp__$Map_Map_$Impl_$["delete"](lhs,key,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,lhs,thx_fp__$Map_Map_$Impl_$["delete"](rhs,key,comparator));
		case 2:
			return thx_fp__$Map_Map_$Impl_$.glue(lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.insert = function(this1,kx,x,comparator) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var y = this1[4];
		var ky = this1[3];
		var sz = this1[2];
		var _g = comparator(kx,ky);
		switch(_g[1]) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,thx_fp__$Map_Map_$Impl_$.insert(lhs,kx,x,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,lhs,thx_fp__$Map_Map_$Impl_$.insert(rhs,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(sz,kx,x,lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		return thx_fp__$Map_Map_$Impl_$.foldLeft(r,thx_fp__$Map_Map_$Impl_$.foldLeft(l,f(b,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.map = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1[6];
		var lhs = this1[5];
		var y = this1[4];
		var ky = this1[3];
		var sz = this1[2];
		return thx_fp_MapImpl.Bin(sz,ky,f(y),thx_fp__$Map_Map_$Impl_$.map(lhs,f),thx_fp__$Map_Map_$Impl_$.map(rhs,f));
	}
};
thx_fp__$Map_Map_$Impl_$.values = function(this1) {
	return thx_fp__$Map_Map_$Impl_$.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp__$Map_Map_$Impl_$.foldLeftKeys = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var kx = this1[3];
		return thx_fp__$Map_Map_$Impl_$.foldLeftKeys(r,thx_fp__$Map_Map_$Impl_$.foldLeftKeys(l,f(b,kx),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftAll = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		var kx = this1[3];
		return thx_fp__$Map_Map_$Impl_$.foldLeftAll(r,thx_fp__$Map_Map_$Impl_$.foldLeftAll(l,f(b,kx,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftTuples = function(this1,b,f) {
	switch(this1[1]) {
	case 0:
		return b;
	case 1:
		var r = this1[6];
		var l = this1[5];
		var x = this1[4];
		var kx = this1[3];
		var this2 = { _0 : kx, _1 : x};
		return thx_fp__$Map_Map_$Impl_$.foldLeftTuples(r,thx_fp__$Map_Map_$Impl_$.foldLeftTuples(l,f(b,this2),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.size = function(this1) {
	switch(this1[1]) {
	case 0:
		return 0;
	case 1:
		var size = this1[2];
		return size;
	}
};
thx_fp__$Map_Map_$Impl_$.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp__$Map_Map_$Impl_$.size(lhs);
	var rs = thx_fp__$Map_Map_$Impl_$.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp__$Map_Map_$Impl_$.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp__$Map_Map_$Impl_$.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.glue = function(this1,that) {
	if(this1[1] == 0) {
		return that;
	} else if(that[1] == 0) {
		return this1;
	} else {
		var l = this1;
		var r = that;
		if(thx_fp__$Map_Map_$Impl_$.size(l) > thx_fp__$Map_Map_$Impl_$.size(r)) {
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(l);
			return thx_fp__$Map_Map_$Impl_$.balance(t.k,t.x,t.t,r);
		} else {
			var l1 = this1;
			var r1 = that;
			var t1 = thx_fp__$Map_Map_$Impl_$.deleteFindMin(r1);
			return thx_fp__$Map_Map_$Impl_$.balance(t1.k,t1.x,l1,t1.t);
		}
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMin = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 161, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
		break;
	case 1:
		if(map[5][1] == 0) {
			var r = map[6];
			var k = map[3];
			var x = map[4];
			return { k : k, x : x, t : r};
		} else {
			var r1 = map[6];
			var k1 = map[3];
			var x1 = map[4];
			var l = map[5];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,t.t,r1)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMax = function(map) {
	switch(map[1]) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
		break;
	case 1:
		if(map[6][1] == 0) {
			var k = map[3];
			var x = map[4];
			var l = map[5];
			return { k : k, x : x, t : l};
		} else {
			var k1 = map[3];
			var x1 = map[4];
			var l1 = map[5];
			var r = map[6];
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,l1,t.t)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs[1] == 1) {
		var ry = rhs[6];
		var ly = rhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ly) < 2 * thx_fp__$Map_Map_$Impl_$.size(ry)) {
			return thx_fp__$Map_Map_$Impl_$.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.rotateRight = function(k,x,lhs,rhs) {
	if(lhs[1] == 1) {
		var ry = lhs[6];
		var ly = lhs[5];
		if(thx_fp__$Map_Map_$Impl_$.size(ry) < 2 * thx_fp__$Map_Map_$Impl_$.size(ly)) {
			return thx_fp__$Map_Map_$Impl_$.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		var t3 = rhs[6];
		var t2 = rhs[5];
		var x2 = rhs[4];
		var k2 = rhs[3];
		var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 193, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.singleRight = function(k1,x1,lhs,t3) {
	if(lhs[1] == 1) {
		var t2 = lhs[6];
		var t1 = lhs[5];
		var x2 = lhs[4];
		var k2 = lhs[3];
		var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t2) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 199, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs[1] == 1) {
		if(rhs[5][1] == 1) {
			var t4 = rhs[6];
			var k2 = rhs[3];
			var x2 = rhs[4];
			var t3 = rhs[5][6];
			var t2 = rhs[5][5];
			var x3 = rhs[5][4];
			var k3 = rhs[5][3];
			var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
			var rhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs1) + 1,k3,x3,lhs,rhs1);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs[1] == 1) {
		if(lhs[6][1] == 1) {
			var k2 = lhs[3];
			var x2 = lhs[4];
			var t1 = lhs[5];
			var t3 = lhs[6][6];
			var t2 = lhs[6][5];
			var x3 = lhs[6][4];
			var k3 = lhs[6][3];
			var lhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k3,x3,lhs1,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = { __ename__ : ["thx","fp","MapImpl"], __constructs__ : ["Tip","Bin"] };
thx_fp_MapImpl.Tip = ["Tip",0];
thx_fp_MapImpl.Tip.__enum__ = thx_fp_MapImpl;
thx_fp_MapImpl.Bin = function(size,key,value,lhs,rhs) { var $x = ["Bin",1,size,key,value,lhs,rhs]; $x.__enum__ = thx_fp_MapImpl; return $x; };
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || Function("return this")();
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	++x;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	var now = function() {
		return new Date() - nowOffset;
	};
	scope.performance.now = now;
}
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
thx_bigint_Decimals.divisionExtraScale = 4;
thx_Assert.behavior = new thx_DefaultAssertBehavior();
thx_bigint_Small.zero = new thx_bigint_Small(0);
thx_bigint_Small.one = new thx_bigint_Small(1);
thx_bigint_Small.two = new thx_bigint_Small(2);
thx_bigint_Small.ten = new thx_bigint_Small(10);
thx_bigint_Small.negativeOne = new thx_bigint_Small(-1);
thx_bigint_Bigs.BASE = 10000000;
thx_bigint_Bigs.DOUBLE_BASE = 100000000000000.0;
thx_bigint_Bigs.LOG_BASE = 7;
thx_bigint_Bigs.MAX_INT = 9007199254740992;
thx_bigint_Bigs.MAX_INT_ARR = thx_bigint_Bigs.smallToArray(thx_bigint_Bigs.MAX_INT);
thx_bigint_Bigs.LOG_MAX_INT = Math.log(thx_bigint_Bigs.MAX_INT);
thx_bigint_Bigs.powersOfTwo = (function($this) {
	var $r;
	var powers = [1];
	while(powers[powers.length - 1] <= 10000000) powers.push(2 * powers[powers.length - 1]);
	$r = powers;
	return $r;
}(this));
thx_bigint_Bigs.bigPowersOfTwo = thx_bigint_Bigs.powersOfTwo.map(function(v) {
	return new thx_bigint_Small(v);
});
thx_bigint_Bigs.powers2Length = thx_bigint_Bigs.powersOfTwo.length;
thx_bigint_Bigs.highestPower2 = thx_bigint_Bigs.powersOfTwo[thx_bigint_Bigs.powers2Length - 1];
thx_bigint_Bigs.bigHighestPower2 = new thx_bigint_Small(thx_bigint_Bigs.highestPower2);
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_bigint_DecimalImpl.zero = thx_bigint_Decimals.fromInt(0);
thx_bigint_DecimalImpl.one = thx_bigint_Decimals.fromInt(1);
thx_bigint_DecimalImpl.ten = thx_bigint_Decimals.fromInt(10);
thx__$Decimal_Decimal_$Impl_$.zero = thx_bigint_DecimalImpl.zero;
thx__$Decimal_Decimal_$Impl_$.one = thx_bigint_DecimalImpl.one;
Resource.__meta__ = { fields : { upgrades : { optional : null}, barInc : { optional : null}, progress : { optional : null}, timer : { optional : null}}};
Main.displayLookup = ["","M","T","Qt","Sp","No","Un","Td","Qd","Sd","Nd","Uvg","Tvg","Qvg"];
Main.moneyTimer = new haxe_Timer(1000);
Main.populationTimer = new haxe_Timer(10000);
Main.updateUITimer = new haxe_Timer(250);
Main.evolution = 0;
Main.money = new Resource("money",0,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100"),thx_bigint_Decimals.parse("0"));
Main.food = new Resource("food",1,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100"),thx_bigint_Decimals.parse("0"));
Main.wood = new Resource("wood",2,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100"),thx_bigint_Decimals.parse("0"));
Main.metal = new Resource("metal",3,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100"),thx_bigint_Decimals.parse("0"));
Main.population = new Resource("population",4,thx_bigint_Decimals.parse("10"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.populationMax = new Resource("populationMax",5,thx_bigint_Decimals.parse("10"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.formal = new Resource("formal",6,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.physical = new Resource("physical",7,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.life = new Resource("life",8,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.applied = new Resource("applied",9,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.social = new Resource("social",10,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.electricity = new Resource("electricity",11,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.skillPoint = new Resource("skillPoints",12,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.perkPoint = new Resource("perkPoints",13,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.newFarmer = new upgrades_ResourceUpgrade("newFarmer",0,thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"),Main.food);
Main.farmerUpgrade1 = new upgrades_ResourceUpgrade("farmerUpgrade1",1,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.food);
Main.farmerUpgrade2 = new upgrades_ResourceUpgrade("farmerUpgrade2",2,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.food);
Main.newWoodcutter = new upgrades_ResourceUpgrade("newWoodcutter",0,thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"),Main.wood);
Main.woodcutterUpgrade1 = new upgrades_ResourceUpgrade("woodcutterUpgrade1",1,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.wood);
Main.woodcutterUpgrade2 = new upgrades_ResourceUpgrade("woodcutterUpgrade2",2,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.wood);
Main.newMiner = new upgrades_ResourceUpgrade("newMiner",0,thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"),Main.metal);
Main.minerUpgrade1 = new upgrades_ResourceUpgrade("minerUpgrade1",1,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.metal);
Main.minerUpgrade2 = new upgrades_ResourceUpgrade("minerUpgrade2",2,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),Main.metal);
Main.house = new upgrades_RebuyableUpgrade("house",0,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("5000"),thx_bigint_Decimals.parse("250"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("-2"));
Main.farm = new upgrades_RebuyableUpgrade("farm",1,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("20000"),thx_bigint_Decimals.parse("8000"),thx_bigint_Decimals.parse("5000"),thx_bigint_Decimals.parse("2000"));
Main.lumberMill = new upgrades_RebuyableUpgrade("lumberMill",2,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("20000"),thx_bigint_Decimals.parse("2000"),thx_bigint_Decimals.parse("8000"),thx_bigint_Decimals.parse("5000"));
Main.metalMine = new upgrades_RebuyableUpgrade("metalMine",3,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("20000"),thx_bigint_Decimals.parse("2000"),thx_bigint_Decimals.parse("5000"),thx_bigint_Decimals.parse("8000"));
Main.taxCollector = new upgrades_RebuyableUpgrade("tax",4,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2500"),thx_bigint_Decimals.parse("100"),thx_bigint_Decimals.parse("1500"),thx_bigint_Decimals.parse("1500"));
Main.goldMine = new upgrades_RebuyableUpgrade("goldMine",5,upgrades_UpgradeType.building,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("5000"),thx_bigint_Decimals.parse("5000"));
Main.cropHarvester = new upgrades_RebuyableUpgrade("cropHarvester",6,upgrades_UpgradeType.building);
Main.woodHarvester = new upgrades_RebuyableUpgrade("woodHarvester",7,upgrades_UpgradeType.building);
Main.metalHarvester = new upgrades_RebuyableUpgrade("metalHarvester",8,upgrades_UpgradeType.building);
Main.gatheringSchool = new upgrades_RebuyableUpgrade("gatheringSchool",9,upgrades_UpgradeType.building);
Main.toolForge = new upgrades_RebuyableUpgrade("toolForge",10,upgrades_UpgradeType.building);
Main.woodBurner = new upgrades_RebuyableUpgrade("woodBurner",11,upgrades_UpgradeType.building);
Main.electrostaticGenerator = new upgrades_RebuyableUpgrade("electrostaticGenerator",12,upgrades_UpgradeType.building);
Main.solarPanel = new upgrades_RebuyableUpgrade("solarPanel",13,upgrades_UpgradeType.building);
Main.nuclearGenerator = new upgrades_RebuyableUpgrade("nuclearGenerator",14,upgrades_UpgradeType.building);
Main.newFormal = new upgrades_RebuyableUpgrade("newFormal",100,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"));
Main.newPhysical = new upgrades_RebuyableUpgrade("newPhysical",101,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"));
Main.newLife = new upgrades_RebuyableUpgrade("newLife",102,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"));
Main.newApplied = new upgrades_RebuyableUpgrade("newApplied",103,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"));
Main.newSocial = new upgrades_RebuyableUpgrade("newSocial",104,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1"),thx_bigint_Decimals.parse("1"));
Main.formalTheory = new upgrades_RebuyableUpgrade("formalTheory",105,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10"));
Main.physicalTheory = new upgrades_RebuyableUpgrade("physicalTheory",106,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("4"),thx_bigint_Decimals.parse("6"));
Main.lifeTheory = new upgrades_RebuyableUpgrade("lifeTheory",107,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2"),thx_bigint_Decimals.parse("2"),thx_bigint_Decimals.parse("6"));
Main.appliedTheory = new upgrades_RebuyableUpgrade("appliedTheory",108,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("3"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("7"));
Main.socialTheory = new upgrades_RebuyableUpgrade("socialTheory",109,upgrades_UpgradeType.research,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10"));
Main.breakthrough = new upgrades_RebuyableUpgrade("breakthroughResearch",110,upgrades_UpgradeType.research);
Main.upgradeCost = new upgrades_RebuyableUpgrade("upgradeCostResearch",111,upgrades_UpgradeType.research);
Main.house2 = new upgrades_OneTimeUpgrade("house2Research",10,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.house3 = new upgrades_OneTimeUpgrade("house3Research",11,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("562341325"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("511282591"),thx_bigint_Decimals.parse("511282591"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2170"),thx_bigint_Decimals.parse("63095"),thx_bigint_Decimals.parse("2170"),thx_bigint_Decimals.parse("11180"),thx_bigint_Decimals.parse("8000"));
Main.house4 = new upgrades_OneTimeUpgrade("house4Research",12,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("86596432336"),thx_bigint_Decimals.parse("371373649"),thx_bigint_Decimals.parse("209536317447"),thx_bigint_Decimals.parse("209536317447"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("68851"),thx_bigint_Decimals.parse("47862117"),thx_bigint_Decimals.parse("68851"),thx_bigint_Decimals.parse("1182123"),thx_bigint_Decimals.parse("715541"));
Main.house5 = new upgrades_OneTimeUpgrade("house5Research",13,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("46975888167064"),thx_bigint_Decimals.parse("523299099124"),thx_bigint_Decimals.parse("521959851769234"),thx_bigint_Decimals.parse("521959851769234"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10350703"),thx_bigint_Decimals.parse("1940827988668"),thx_bigint_Decimals.parse("10350703"),thx_bigint_Decimals.parse("1285268905"),thx_bigint_Decimals.parse("605273674"),thx_bigint_Decimals.parse("10000"));
Main.farm2 = new upgrades_OneTimeUpgrade("farm2Research",20,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2000"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("0"));
Main.farm3 = new upgrades_OneTimeUpgrade("farm3Research",21,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("562341325"),thx_bigint_Decimals.parse("6309573444"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2170"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("191270"),thx_bigint_Decimals.parse("11180"),thx_bigint_Decimals.parse("0"));
Main.farm4 = new upgrades_OneTimeUpgrade("farm4Research",22,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("86596432336"),thx_bigint_Decimals.parse("52480746024977"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("68851"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("282251844"),thx_bigint_Decimals.parse("1182123"),thx_bigint_Decimals.parse("0"));
Main.farm5 = new upgrades_OneTimeUpgrade("farm5Research",23,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("46975888167064"),thx_bigint_Decimals.parse("16143585568264862654"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10350703"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("33190887267647"),thx_bigint_Decimals.parse("1285268905"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"));
Main.lumberMill2 = new upgrades_OneTimeUpgrade("lumberMill2Research",30,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("400"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"));
Main.lumberMill3 = new upgrades_OneTimeUpgrade("lumberMill3Research",31,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("562341325"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("6309573444"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("8000"),thx_bigint_Decimals.parse("11180"),thx_bigint_Decimals.parse("8000"),thx_bigint_Decimals.parse("63095"),thx_bigint_Decimals.parse("0"));
Main.lumberMill4 = new upgrades_OneTimeUpgrade("lumberMill4Research",32,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("86596432336"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("52480746024977"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("715541"),thx_bigint_Decimals.parse("1182177"),thx_bigint_Decimals.parse("715541"),thx_bigint_Decimals.parse("47862117"),thx_bigint_Decimals.parse("0"));
Main.lumberMill5 = new upgrades_OneTimeUpgrade("lumberMill5Research",33,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("46975888167064"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("16143585568264750798"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("605274629"),thx_bigint_Decimals.parse("1285356992"),thx_bigint_Decimals.parse("605274629"),thx_bigint_Decimals.parse("1940827988668"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"));
Main.metalMine2 = new upgrades_OneTimeUpgrade("metalMine2Research",40,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("700"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("700"),thx_bigint_Decimals.parse("0"));
Main.metalMine3 = new upgrades_OneTimeUpgrade("metalMine3Research",41,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("562341325"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("6309573444"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("18520"),thx_bigint_Decimals.parse("63095"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("18520"),thx_bigint_Decimals.parse("0"));
Main.metalMine4 = new upgrades_OneTimeUpgrade("metalMine4Research",42,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("86596432336"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("52480746024977"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("25204068"),thx_bigint_Decimals.parse("47863009"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("25204068"),thx_bigint_Decimals.parse("0"));
Main.metalMine5 = new upgrades_OneTimeUpgrade("metalMine5Research",43,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("46975888167064"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("16143585568264750798"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("4001343956"),thx_bigint_Decimals.parse("1940885877592"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("4001343956"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"));
Main.goldMine2 = new upgrades_OneTimeUpgrade("goldMine2Research",50,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("700"),thx_bigint_Decimals.parse("7000"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.goldMine3 = new upgrades_OneTimeUpgrade("goldMine3Research",51,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("158489319246"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("511282591"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("18520"),thx_bigint_Decimals.parse("18520"),thx_bigint_Decimals.parse("63095"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.goldMine4 = new upgrades_OneTimeUpgrade("goldMine4Research",52,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("4786300923226383"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("209536317597"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2520406"),thx_bigint_Decimals.parse("2520406"),thx_bigint_Decimals.parse("47863009"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"));
Main.goldMine5 = new upgrades_OneTimeUpgrade("goldMine5Research",53,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("8953647655495938230728"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("521959852255398"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("4001343956"),thx_bigint_Decimals.parse("4001343956"),thx_bigint_Decimals.parse("1940885877592"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000"));
Main.taxCollector2 = new upgrades_OneTimeUpgrade("taxCollector2Research",60,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("500000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("5000"));
Main.taxCollector3 = new upgrades_OneTimeUpgrade("taxCollector3Research",61,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1508544084136"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("31622776"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("828613"));
Main.taxCollector4 = new upgrades_OneTimeUpgrade("taxCollector4Research",62,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("112196990670098650"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("2371373705"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("2946885155"));
Main.taxCollector5 = new upgrades_OneTimeUpgrade("taxCollector5Research",63,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("741265336574877906877972"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("523299114681"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1415732290661702"));
Main.cropHarvesterResearch = new upgrades_OneTimeUpgrade("cropHarvesterResearch",70,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.woodHarvesterResearch = new upgrades_OneTimeUpgrade("woodHarvesterResearch",71,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.metalHarvesterResearch = new upgrades_OneTimeUpgrade("metalHarvesterResearch",72,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.gatheringSchoolResearch = new upgrades_OneTimeUpgrade("gatheringSchoolResearch",73,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.toolForgeResearch = new upgrades_OneTimeUpgrade("toolForgeResearch",74,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("10000000"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("1000"),thx_bigint_Decimals.parse("200"),thx_bigint_Decimals.parse("500"),thx_bigint_Decimals.parse("400"));
Main.electricityResearch = new upgrades_OneTimeUpgrade("electricityResearch",75,thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("100000000000000"),thx_bigint_Decimals.parse("10000000000000"),thx_bigint_Decimals.parse("10000000000000"),thx_bigint_Decimals.parse("10000000000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("1000000"),thx_bigint_Decimals.parse("5000000"),thx_bigint_Decimals.parse("0"),thx_bigint_Decimals.parse("3000000"),thx_bigint_Decimals.parse("0"));
Main.resourceArray = [Main.money,Main.food,Main.wood,Main.metal,Main.population,Main.populationMax];
Main.upgradeArray = [Main.newFarmer,Main.farmerUpgrade1,Main.farmerUpgrade2,Main.newWoodcutter,Main.woodcutterUpgrade1,Main.woodcutterUpgrade2,Main.newMiner,Main.minerUpgrade1,Main.minerUpgrade2];
Main.buildingArray = [Main.house,Main.farm,Main.lumberMill,Main.metalMine,Main.taxCollector,Main.goldMine,Main.cropHarvester,Main.woodHarvester,Main.metalHarvester,Main.gatheringSchool,Main.toolForge,Main.woodBurner,Main.electrostaticGenerator,Main.solarPanel,Main.nuclearGenerator];
Main.researchArray = [Main.newFormal,Main.newPhysical,Main.newLife,Main.newApplied,Main.newSocial,Main.formalTheory,Main.physicalTheory,Main.lifeTheory,Main.appliedTheory,Main.socialTheory,Main.house2,Main.house3,Main.house4,Main.house5,Main.farm2,Main.farm3,Main.farm4,Main.farm5,Main.lumberMill2,Main.lumberMill3,Main.lumberMill4,Main.lumberMill5,Main.metalMine2,Main.metalMine3,Main.metalMine4,Main.metalMine5,Main.goldMine2,Main.goldMine3,Main.goldMine4,Main.goldMine5,Main.taxCollector2,Main.taxCollector3,Main.taxCollector4,Main.taxCollector5,Main.cropHarvesterResearch,Main.woodHarvesterResearch,Main.metalHarvesterResearch,Main.gatheringSchoolResearch,Main.toolForgeResearch,Main.electricityResearch,Main.breakthrough,Main.upgradeCost];
Main.upgradeAmountMult = thx_bigint_Decimals.fromFloat(1.1);
Main.upgradeSpeedMult = thx_bigint_Decimals.fromFloat(1.1);
Main.PERKPAGEBUTTONS = 8;
UpdateUI.MAXRESOURCERESEARCHES = 3;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
thx__$BigInt_BigInt_$Impl_$.zero = thx_bigint_Small.zero;
thx__$BigInt_BigInt_$Impl_$.one = thx_bigint_Small.one;
thx__$BigInt_BigInt_$Impl_$.two = thx_bigint_Small.two;
thx__$BigInt_BigInt_$Impl_$.negativeOne = thx_bigint_Small.negativeOne;
thx_DateConst.millisPerSecond = 1000;
thx_DateConst.millisPerMinute = 60000.;
thx_DateConst.millisPerHour = 60000. * 60;
thx_DateConst.millisPerDay = 86400000.;
thx_DateConst.daysPerYear = 365;
thx_DateConst.daysPer4Years = 1461;
thx_DateConst.daysPer100Years = 36524;
thx_DateConst.daysPer400Years = 146097;
thx_DateConst.unixEpochDays = 719162;
thx_DateConst.daysToMonth365 = [0,31,59,90,120,151,181,212,243,273,304,334,365];
thx_DateConst.daysToMonth366 = [0,31,60,91,121,152,182,213,244,274,305,335,366];
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond = 1000;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerSecond * 60;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerMinute * 60;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerDay = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millisPerHour * 24;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.hundredI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,100);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.thousandI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1000);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenThousandI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10000);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.millionI64 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1000000);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMicrosecondI64 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.tenI64;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecond = 10000;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64 = (function($this) {
	var $r;
	var x = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecond;
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	$r = this1;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMillisecondI64;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1000);
	var b = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this2;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerSecondI64;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var b = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this2;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerMinuteI64;
	var this1 = new haxe__$Int64__$_$_$Int64(0,60);
	var b = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this2;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64 = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerHourI64;
	var this1 = new haxe__$Int64__$_$_$Int64(0,24);
	var b = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this2;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear = 365;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear * 4 + 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years * 25 - 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years * 4 + 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysTo1970 = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer400Years * 4 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer100Years * 3 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPer4Years * 17 + thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysPerYear;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.unixEpochTicks = (function($this) {
	var $r;
	var a = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.ticksPerDayI64;
	var x = thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysTo1970;
	var this1 = new haxe__$Int64__$_$_$Int64(x >> 31,x);
	var b = this1;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b.low & mask;
	var bh = b.low >>> 16;
	var p00 = haxe__$Int32_Int32_$Impl_$._mul(al,bl);
	var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah,bl);
	var p01 = haxe__$Int32_Int32_$Impl_$._mul(al,bh);
	var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 = p01 << 16;
	low = low + p01 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 = p10 << 16;
	low = low + p10 | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p10) < 0) {
		var ret1 = high++;
		high = high | 0;
	}
	high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low,b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high,b.low) | 0) | 0;
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	$r = this2;
	return $r;
}(this));
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_YEAR = 0;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY_OF_YEAR = 1;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_MONTH = 2;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.DATE_PART_DAY = 3;
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth365 = [0,31,59,90,120,151,181,212,243,273,304,334,365];
thx__$DateTimeUtc_DateTimeUtc_$Impl_$.daysToMonth366 = [0,31,60,91,121,152,182,213,244,274,305,335,366];
thx_Dates.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Dates.compare);
thx_ERegs.ESCAPE_PATTERN = new EReg("([-\\[\\]{}()*+?\\.,\\\\^$|# \t\r\n])","g");
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?\\d+(\\.\\d+)?(e-?\\d+)?$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Int64s.one = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.two = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,2);
	$r = this1;
	return $r;
}(this));
thx_Int64s.zero = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
thx_Int64s.ten = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	$r = this1;
	return $r;
}(this));
thx_Int64s.maxValue = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(2147483647,-1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.minValue = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(-2147483648,1);
	$r = this1;
	return $r;
}(this));
thx_Int64s.min = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(-2147483648,0);
	$r = this1;
	return $r;
}(this));
thx__$LocalDate_LocalDate_$Impl_$.DATE_PART_YEAR = 0;
thx__$LocalDate_LocalDate_$Impl_$.DATE_PART_DAY_OF_YEAR = 1;
thx__$LocalDate_LocalDate_$Impl_$.DATE_PART_MONTH = 2;
thx__$LocalDate_LocalDate_$Impl_$.DATE_PART_DAY = 3;
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0[1]) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx__$Path_Path_$Impl_$.nixSeparator = "/";
thx__$Path_Path_$Impl_$.win32Separator = "\\";
thx__$QueryString_QueryString_$Impl_$.separator = "&";
thx__$QueryString_QueryString_$Impl_$.assignment = "=";
thx__$Rational_Rational_$Impl_$.zero = { num : thx__$BigInt_BigInt_$Impl_$.one, den : thx__$BigInt_BigInt_$Impl_$.zero};
thx__$Time_Time_$Impl_$.zero = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var this2 = this1;
	$r = this2;
	return $r;
}(this));
thx__$Time_Time_$Impl_$.oneDay = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,24);
	var this2 = this1;
	$r = this2;
	return $r;
}(this));
thx_Timer.FRAME_RATE = Math.round(16.666666666666668);
thx__$Url_Url_$Impl_$.pattern = new EReg("^((((?:([^:/#\\?]+):)?(?:(//)?((?:(([^:@/#\\?]+)(?:[:]([^:@/#\\?]+))?)@)?(([^:/#\\?\\]\\[]+|\\[[^/\\]@#?]+\\])(?:[:]([0-9]+))?))?)?)?((/?(?:[^/\\?#]+/+)*)([^\\?#]*)))?(?:\\?([^#]+))?)(?:#(.*))?","");
thx_fp__$Map_Map_$Impl_$.delta = 5;
thx_fp__$Map_Map_$Impl_$.ratio = 2;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=EvolvingCivilizationsIdle.js.map